// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.6.1
// source: spaceone/api/alert_manager/v1/alert.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertUrgency int32

const (
	AlertUrgency_ALERT_URGENCY_NONE AlertUrgency = 0
	AlertUrgency_HIGH               AlertUrgency = 1
	AlertUrgency_LOW                AlertUrgency = 2
)

// Enum value maps for AlertUrgency.
var (
	AlertUrgency_name = map[int32]string{
		0: "ALERT_URGENCY_NONE",
		1: "HIGH",
		2: "LOW",
	}
	AlertUrgency_value = map[string]int32{
		"ALERT_URGENCY_NONE": 0,
		"HIGH":               1,
		"LOW":                2,
	}
)

func (x AlertUrgency) Enum() *AlertUrgency {
	p := new(AlertUrgency)
	*p = x
	return p
}

func (x AlertUrgency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertUrgency) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[0].Descriptor()
}

func (AlertUrgency) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[0]
}

func (x AlertUrgency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertUrgency.Descriptor instead.
func (AlertUrgency) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{0}
}

type AlertUpdateRequest_AlertStatus int32

const (
	AlertUpdateRequest_ALERT_STATE_NONE AlertUpdateRequest_AlertStatus = 0
	AlertUpdateRequest_TRIGGERED        AlertUpdateRequest_AlertStatus = 1
	AlertUpdateRequest_ACKNOWLEDGED     AlertUpdateRequest_AlertStatus = 2
	AlertUpdateRequest_RESOLVED         AlertUpdateRequest_AlertStatus = 3
	AlertUpdateRequest_IGNORED          AlertUpdateRequest_AlertStatus = 4
)

// Enum value maps for AlertUpdateRequest_AlertStatus.
var (
	AlertUpdateRequest_AlertStatus_name = map[int32]string{
		0: "ALERT_STATE_NONE",
		1: "TRIGGERED",
		2: "ACKNOWLEDGED",
		3: "RESOLVED",
		4: "IGNORED",
	}
	AlertUpdateRequest_AlertStatus_value = map[string]int32{
		"ALERT_STATE_NONE": 0,
		"TRIGGERED":        1,
		"ACKNOWLEDGED":     2,
		"RESOLVED":         3,
		"IGNORED":          4,
	}
)

func (x AlertUpdateRequest_AlertStatus) Enum() *AlertUpdateRequest_AlertStatus {
	p := new(AlertUpdateRequest_AlertStatus)
	*p = x
	return p
}

func (x AlertUpdateRequest_AlertStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertUpdateRequest_AlertStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[1].Descriptor()
}

func (AlertUpdateRequest_AlertStatus) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[1]
}

func (x AlertUpdateRequest_AlertStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertUpdateRequest_AlertStatus.Descriptor instead.
func (AlertUpdateRequest_AlertStatus) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{2, 0}
}

type AlertHistoryRequest_AlertAction int32

const (
	AlertHistoryRequest_NONE         AlertHistoryRequest_AlertAction = 0
	AlertHistoryRequest_TRIGGERED    AlertHistoryRequest_AlertAction = 1
	AlertHistoryRequest_ACKNOWLEDGED AlertHistoryRequest_AlertAction = 2
	AlertHistoryRequest_RESOLVED     AlertHistoryRequest_AlertAction = 3
	AlertHistoryRequest_NOTIFIED     AlertHistoryRequest_AlertAction = 4
	AlertHistoryRequest_EVENT_PUSHED AlertHistoryRequest_AlertAction = 5
)

// Enum value maps for AlertHistoryRequest_AlertAction.
var (
	AlertHistoryRequest_AlertAction_name = map[int32]string{
		0: "NONE",
		1: "TRIGGERED",
		2: "ACKNOWLEDGED",
		3: "RESOLVED",
		4: "NOTIFIED",
		5: "EVENT_PUSHED",
	}
	AlertHistoryRequest_AlertAction_value = map[string]int32{
		"NONE":         0,
		"TRIGGERED":    1,
		"ACKNOWLEDGED": 2,
		"RESOLVED":     3,
		"NOTIFIED":     4,
		"EVENT_PUSHED": 5,
	}
)

func (x AlertHistoryRequest_AlertAction) Enum() *AlertHistoryRequest_AlertAction {
	p := new(AlertHistoryRequest_AlertAction)
	*p = x
	return p
}

func (x AlertHistoryRequest_AlertAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertHistoryRequest_AlertAction) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[2].Descriptor()
}

func (AlertHistoryRequest_AlertAction) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[2]
}

func (x AlertHistoryRequest_AlertAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertHistoryRequest_AlertAction.Descriptor instead.
func (AlertHistoryRequest_AlertAction) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{4, 0}
}

type AlertSearchQuery_AlertStatus int32

const (
	AlertSearchQuery_ALERT_STATE_NONE AlertSearchQuery_AlertStatus = 0
	AlertSearchQuery_TRIGGERED        AlertSearchQuery_AlertStatus = 1
	AlertSearchQuery_ACKNOWLEDGED     AlertSearchQuery_AlertStatus = 2
	AlertSearchQuery_RESOLVED         AlertSearchQuery_AlertStatus = 3
	AlertSearchQuery_IGNORED          AlertSearchQuery_AlertStatus = 4
	AlertSearchQuery_ERROR            AlertSearchQuery_AlertStatus = 5
)

// Enum value maps for AlertSearchQuery_AlertStatus.
var (
	AlertSearchQuery_AlertStatus_name = map[int32]string{
		0: "ALERT_STATE_NONE",
		1: "TRIGGERED",
		2: "ACKNOWLEDGED",
		3: "RESOLVED",
		4: "IGNORED",
		5: "ERROR",
	}
	AlertSearchQuery_AlertStatus_value = map[string]int32{
		"ALERT_STATE_NONE": 0,
		"TRIGGERED":        1,
		"ACKNOWLEDGED":     2,
		"RESOLVED":         3,
		"IGNORED":          4,
		"ERROR":            5,
	}
)

func (x AlertSearchQuery_AlertStatus) Enum() *AlertSearchQuery_AlertStatus {
	p := new(AlertSearchQuery_AlertStatus)
	*p = x
	return p
}

func (x AlertSearchQuery_AlertStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertSearchQuery_AlertStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[3].Descriptor()
}

func (AlertSearchQuery_AlertStatus) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[3]
}

func (x AlertSearchQuery_AlertStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertSearchQuery_AlertStatus.Descriptor instead.
func (AlertSearchQuery_AlertStatus) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{5, 0}
}

type AlertInfo_AlertStatus int32

const (
	AlertInfo_ALERT_STATE_NONE AlertInfo_AlertStatus = 0
	AlertInfo_TRIGGERED        AlertInfo_AlertStatus = 1
	AlertInfo_ACKNOWLEDGED     AlertInfo_AlertStatus = 2
	AlertInfo_RESOLVED         AlertInfo_AlertStatus = 3
	AlertInfo_IGNORED          AlertInfo_AlertStatus = 4
	AlertInfo_ERROR            AlertInfo_AlertStatus = 5
)

// Enum value maps for AlertInfo_AlertStatus.
var (
	AlertInfo_AlertStatus_name = map[int32]string{
		0: "ALERT_STATE_NONE",
		1: "TRIGGERED",
		2: "ACKNOWLEDGED",
		3: "RESOLVED",
		4: "IGNORED",
		5: "ERROR",
	}
	AlertInfo_AlertStatus_value = map[string]int32{
		"ALERT_STATE_NONE": 0,
		"TRIGGERED":        1,
		"ACKNOWLEDGED":     2,
		"RESOLVED":         3,
		"IGNORED":          4,
		"ERROR":            5,
	}
)

func (x AlertInfo_AlertStatus) Enum() *AlertInfo_AlertStatus {
	p := new(AlertInfo_AlertStatus)
	*p = x
	return p
}

func (x AlertInfo_AlertStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertInfo_AlertStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[4].Descriptor()
}

func (AlertInfo_AlertStatus) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[4]
}

func (x AlertInfo_AlertStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertInfo_AlertStatus.Descriptor instead.
func (AlertInfo_AlertStatus) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{8, 0}
}

type AlertInfo_TriggeredType int32

const (
	AlertInfo_TRIGGERD_BY_NONE AlertInfo_TriggeredType = 0
	AlertInfo_USER             AlertInfo_TriggeredType = 1
	AlertInfo_APP              AlertInfo_TriggeredType = 2
	AlertInfo_WEBHOOK          AlertInfo_TriggeredType = 3
)

// Enum value maps for AlertInfo_TriggeredType.
var (
	AlertInfo_TriggeredType_name = map[int32]string{
		0: "TRIGGERD_BY_NONE",
		1: "USER",
		2: "APP",
		3: "WEBHOOK",
	}
	AlertInfo_TriggeredType_value = map[string]int32{
		"TRIGGERD_BY_NONE": 0,
		"USER":             1,
		"APP":              2,
		"WEBHOOK":          3,
	}
)

func (x AlertInfo_TriggeredType) Enum() *AlertInfo_TriggeredType {
	p := new(AlertInfo_TriggeredType)
	*p = x
	return p
}

func (x AlertInfo_TriggeredType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertInfo_TriggeredType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[5].Descriptor()
}

func (AlertInfo_TriggeredType) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[5]
}

func (x AlertInfo_TriggeredType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertInfo_TriggeredType.Descriptor instead.
func (AlertInfo_TriggeredType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{8, 1}
}

type AlertEventInfo_AlertAction int32

const (
	AlertEventInfo_NONE         AlertEventInfo_AlertAction = 0
	AlertEventInfo_TRIGGERED    AlertEventInfo_AlertAction = 1
	AlertEventInfo_ACKNOWLEDGED AlertEventInfo_AlertAction = 2
	AlertEventInfo_RESOLVED     AlertEventInfo_AlertAction = 3
	AlertEventInfo_NOTIFIED     AlertEventInfo_AlertAction = 4
	AlertEventInfo_EVENT_PUSHED AlertEventInfo_AlertAction = 5
)

// Enum value maps for AlertEventInfo_AlertAction.
var (
	AlertEventInfo_AlertAction_name = map[int32]string{
		0: "NONE",
		1: "TRIGGERED",
		2: "ACKNOWLEDGED",
		3: "RESOLVED",
		4: "NOTIFIED",
		5: "EVENT_PUSHED",
	}
	AlertEventInfo_AlertAction_value = map[string]int32{
		"NONE":         0,
		"TRIGGERED":    1,
		"ACKNOWLEDGED": 2,
		"RESOLVED":     3,
		"NOTIFIED":     4,
		"EVENT_PUSHED": 5,
	}
)

func (x AlertEventInfo_AlertAction) Enum() *AlertEventInfo_AlertAction {
	p := new(AlertEventInfo_AlertAction)
	*p = x
	return p
}

func (x AlertEventInfo_AlertAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertEventInfo_AlertAction) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[6].Descriptor()
}

func (AlertEventInfo_AlertAction) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_alert_proto_enumTypes[6]
}

func (x AlertEventInfo_AlertAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertEventInfo_AlertAction.Descriptor instead.
func (AlertEventInfo_AlertAction) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{10, 0}
}

type AlertResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	AssetId string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// +optional
	AssetType     string `protobuf:"bytes,3,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertResource) Reset() {
	*x = AlertResource{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertResource) ProtoMessage() {}

func (x *AlertResource) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertResource.ProtoReflect.Descriptor instead.
func (*AlertResource) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{0}
}

func (x *AlertResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertResource) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AlertResource) GetAssetType() string {
	if x != nil {
		return x.AssetType
	}
	return ""
}

type AlertCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Title string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// +optional
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	Urgency AlertUrgency `protobuf:"varint,3,opt,name=urgency,proto3,enum=spaceone.api.alert_manager.v1.AlertUrgency" json:"urgency,omitempty"`
	// +optional
	Severity EventSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=spaceone.api.alert_manager.v1.EventSeverity" json:"severity,omitempty"`
	// +optional
	Rule string `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
	// +optional
	ImageUrl string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// +optional
	Resources []*AlertResource `protobuf:"bytes,7,rep,name=resources,proto3" json:"resources,omitempty"`
	// +optional
	AdditionalInfo *_struct.Struct `protobuf:"bytes,11,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	ServiceId      string          `protobuf:"bytes,21,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AlertCreateRequest) Reset() {
	*x = AlertCreateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertCreateRequest) ProtoMessage() {}

func (x *AlertCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertCreateRequest.ProtoReflect.Descriptor instead.
func (*AlertCreateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{1}
}

func (x *AlertCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlertCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertCreateRequest) GetUrgency() AlertUrgency {
	if x != nil {
		return x.Urgency
	}
	return AlertUrgency_ALERT_URGENCY_NONE
}

func (x *AlertCreateRequest) GetSeverity() EventSeverity {
	if x != nil {
		return x.Severity
	}
	return EventSeverity_EVENT_SEVERITY_NONE
}

func (x *AlertCreateRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *AlertCreateRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AlertCreateRequest) GetResources() []*AlertResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *AlertCreateRequest) GetAdditionalInfo() *_struct.Struct {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

func (x *AlertCreateRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type AlertUpdateRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AlertId string                 `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	// +optional
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// +optional
	Status AlertUpdateRequest_AlertStatus `protobuf:"varint,3,opt,name=status,proto3,enum=spaceone.api.alert_manager.v1.AlertUpdateRequest_AlertStatus" json:"status,omitempty"`
	// +optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	Urgency       AlertUrgency `protobuf:"varint,5,opt,name=urgency,proto3,enum=spaceone.api.alert_manager.v1.AlertUrgency" json:"urgency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertUpdateRequest) Reset() {
	*x = AlertUpdateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertUpdateRequest) ProtoMessage() {}

func (x *AlertUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertUpdateRequest.ProtoReflect.Descriptor instead.
func (*AlertUpdateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{2}
}

func (x *AlertUpdateRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlertUpdateRequest) GetStatus() AlertUpdateRequest_AlertStatus {
	if x != nil {
		return x.Status
	}
	return AlertUpdateRequest_ALERT_STATE_NONE
}

func (x *AlertUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertUpdateRequest) GetUrgency() AlertUrgency {
	if x != nil {
		return x.Urgency
	}
	return AlertUrgency_ALERT_URGENCY_NONE
}

type AlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlertId       string                 `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertRequest) Reset() {
	*x = AlertRequest{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRequest) ProtoMessage() {}

func (x *AlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRequest.ProtoReflect.Descriptor instead.
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{3}
}

func (x *AlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

type AlertHistoryRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AlertId string                 `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	// +optional
	Action AlertHistoryRequest_AlertAction `protobuf:"varint,2,opt,name=action,proto3,enum=spaceone.api.alert_manager.v1.AlertHistoryRequest_AlertAction" json:"action,omitempty"`
	// +optional
	IncludeEventInfo bool `protobuf:"varint,3,opt,name=include_event_info,json=includeEventInfo,proto3" json:"include_event_info,omitempty"`
	// +optional
	Sort          []*v2.Sort `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertHistoryRequest) Reset() {
	*x = AlertHistoryRequest{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertHistoryRequest) ProtoMessage() {}

func (x *AlertHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertHistoryRequest.ProtoReflect.Descriptor instead.
func (*AlertHistoryRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{4}
}

func (x *AlertHistoryRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertHistoryRequest) GetAction() AlertHistoryRequest_AlertAction {
	if x != nil {
		return x.Action
	}
	return AlertHistoryRequest_NONE
}

func (x *AlertHistoryRequest) GetIncludeEventInfo() bool {
	if x != nil {
		return x.IncludeEventInfo
	}
	return false
}

func (x *AlertHistoryRequest) GetSort() []*v2.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type AlertSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	// +optional
	Status AlertSearchQuery_AlertStatus `protobuf:"varint,3,opt,name=status,proto3,enum=spaceone.api.alert_manager.v1.AlertSearchQuery_AlertStatus" json:"status,omitempty"`
	// +optional
	Urgency AlertUrgency `protobuf:"varint,4,opt,name=urgency,proto3,enum=spaceone.api.alert_manager.v1.AlertUrgency" json:"urgency,omitempty"`
	// +optional
	Severity EventSeverity `protobuf:"varint,5,opt,name=severity,proto3,enum=spaceone.api.alert_manager.v1.EventSeverity" json:"severity,omitempty"`
	// +optional
	Resource string `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	// +optional
	TriggeredType string `protobuf:"bytes,7,opt,name=triggered_type,json=triggeredType,proto3" json:"triggered_type,omitempty"`
	// +optional
	TriggeredBy string `protobuf:"bytes,8,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// +optional
	ServiceId string `protobuf:"bytes,22,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// +optional
	WebhookId string `protobuf:"bytes,23,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	// +optional
	EscalationPolicyId string `protobuf:"bytes,24,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AlertSearchQuery) Reset() {
	*x = AlertSearchQuery{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertSearchQuery) ProtoMessage() {}

func (x *AlertSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertSearchQuery.ProtoReflect.Descriptor instead.
func (*AlertSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{5}
}

func (x *AlertSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *AlertSearchQuery) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertSearchQuery) GetStatus() AlertSearchQuery_AlertStatus {
	if x != nil {
		return x.Status
	}
	return AlertSearchQuery_ALERT_STATE_NONE
}

func (x *AlertSearchQuery) GetUrgency() AlertUrgency {
	if x != nil {
		return x.Urgency
	}
	return AlertUrgency_ALERT_URGENCY_NONE
}

func (x *AlertSearchQuery) GetSeverity() EventSeverity {
	if x != nil {
		return x.Severity
	}
	return EventSeverity_EVENT_SEVERITY_NONE
}

func (x *AlertSearchQuery) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AlertSearchQuery) GetTriggeredType() string {
	if x != nil {
		return x.TriggeredType
	}
	return ""
}

func (x *AlertSearchQuery) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

func (x *AlertSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *AlertSearchQuery) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AlertSearchQuery) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *AlertSearchQuery) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

type AlertAnalyzeQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.AnalyzeQuery       `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertAnalyzeQuery) Reset() {
	*x = AlertAnalyzeQuery{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertAnalyzeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertAnalyzeQuery) ProtoMessage() {}

func (x *AlertAnalyzeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertAnalyzeQuery.ProtoReflect.Descriptor instead.
func (*AlertAnalyzeQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{6}
}

func (x *AlertAnalyzeQuery) GetQuery() *v2.AnalyzeQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type AlertStatQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertStatQuery) Reset() {
	*x = AlertStatQuery{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertStatQuery) ProtoMessage() {}

func (x *AlertStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertStatQuery.ProtoReflect.Descriptor instead.
func (*AlertStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{7}
}

func (x *AlertStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type AlertInfo struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	AlertId            string                  `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	Title              string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status             AlertInfo_AlertStatus   `protobuf:"varint,3,opt,name=status,proto3,enum=spaceone.api.alert_manager.v1.AlertInfo_AlertStatus" json:"status,omitempty"`
	Description        string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Urgency            AlertUrgency            `protobuf:"varint,5,opt,name=urgency,proto3,enum=spaceone.api.alert_manager.v1.AlertUrgency" json:"urgency,omitempty"`
	Severity           EventSeverity           `protobuf:"varint,6,opt,name=severity,proto3,enum=spaceone.api.alert_manager.v1.EventSeverity" json:"severity,omitempty"`
	Rule               string                  `protobuf:"bytes,7,opt,name=rule,proto3" json:"rule,omitempty"`
	ImageUrl           string                  `protobuf:"bytes,8,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Resources          []*AlertResource        `protobuf:"bytes,9,rep,name=resources,proto3" json:"resources,omitempty"`
	TriggeredType      AlertInfo_TriggeredType `protobuf:"varint,10,opt,name=triggered_type,json=triggeredType,proto3,enum=spaceone.api.alert_manager.v1.AlertInfo_TriggeredType" json:"triggered_type,omitempty"`
	TriggeredBy        string                  `protobuf:"bytes,11,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
	AdditionalInfo     *_struct.Struct         `protobuf:"bytes,15,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	Labels             []string                `protobuf:"bytes,16,rep,name=labels,proto3" json:"labels,omitempty"`
	DomainId           string                  `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId        string                  `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ServiceId          string                  `protobuf:"bytes,23,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	WebhookId          string                  `protobuf:"bytes,24,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	EscalationPolicyId string                  `protobuf:"bytes,25,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	CreatedAt          string                  `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string                  `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AcknowledgedAt     string                  `protobuf:"bytes,33,opt,name=acknowledged_at,json=acknowledgedAt,proto3" json:"acknowledged_at,omitempty"`
	ResolvedAt         string                  `protobuf:"bytes,34,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AlertInfo) Reset() {
	*x = AlertInfo{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertInfo) ProtoMessage() {}

func (x *AlertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertInfo.ProtoReflect.Descriptor instead.
func (*AlertInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{8}
}

func (x *AlertInfo) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlertInfo) GetStatus() AlertInfo_AlertStatus {
	if x != nil {
		return x.Status
	}
	return AlertInfo_ALERT_STATE_NONE
}

func (x *AlertInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertInfo) GetUrgency() AlertUrgency {
	if x != nil {
		return x.Urgency
	}
	return AlertUrgency_ALERT_URGENCY_NONE
}

func (x *AlertInfo) GetSeverity() EventSeverity {
	if x != nil {
		return x.Severity
	}
	return EventSeverity_EVENT_SEVERITY_NONE
}

func (x *AlertInfo) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *AlertInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AlertInfo) GetResources() []*AlertResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *AlertInfo) GetTriggeredType() AlertInfo_TriggeredType {
	if x != nil {
		return x.TriggeredType
	}
	return AlertInfo_TRIGGERD_BY_NONE
}

func (x *AlertInfo) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

func (x *AlertInfo) GetAdditionalInfo() *_struct.Struct {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

func (x *AlertInfo) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AlertInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *AlertInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *AlertInfo) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AlertInfo) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *AlertInfo) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *AlertInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AlertInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AlertInfo) GetAcknowledgedAt() string {
	if x != nil {
		return x.AcknowledgedAt
	}
	return ""
}

func (x *AlertInfo) GetResolvedAt() string {
	if x != nil {
		return x.ResolvedAt
	}
	return ""
}

type AlertsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*AlertInfo           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertsInfo) Reset() {
	*x = AlertsInfo{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertsInfo) ProtoMessage() {}

func (x *AlertsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertsInfo.ProtoReflect.Descriptor instead.
func (*AlertsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{9}
}

func (x *AlertsInfo) GetResults() []*AlertInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *AlertsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type AlertEventInfo struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	AlertId       string                     `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	Action        AlertEventInfo_AlertAction `protobuf:"varint,2,opt,name=action,proto3,enum=spaceone.api.alert_manager.v1.AlertEventInfo_AlertAction" json:"action,omitempty"`
	Description   string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EventInfo     *EventInfo                 `protobuf:"bytes,4,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`
	CreatedAt     string                     `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy     string                     `protobuf:"bytes,22,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertEventInfo) Reset() {
	*x = AlertEventInfo{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEventInfo) ProtoMessage() {}

func (x *AlertEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEventInfo.ProtoReflect.Descriptor instead.
func (*AlertEventInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{10}
}

func (x *AlertEventInfo) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertEventInfo) GetAction() AlertEventInfo_AlertAction {
	if x != nil {
		return x.Action
	}
	return AlertEventInfo_NONE
}

func (x *AlertEventInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertEventInfo) GetEventInfo() *EventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *AlertEventInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AlertEventInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type AlertHistoryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*AlertEventInfo      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertHistoryInfo) Reset() {
	*x = AlertHistoryInfo{}
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertHistoryInfo) ProtoMessage() {}

func (x *AlertHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_alert_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertHistoryInfo.ProtoReflect.Descriptor instead.
func (*AlertHistoryInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP(), []int{11}
}

func (x *AlertHistoryInfo) GetResults() []*AlertEventInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *AlertHistoryInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_alert_manager_v1_alert_proto protoreflect.FileDescriptor

var file_spaceone_api_alert_manager_v1_alert_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5d, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xbb, 0x03, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x75, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x4a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe6, 0x02,
	0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x75, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5f, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52,
	0x49, 0x47, 0x47, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b,
	0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x47, 0x4e,
	0x4f, 0x52, 0x45, 0x44, 0x10, 0x04, 0x22, 0x29, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49,
	0x64, 0x22, 0xce, 0x02, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x66, 0x0a, 0x0b, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x45, 0x44,
	0x10, 0x05, 0x22, 0xab, 0x05, 0x0a, 0x10, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x75, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e,
	0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x47, 0x4e, 0x4f,
	0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05,
	0x22, 0x4d, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x4d, 0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x81,
	0x09, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x55, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x75, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x4a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x42, 0x79, 0x12, 0x40, 0x0a,
	0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x6a, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x10, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44,
	0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x22, 0x45, 0x0a, 0x0d, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x50, 0x50, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b,
	0x10, 0x03, 0x22, 0x71, 0x0a, 0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8f, 0x03, 0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x66, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47,
	0x47, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f,
	0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53,
	0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x55, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x22, 0x7c, 0x0a, 0x10, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x39, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x55,
	0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x32, 0xd5, 0x08, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x90, 0x01, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x90, 0x01,
	0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a,
	0x22, 0x1e, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x78, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x67, 0x65,
	0x74, 0x12, 0x8b, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x29, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x9a, 0x01, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x80, 0x01, 0x0a,
	0x07, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12,
	0x77, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65,
	0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_alert_manager_v1_alert_proto_rawDescOnce sync.Once
	file_spaceone_api_alert_manager_v1_alert_proto_rawDescData = file_spaceone_api_alert_manager_v1_alert_proto_rawDesc
)

func file_spaceone_api_alert_manager_v1_alert_proto_rawDescGZIP() []byte {
	file_spaceone_api_alert_manager_v1_alert_proto_rawDescOnce.Do(func() {
		file_spaceone_api_alert_manager_v1_alert_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_alert_manager_v1_alert_proto_rawDescData)
	})
	return file_spaceone_api_alert_manager_v1_alert_proto_rawDescData
}

var file_spaceone_api_alert_manager_v1_alert_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_spaceone_api_alert_manager_v1_alert_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_spaceone_api_alert_manager_v1_alert_proto_goTypes = []any{
	(AlertUrgency)(0),                    // 0: spaceone.api.alert_manager.v1.AlertUrgency
	(AlertUpdateRequest_AlertStatus)(0),  // 1: spaceone.api.alert_manager.v1.AlertUpdateRequest.AlertStatus
	(AlertHistoryRequest_AlertAction)(0), // 2: spaceone.api.alert_manager.v1.AlertHistoryRequest.AlertAction
	(AlertSearchQuery_AlertStatus)(0),    // 3: spaceone.api.alert_manager.v1.AlertSearchQuery.AlertStatus
	(AlertInfo_AlertStatus)(0),           // 4: spaceone.api.alert_manager.v1.AlertInfo.AlertStatus
	(AlertInfo_TriggeredType)(0),         // 5: spaceone.api.alert_manager.v1.AlertInfo.TriggeredType
	(AlertEventInfo_AlertAction)(0),      // 6: spaceone.api.alert_manager.v1.AlertEventInfo.AlertAction
	(*AlertResource)(nil),                // 7: spaceone.api.alert_manager.v1.AlertResource
	(*AlertCreateRequest)(nil),           // 8: spaceone.api.alert_manager.v1.AlertCreateRequest
	(*AlertUpdateRequest)(nil),           // 9: spaceone.api.alert_manager.v1.AlertUpdateRequest
	(*AlertRequest)(nil),                 // 10: spaceone.api.alert_manager.v1.AlertRequest
	(*AlertHistoryRequest)(nil),          // 11: spaceone.api.alert_manager.v1.AlertHistoryRequest
	(*AlertSearchQuery)(nil),             // 12: spaceone.api.alert_manager.v1.AlertSearchQuery
	(*AlertAnalyzeQuery)(nil),            // 13: spaceone.api.alert_manager.v1.AlertAnalyzeQuery
	(*AlertStatQuery)(nil),               // 14: spaceone.api.alert_manager.v1.AlertStatQuery
	(*AlertInfo)(nil),                    // 15: spaceone.api.alert_manager.v1.AlertInfo
	(*AlertsInfo)(nil),                   // 16: spaceone.api.alert_manager.v1.AlertsInfo
	(*AlertEventInfo)(nil),               // 17: spaceone.api.alert_manager.v1.AlertEventInfo
	(*AlertHistoryInfo)(nil),             // 18: spaceone.api.alert_manager.v1.AlertHistoryInfo
	(EventSeverity)(0),                   // 19: spaceone.api.alert_manager.v1.EventSeverity
	(*_struct.Struct)(nil),               // 20: google.protobuf.Struct
	(*v2.Sort)(nil),                      // 21: spaceone.api.core.v2.Sort
	(*v2.Query)(nil),                     // 22: spaceone.api.core.v2.Query
	(*v2.AnalyzeQuery)(nil),              // 23: spaceone.api.core.v2.AnalyzeQuery
	(*v2.StatisticsQuery)(nil),           // 24: spaceone.api.core.v2.StatisticsQuery
	(*EventInfo)(nil),                    // 25: spaceone.api.alert_manager.v1.EventInfo
	(*empty.Empty)(nil),                  // 26: google.protobuf.Empty
}
var file_spaceone_api_alert_manager_v1_alert_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.alert_manager.v1.AlertCreateRequest.urgency:type_name -> spaceone.api.alert_manager.v1.AlertUrgency
	19, // 1: spaceone.api.alert_manager.v1.AlertCreateRequest.severity:type_name -> spaceone.api.alert_manager.v1.EventSeverity
	7,  // 2: spaceone.api.alert_manager.v1.AlertCreateRequest.resources:type_name -> spaceone.api.alert_manager.v1.AlertResource
	20, // 3: spaceone.api.alert_manager.v1.AlertCreateRequest.additional_info:type_name -> google.protobuf.Struct
	1,  // 4: spaceone.api.alert_manager.v1.AlertUpdateRequest.status:type_name -> spaceone.api.alert_manager.v1.AlertUpdateRequest.AlertStatus
	0,  // 5: spaceone.api.alert_manager.v1.AlertUpdateRequest.urgency:type_name -> spaceone.api.alert_manager.v1.AlertUrgency
	2,  // 6: spaceone.api.alert_manager.v1.AlertHistoryRequest.action:type_name -> spaceone.api.alert_manager.v1.AlertHistoryRequest.AlertAction
	21, // 7: spaceone.api.alert_manager.v1.AlertHistoryRequest.sort:type_name -> spaceone.api.core.v2.Sort
	22, // 8: spaceone.api.alert_manager.v1.AlertSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	3,  // 9: spaceone.api.alert_manager.v1.AlertSearchQuery.status:type_name -> spaceone.api.alert_manager.v1.AlertSearchQuery.AlertStatus
	0,  // 10: spaceone.api.alert_manager.v1.AlertSearchQuery.urgency:type_name -> spaceone.api.alert_manager.v1.AlertUrgency
	19, // 11: spaceone.api.alert_manager.v1.AlertSearchQuery.severity:type_name -> spaceone.api.alert_manager.v1.EventSeverity
	23, // 12: spaceone.api.alert_manager.v1.AlertAnalyzeQuery.query:type_name -> spaceone.api.core.v2.AnalyzeQuery
	24, // 13: spaceone.api.alert_manager.v1.AlertStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	4,  // 14: spaceone.api.alert_manager.v1.AlertInfo.status:type_name -> spaceone.api.alert_manager.v1.AlertInfo.AlertStatus
	0,  // 15: spaceone.api.alert_manager.v1.AlertInfo.urgency:type_name -> spaceone.api.alert_manager.v1.AlertUrgency
	19, // 16: spaceone.api.alert_manager.v1.AlertInfo.severity:type_name -> spaceone.api.alert_manager.v1.EventSeverity
	7,  // 17: spaceone.api.alert_manager.v1.AlertInfo.resources:type_name -> spaceone.api.alert_manager.v1.AlertResource
	5,  // 18: spaceone.api.alert_manager.v1.AlertInfo.triggered_type:type_name -> spaceone.api.alert_manager.v1.AlertInfo.TriggeredType
	20, // 19: spaceone.api.alert_manager.v1.AlertInfo.additional_info:type_name -> google.protobuf.Struct
	15, // 20: spaceone.api.alert_manager.v1.AlertsInfo.results:type_name -> spaceone.api.alert_manager.v1.AlertInfo
	6,  // 21: spaceone.api.alert_manager.v1.AlertEventInfo.action:type_name -> spaceone.api.alert_manager.v1.AlertEventInfo.AlertAction
	25, // 22: spaceone.api.alert_manager.v1.AlertEventInfo.event_info:type_name -> spaceone.api.alert_manager.v1.EventInfo
	17, // 23: spaceone.api.alert_manager.v1.AlertHistoryInfo.results:type_name -> spaceone.api.alert_manager.v1.AlertEventInfo
	8,  // 24: spaceone.api.alert_manager.v1.Alert.create:input_type -> spaceone.api.alert_manager.v1.AlertCreateRequest
	9,  // 25: spaceone.api.alert_manager.v1.Alert.update:input_type -> spaceone.api.alert_manager.v1.AlertUpdateRequest
	10, // 26: spaceone.api.alert_manager.v1.Alert.delete:input_type -> spaceone.api.alert_manager.v1.AlertRequest
	10, // 27: spaceone.api.alert_manager.v1.Alert.get:input_type -> spaceone.api.alert_manager.v1.AlertRequest
	12, // 28: spaceone.api.alert_manager.v1.Alert.list:input_type -> spaceone.api.alert_manager.v1.AlertSearchQuery
	11, // 29: spaceone.api.alert_manager.v1.Alert.history:input_type -> spaceone.api.alert_manager.v1.AlertHistoryRequest
	13, // 30: spaceone.api.alert_manager.v1.Alert.analyze:input_type -> spaceone.api.alert_manager.v1.AlertAnalyzeQuery
	14, // 31: spaceone.api.alert_manager.v1.Alert.stat:input_type -> spaceone.api.alert_manager.v1.AlertStatQuery
	15, // 32: spaceone.api.alert_manager.v1.Alert.create:output_type -> spaceone.api.alert_manager.v1.AlertInfo
	15, // 33: spaceone.api.alert_manager.v1.Alert.update:output_type -> spaceone.api.alert_manager.v1.AlertInfo
	26, // 34: spaceone.api.alert_manager.v1.Alert.delete:output_type -> google.protobuf.Empty
	15, // 35: spaceone.api.alert_manager.v1.Alert.get:output_type -> spaceone.api.alert_manager.v1.AlertInfo
	16, // 36: spaceone.api.alert_manager.v1.Alert.list:output_type -> spaceone.api.alert_manager.v1.AlertsInfo
	18, // 37: spaceone.api.alert_manager.v1.Alert.history:output_type -> spaceone.api.alert_manager.v1.AlertHistoryInfo
	20, // 38: spaceone.api.alert_manager.v1.Alert.analyze:output_type -> google.protobuf.Struct
	20, // 39: spaceone.api.alert_manager.v1.Alert.stat:output_type -> google.protobuf.Struct
	32, // [32:40] is the sub-list for method output_type
	24, // [24:32] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_spaceone_api_alert_manager_v1_alert_proto_init() }
func file_spaceone_api_alert_manager_v1_alert_proto_init() {
	if File_spaceone_api_alert_manager_v1_alert_proto != nil {
		return
	}
	file_spaceone_api_alert_manager_v1_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_alert_manager_v1_alert_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_alert_manager_v1_alert_proto_goTypes,
		DependencyIndexes: file_spaceone_api_alert_manager_v1_alert_proto_depIdxs,
		EnumInfos:         file_spaceone_api_alert_manager_v1_alert_proto_enumTypes,
		MessageInfos:      file_spaceone_api_alert_manager_v1_alert_proto_msgTypes,
	}.Build()
	File_spaceone_api_alert_manager_v1_alert_proto = out.File
	file_spaceone_api_alert_manager_v1_alert_proto_rawDesc = nil
	file_spaceone_api_alert_manager_v1_alert_proto_goTypes = nil
	file_spaceone_api_alert_manager_v1_alert_proto_depIdxs = nil
}
