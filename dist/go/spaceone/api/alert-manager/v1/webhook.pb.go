// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.6.1
// source: spaceone/api/alert_manager/v1/webhook.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebhookState int32

const (
	WebhookState_WEBHOOK_STATE_NONE WebhookState = 0
	WebhookState_ENABLED            WebhookState = 1
	WebhookState_DISABLED           WebhookState = 2
)

// Enum value maps for WebhookState.
var (
	WebhookState_name = map[int32]string{
		0: "WEBHOOK_STATE_NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	WebhookState_value = map[string]int32{
		"WEBHOOK_STATE_NONE": 0,
		"ENABLED":            1,
		"DISABLED":           2,
	}
)

func (x WebhookState) Enum() *WebhookState {
	p := new(WebhookState)
	*p = x
	return p
}

func (x WebhookState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes[0].Descriptor()
}

func (WebhookState) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes[0]
}

func (x WebhookState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookState.Descriptor instead.
func (WebhookState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{0}
}

type WebhookUpgradeMode int32

const (
	WebhookUpgradeMode_UPGRADE_MODE_NONE WebhookUpgradeMode = 0
	WebhookUpgradeMode_AUTO              WebhookUpgradeMode = 1
	WebhookUpgradeMode_MANUAL            WebhookUpgradeMode = 2
)

// Enum value maps for WebhookUpgradeMode.
var (
	WebhookUpgradeMode_name = map[int32]string{
		0: "UPGRADE_MODE_NONE",
		1: "AUTO",
		2: "MANUAL",
	}
	WebhookUpgradeMode_value = map[string]int32{
		"UPGRADE_MODE_NONE": 0,
		"AUTO":              1,
		"MANUAL":            2,
	}
)

func (x WebhookUpgradeMode) Enum() *WebhookUpgradeMode {
	p := new(WebhookUpgradeMode)
	*p = x
	return p
}

func (x WebhookUpgradeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookUpgradeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes[1].Descriptor()
}

func (WebhookUpgradeMode) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes[1]
}

func (x WebhookUpgradeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookUpgradeMode.Descriptor instead.
func (WebhookUpgradeMode) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{1}
}

type WebhookRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error int64 `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WebhookRequests) Reset() {
	*x = WebhookRequests{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookRequests) ProtoMessage() {}

func (x *WebhookRequests) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookRequests.ProtoReflect.Descriptor instead.
func (*WebhookRequests) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *WebhookRequests) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WebhookRequests) GetError() int64 {
	if x != nil {
		return x.Error
	}
	return 0
}

type WebhookPluginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginId string `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	// +optional
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// +optional
	Options  *_struct.Struct `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	Metadata *_struct.Struct `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// +optional
	UpgradeMode WebhookUpgradeMode `protobuf:"varint,5,opt,name=upgrade_mode,json=upgradeMode,proto3,enum=spaceone.api.alert_manager.v1.WebhookUpgradeMode" json:"upgrade_mode,omitempty"`
}

func (x *WebhookPluginInfo) Reset() {
	*x = WebhookPluginInfo{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookPluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookPluginInfo) ProtoMessage() {}

func (x *WebhookPluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookPluginInfo.ProtoReflect.Descriptor instead.
func (*WebhookPluginInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *WebhookPluginInfo) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *WebhookPluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WebhookPluginInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *WebhookPluginInfo) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WebhookPluginInfo) GetUpgradeMode() WebhookUpgradeMode {
	if x != nil {
		return x.UpgradeMode
	}
	return WebhookUpgradeMode_UPGRADE_MODE_NONE
}

type WebhookCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PluginInfo *WebhookPluginInfo `protobuf:"bytes,2,opt,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	// +optional
	Tags      *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	ServiceId string          `protobuf:"bytes,21,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *WebhookCreateRequest) Reset() {
	*x = WebhookCreateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookCreateRequest) ProtoMessage() {}

func (x *WebhookCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookCreateRequest.ProtoReflect.Descriptor instead.
func (*WebhookCreateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *WebhookCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookCreateRequest) GetPluginInfo() *WebhookPluginInfo {
	if x != nil {
		return x.PluginInfo
	}
	return nil
}

func (x *WebhookCreateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WebhookCreateRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type WebhookUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookId string `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *WebhookUpdateRequest) Reset() {
	*x = WebhookUpdateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookUpdateRequest) ProtoMessage() {}

func (x *WebhookUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookUpdateRequest.ProtoReflect.Descriptor instead.
func (*WebhookUpdateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *WebhookUpdateRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *WebhookUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookUpdateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type WebhookUpdatePluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookId string `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	// +optional
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	UpgradeMode WebhookUpgradeMode `protobuf:"varint,4,opt,name=upgrade_mode,json=upgradeMode,proto3,enum=spaceone.api.alert_manager.v1.WebhookUpgradeMode" json:"upgrade_mode,omitempty"`
}

func (x *WebhookUpdatePluginRequest) Reset() {
	*x = WebhookUpdatePluginRequest{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookUpdatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookUpdatePluginRequest) ProtoMessage() {}

func (x *WebhookUpdatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookUpdatePluginRequest.ProtoReflect.Descriptor instead.
func (*WebhookUpdatePluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{4}
}

func (x *WebhookUpdatePluginRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *WebhookUpdatePluginRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WebhookUpdatePluginRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *WebhookUpdatePluginRequest) GetUpgradeMode() WebhookUpgradeMode {
	if x != nil {
		return x.UpgradeMode
	}
	return WebhookUpgradeMode_UPGRADE_MODE_NONE
}

type WebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookId string `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
}

func (x *WebhookRequest) Reset() {
	*x = WebhookRequest{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookRequest) ProtoMessage() {}

func (x *WebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookRequest.ProtoReflect.Descriptor instead.
func (*WebhookRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{5}
}

func (x *WebhookRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

type WebhookSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	WebhookId string `protobuf:"bytes,2,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State WebhookState `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.alert_manager.v1.WebhookState" json:"state,omitempty"`
	// +optional
	AccessKey string `protobuf:"bytes,5,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// +optional
	ServiceId string `protobuf:"bytes,22,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *WebhookSearchQuery) Reset() {
	*x = WebhookSearchQuery{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookSearchQuery) ProtoMessage() {}

func (x *WebhookSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookSearchQuery.ProtoReflect.Descriptor instead.
func (*WebhookSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{6}
}

func (x *WebhookSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WebhookSearchQuery) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *WebhookSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookSearchQuery) GetState() WebhookState {
	if x != nil {
		return x.State
	}
	return WebhookState_WEBHOOK_STATE_NONE
}

func (x *WebhookSearchQuery) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *WebhookSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *WebhookSearchQuery) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type WebhookStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *v2.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *WebhookStatQuery) Reset() {
	*x = WebhookStatQuery{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookStatQuery) ProtoMessage() {}

func (x *WebhookStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookStatQuery.ProtoReflect.Descriptor instead.
func (*WebhookStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{7}
}

func (x *WebhookStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type WebhookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookId   string             `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State       WebhookState       `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.alert_manager.v1.WebhookState" json:"state,omitempty"`
	AccessKey   string             `protobuf:"bytes,4,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	WebhookUrl  string             `protobuf:"bytes,5,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	PluginInfo  *WebhookPluginInfo `protobuf:"bytes,6,opt,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	Requests    *WebhookRequests   `protobuf:"bytes,7,opt,name=requests,proto3" json:"requests,omitempty"`
	Tags        *_struct.Struct    `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId    string             `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId string             `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ServiceId   string             `protobuf:"bytes,23,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	CreatedAt   string             `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *WebhookInfo) Reset() {
	*x = WebhookInfo{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookInfo) ProtoMessage() {}

func (x *WebhookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookInfo.ProtoReflect.Descriptor instead.
func (*WebhookInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{8}
}

func (x *WebhookInfo) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *WebhookInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookInfo) GetState() WebhookState {
	if x != nil {
		return x.State
	}
	return WebhookState_WEBHOOK_STATE_NONE
}

func (x *WebhookInfo) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *WebhookInfo) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *WebhookInfo) GetPluginInfo() *WebhookPluginInfo {
	if x != nil {
		return x.PluginInfo
	}
	return nil
}

func (x *WebhookInfo) GetRequests() *WebhookRequests {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *WebhookInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WebhookInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WebhookInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *WebhookInfo) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *WebhookInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type WebhooksInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*WebhookInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *WebhooksInfo) Reset() {
	*x = WebhooksInfo{}
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhooksInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhooksInfo) ProtoMessage() {}

func (x *WebhooksInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhooksInfo.ProtoReflect.Descriptor instead.
func (*WebhooksInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP(), []int{9}
}

func (x *WebhooksInfo) GetResults() []*WebhookInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WebhooksInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_alert_manager_v1_webhook_proto protoreflect.FileDescriptor

var file_spaceone_api_alert_manager_v1_webhook_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x88, 0x02, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0c, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51,
	0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x76, 0x0a,
	0x14, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x1a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x54, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8d, 0x04, 0x0a, 0x0b, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12,
	0x51, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x0c, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x2a, 0x41, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x41, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x50, 0x47,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x32, 0x9b, 0x0b, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x12, 0x93, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22,
	0x1d, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xa7,
	0x01, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a,
	0x01, 0x2a, 0x22, 0x24, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x87, 0x01, 0x0a, 0x0d, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2d, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x8d, 0x01, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x79, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2d,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x87, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spaceone_api_alert_manager_v1_webhook_proto_rawDescOnce sync.Once
	file_spaceone_api_alert_manager_v1_webhook_proto_rawDescData = file_spaceone_api_alert_manager_v1_webhook_proto_rawDesc
)

func file_spaceone_api_alert_manager_v1_webhook_proto_rawDescGZIP() []byte {
	file_spaceone_api_alert_manager_v1_webhook_proto_rawDescOnce.Do(func() {
		file_spaceone_api_alert_manager_v1_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_alert_manager_v1_webhook_proto_rawDescData)
	})
	return file_spaceone_api_alert_manager_v1_webhook_proto_rawDescData
}

var file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_alert_manager_v1_webhook_proto_goTypes = []any{
	(WebhookState)(0),                  // 0: spaceone.api.alert_manager.v1.WebhookState
	(WebhookUpgradeMode)(0),            // 1: spaceone.api.alert_manager.v1.WebhookUpgradeMode
	(*WebhookRequests)(nil),            // 2: spaceone.api.alert_manager.v1.WebhookRequests
	(*WebhookPluginInfo)(nil),          // 3: spaceone.api.alert_manager.v1.WebhookPluginInfo
	(*WebhookCreateRequest)(nil),       // 4: spaceone.api.alert_manager.v1.WebhookCreateRequest
	(*WebhookUpdateRequest)(nil),       // 5: spaceone.api.alert_manager.v1.WebhookUpdateRequest
	(*WebhookUpdatePluginRequest)(nil), // 6: spaceone.api.alert_manager.v1.WebhookUpdatePluginRequest
	(*WebhookRequest)(nil),             // 7: spaceone.api.alert_manager.v1.WebhookRequest
	(*WebhookSearchQuery)(nil),         // 8: spaceone.api.alert_manager.v1.WebhookSearchQuery
	(*WebhookStatQuery)(nil),           // 9: spaceone.api.alert_manager.v1.WebhookStatQuery
	(*WebhookInfo)(nil),                // 10: spaceone.api.alert_manager.v1.WebhookInfo
	(*WebhooksInfo)(nil),               // 11: spaceone.api.alert_manager.v1.WebhooksInfo
	(*_struct.Struct)(nil),             // 12: google.protobuf.Struct
	(*v2.Query)(nil),                   // 13: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),         // 14: spaceone.api.core.v2.StatisticsQuery
	(*empty.Empty)(nil),                // 15: google.protobuf.Empty
}
var file_spaceone_api_alert_manager_v1_webhook_proto_depIdxs = []int32{
	12, // 0: spaceone.api.alert_manager.v1.WebhookPluginInfo.options:type_name -> google.protobuf.Struct
	12, // 1: spaceone.api.alert_manager.v1.WebhookPluginInfo.metadata:type_name -> google.protobuf.Struct
	1,  // 2: spaceone.api.alert_manager.v1.WebhookPluginInfo.upgrade_mode:type_name -> spaceone.api.alert_manager.v1.WebhookUpgradeMode
	3,  // 3: spaceone.api.alert_manager.v1.WebhookCreateRequest.plugin_info:type_name -> spaceone.api.alert_manager.v1.WebhookPluginInfo
	12, // 4: spaceone.api.alert_manager.v1.WebhookCreateRequest.tags:type_name -> google.protobuf.Struct
	12, // 5: spaceone.api.alert_manager.v1.WebhookUpdateRequest.tags:type_name -> google.protobuf.Struct
	12, // 6: spaceone.api.alert_manager.v1.WebhookUpdatePluginRequest.options:type_name -> google.protobuf.Struct
	1,  // 7: spaceone.api.alert_manager.v1.WebhookUpdatePluginRequest.upgrade_mode:type_name -> spaceone.api.alert_manager.v1.WebhookUpgradeMode
	13, // 8: spaceone.api.alert_manager.v1.WebhookSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	0,  // 9: spaceone.api.alert_manager.v1.WebhookSearchQuery.state:type_name -> spaceone.api.alert_manager.v1.WebhookState
	14, // 10: spaceone.api.alert_manager.v1.WebhookStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	0,  // 11: spaceone.api.alert_manager.v1.WebhookInfo.state:type_name -> spaceone.api.alert_manager.v1.WebhookState
	3,  // 12: spaceone.api.alert_manager.v1.WebhookInfo.plugin_info:type_name -> spaceone.api.alert_manager.v1.WebhookPluginInfo
	2,  // 13: spaceone.api.alert_manager.v1.WebhookInfo.requests:type_name -> spaceone.api.alert_manager.v1.WebhookRequests
	12, // 14: spaceone.api.alert_manager.v1.WebhookInfo.tags:type_name -> google.protobuf.Struct
	10, // 15: spaceone.api.alert_manager.v1.WebhooksInfo.results:type_name -> spaceone.api.alert_manager.v1.WebhookInfo
	4,  // 16: spaceone.api.alert_manager.v1.Webhook.create:input_type -> spaceone.api.alert_manager.v1.WebhookCreateRequest
	5,  // 17: spaceone.api.alert_manager.v1.Webhook.update:input_type -> spaceone.api.alert_manager.v1.WebhookUpdateRequest
	6,  // 18: spaceone.api.alert_manager.v1.Webhook.update_plugin:input_type -> spaceone.api.alert_manager.v1.WebhookUpdatePluginRequest
	7,  // 19: spaceone.api.alert_manager.v1.Webhook.verify_plugin:input_type -> spaceone.api.alert_manager.v1.WebhookRequest
	7,  // 20: spaceone.api.alert_manager.v1.Webhook.enable:input_type -> spaceone.api.alert_manager.v1.WebhookRequest
	7,  // 21: spaceone.api.alert_manager.v1.Webhook.disable:input_type -> spaceone.api.alert_manager.v1.WebhookRequest
	7,  // 22: spaceone.api.alert_manager.v1.Webhook.delete:input_type -> spaceone.api.alert_manager.v1.WebhookRequest
	7,  // 23: spaceone.api.alert_manager.v1.Webhook.get:input_type -> spaceone.api.alert_manager.v1.WebhookRequest
	8,  // 24: spaceone.api.alert_manager.v1.Webhook.list:input_type -> spaceone.api.alert_manager.v1.WebhookSearchQuery
	9,  // 25: spaceone.api.alert_manager.v1.Webhook.stat:input_type -> spaceone.api.alert_manager.v1.WebhookStatQuery
	10, // 26: spaceone.api.alert_manager.v1.Webhook.create:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	10, // 27: spaceone.api.alert_manager.v1.Webhook.update:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	10, // 28: spaceone.api.alert_manager.v1.Webhook.update_plugin:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	15, // 29: spaceone.api.alert_manager.v1.Webhook.verify_plugin:output_type -> google.protobuf.Empty
	10, // 30: spaceone.api.alert_manager.v1.Webhook.enable:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	10, // 31: spaceone.api.alert_manager.v1.Webhook.disable:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	15, // 32: spaceone.api.alert_manager.v1.Webhook.delete:output_type -> google.protobuf.Empty
	10, // 33: spaceone.api.alert_manager.v1.Webhook.get:output_type -> spaceone.api.alert_manager.v1.WebhookInfo
	11, // 34: spaceone.api.alert_manager.v1.Webhook.list:output_type -> spaceone.api.alert_manager.v1.WebhooksInfo
	12, // 35: spaceone.api.alert_manager.v1.Webhook.stat:output_type -> google.protobuf.Struct
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_spaceone_api_alert_manager_v1_webhook_proto_init() }
func file_spaceone_api_alert_manager_v1_webhook_proto_init() {
	if File_spaceone_api_alert_manager_v1_webhook_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_alert_manager_v1_webhook_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_alert_manager_v1_webhook_proto_goTypes,
		DependencyIndexes: file_spaceone_api_alert_manager_v1_webhook_proto_depIdxs,
		EnumInfos:         file_spaceone_api_alert_manager_v1_webhook_proto_enumTypes,
		MessageInfos:      file_spaceone_api_alert_manager_v1_webhook_proto_msgTypes,
	}.Build()
	File_spaceone_api_alert_manager_v1_webhook_proto = out.File
	file_spaceone_api_alert_manager_v1_webhook_proto_rawDesc = nil
	file_spaceone_api_alert_manager_v1_webhook_proto_goTypes = nil
	file_spaceone_api_alert_manager_v1_webhook_proto_depIdxs = nil
}
