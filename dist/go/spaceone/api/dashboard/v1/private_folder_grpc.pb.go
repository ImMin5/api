// description of dashboard

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.6.1
// source: spaceone/api/dashboard/v1/private_folder.proto

package v1

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	PrivateFolder_Create_FullMethodName = "/spaceone.api.dashboard.v1.PrivateFolder/create"
	PrivateFolder_Update_FullMethodName = "/spaceone.api.dashboard.v1.PrivateFolder/update"
	PrivateFolder_Delete_FullMethodName = "/spaceone.api.dashboard.v1.PrivateFolder/delete"
	PrivateFolder_Get_FullMethodName    = "/spaceone.api.dashboard.v1.PrivateFolder/get"
	PrivateFolder_List_FullMethodName   = "/spaceone.api.dashboard.v1.PrivateFolder/list"
	PrivateFolder_Stat_FullMethodName   = "/spaceone.api.dashboard.v1.PrivateFolder/stat"
)

// PrivateFolderClient is the client API for PrivateFolder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PrivateFolderClient interface {
	Create(ctx context.Context, in *CreatePrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error)
	Update(ctx context.Context, in *UpdatePrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error)
	Delete(ctx context.Context, in *PrivateFolderRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *PrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error)
	List(ctx context.Context, in *PrivateFolderQuery, opts ...grpc.CallOption) (*PrivateFoldersInfo, error)
	Stat(ctx context.Context, in *PrivateFolderStatQuery, opts ...grpc.CallOption) (*_struct.Struct, error)
}

type privateFolderClient struct {
	cc grpc.ClientConnInterface
}

func NewPrivateFolderClient(cc grpc.ClientConnInterface) PrivateFolderClient {
	return &privateFolderClient{cc}
}

func (c *privateFolderClient) Create(ctx context.Context, in *CreatePrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PrivateFolderInfo)
	err := c.cc.Invoke(ctx, PrivateFolder_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateFolderClient) Update(ctx context.Context, in *UpdatePrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PrivateFolderInfo)
	err := c.cc.Invoke(ctx, PrivateFolder_Update_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateFolderClient) Delete(ctx context.Context, in *PrivateFolderRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, PrivateFolder_Delete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateFolderClient) Get(ctx context.Context, in *PrivateFolderRequest, opts ...grpc.CallOption) (*PrivateFolderInfo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PrivateFolderInfo)
	err := c.cc.Invoke(ctx, PrivateFolder_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateFolderClient) List(ctx context.Context, in *PrivateFolderQuery, opts ...grpc.CallOption) (*PrivateFoldersInfo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PrivateFoldersInfo)
	err := c.cc.Invoke(ctx, PrivateFolder_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateFolderClient) Stat(ctx context.Context, in *PrivateFolderStatQuery, opts ...grpc.CallOption) (*_struct.Struct, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(_struct.Struct)
	err := c.cc.Invoke(ctx, PrivateFolder_Stat_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivateFolderServer is the server API for PrivateFolder service.
// All implementations must embed UnimplementedPrivateFolderServer
// for forward compatibility
type PrivateFolderServer interface {
	Create(context.Context, *CreatePrivateFolderRequest) (*PrivateFolderInfo, error)
	Update(context.Context, *UpdatePrivateFolderRequest) (*PrivateFolderInfo, error)
	Delete(context.Context, *PrivateFolderRequest) (*empty.Empty, error)
	Get(context.Context, *PrivateFolderRequest) (*PrivateFolderInfo, error)
	List(context.Context, *PrivateFolderQuery) (*PrivateFoldersInfo, error)
	Stat(context.Context, *PrivateFolderStatQuery) (*_struct.Struct, error)
	mustEmbedUnimplementedPrivateFolderServer()
}

// UnimplementedPrivateFolderServer must be embedded to have forward compatible implementations.
type UnimplementedPrivateFolderServer struct {
}

func (UnimplementedPrivateFolderServer) Create(context.Context, *CreatePrivateFolderRequest) (*PrivateFolderInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedPrivateFolderServer) Update(context.Context, *UpdatePrivateFolderRequest) (*PrivateFolderInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedPrivateFolderServer) Delete(context.Context, *PrivateFolderRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedPrivateFolderServer) Get(context.Context, *PrivateFolderRequest) (*PrivateFolderInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedPrivateFolderServer) List(context.Context, *PrivateFolderQuery) (*PrivateFoldersInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedPrivateFolderServer) Stat(context.Context, *PrivateFolderStatQuery) (*_struct.Struct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stat not implemented")
}
func (UnimplementedPrivateFolderServer) mustEmbedUnimplementedPrivateFolderServer() {}

// UnsafePrivateFolderServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PrivateFolderServer will
// result in compilation errors.
type UnsafePrivateFolderServer interface {
	mustEmbedUnimplementedPrivateFolderServer()
}

func RegisterPrivateFolderServer(s grpc.ServiceRegistrar, srv PrivateFolderServer) {
	s.RegisterService(&PrivateFolder_ServiceDesc, srv)
}

func _PrivateFolder_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePrivateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).Create(ctx, req.(*CreatePrivateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateFolder_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePrivateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).Update(ctx, req.(*UpdatePrivateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateFolder_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).Delete(ctx, req.(*PrivateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateFolder_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).Get(ctx, req.(*PrivateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateFolder_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateFolderQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).List(ctx, req.(*PrivateFolderQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateFolder_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateFolderStatQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateFolderServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateFolder_Stat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateFolderServer).Stat(ctx, req.(*PrivateFolderStatQuery))
	}
	return interceptor(ctx, in, info, handler)
}

// PrivateFolder_ServiceDesc is the grpc.ServiceDesc for PrivateFolder service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PrivateFolder_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "spaceone.api.dashboard.v1.PrivateFolder",
	HandlerType: (*PrivateFolderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _PrivateFolder_Create_Handler,
		},
		{
			MethodName: "update",
			Handler:    _PrivateFolder_Update_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _PrivateFolder_Delete_Handler,
		},
		{
			MethodName: "get",
			Handler:    _PrivateFolder_Get_Handler,
		},
		{
			MethodName: "list",
			Handler:    _PrivateFolder_List_Handler,
		},
		{
			MethodName: "stat",
			Handler:    _PrivateFolder_Stat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "spaceone/api/dashboard/v1/private_folder.proto",
}
