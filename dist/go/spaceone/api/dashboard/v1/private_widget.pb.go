// description of widget

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.6.1
// source: spaceone/api/dashboard/v1/private_widget.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePrivateWidgetRequest_State int32

const (
	CreatePrivateWidgetRequest_STATE_NONE CreatePrivateWidgetRequest_State = 0
	CreatePrivateWidgetRequest_CREATING   CreatePrivateWidgetRequest_State = 1
	CreatePrivateWidgetRequest_ACTIVE     CreatePrivateWidgetRequest_State = 2
	CreatePrivateWidgetRequest_INACTIVE   CreatePrivateWidgetRequest_State = 3
)

// Enum value maps for CreatePrivateWidgetRequest_State.
var (
	CreatePrivateWidgetRequest_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "CREATING",
		2: "ACTIVE",
		3: "INACTIVE",
	}
	CreatePrivateWidgetRequest_State_value = map[string]int32{
		"STATE_NONE": 0,
		"CREATING":   1,
		"ACTIVE":     2,
		"INACTIVE":   3,
	}
)

func (x CreatePrivateWidgetRequest_State) Enum() *CreatePrivateWidgetRequest_State {
	p := new(CreatePrivateWidgetRequest_State)
	*p = x
	return p
}

func (x CreatePrivateWidgetRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreatePrivateWidgetRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[0].Descriptor()
}

func (CreatePrivateWidgetRequest_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[0]
}

func (x CreatePrivateWidgetRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreatePrivateWidgetRequest_State.Descriptor instead.
func (CreatePrivateWidgetRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{2, 0}
}

type UpdatePrivateWidgetRequest_State int32

const (
	UpdatePrivateWidgetRequest_STATE_NONE UpdatePrivateWidgetRequest_State = 0
	UpdatePrivateWidgetRequest_ACTIVE     UpdatePrivateWidgetRequest_State = 1
	UpdatePrivateWidgetRequest_INACTIVE   UpdatePrivateWidgetRequest_State = 2
)

// Enum value maps for UpdatePrivateWidgetRequest_State.
var (
	UpdatePrivateWidgetRequest_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	UpdatePrivateWidgetRequest_State_value = map[string]int32{
		"STATE_NONE": 0,
		"ACTIVE":     1,
		"INACTIVE":   2,
	}
)

func (x UpdatePrivateWidgetRequest_State) Enum() *UpdatePrivateWidgetRequest_State {
	p := new(UpdatePrivateWidgetRequest_State)
	*p = x
	return p
}

func (x UpdatePrivateWidgetRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePrivateWidgetRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[1].Descriptor()
}

func (UpdatePrivateWidgetRequest_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[1]
}

func (x UpdatePrivateWidgetRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePrivateWidgetRequest_State.Descriptor instead.
func (UpdatePrivateWidgetRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{3, 0}
}

type PrivateWidgetInfo_State int32

const (
	PrivateWidgetInfo_STATE_NONE PrivateWidgetInfo_State = 0
	PrivateWidgetInfo_CREATING   PrivateWidgetInfo_State = 1
	PrivateWidgetInfo_ACTIVE     PrivateWidgetInfo_State = 2
	PrivateWidgetInfo_INACTIVE   PrivateWidgetInfo_State = 3
)

// Enum value maps for PrivateWidgetInfo_State.
var (
	PrivateWidgetInfo_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "CREATING",
		2: "ACTIVE",
		3: "INACTIVE",
	}
	PrivateWidgetInfo_State_value = map[string]int32{
		"STATE_NONE": 0,
		"CREATING":   1,
		"ACTIVE":     2,
		"INACTIVE":   3,
	}
)

func (x PrivateWidgetInfo_State) Enum() *PrivateWidgetInfo_State {
	p := new(PrivateWidgetInfo_State)
	*p = x
	return p
}

func (x PrivateWidgetInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrivateWidgetInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[2].Descriptor()
}

func (PrivateWidgetInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes[2]
}

func (x PrivateWidgetInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrivateWidgetInfo_State.Descriptor instead.
func (PrivateWidgetInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{8, 0}
}

type PrivateWidgetSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc bool   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *PrivateWidgetSort) Reset() {
	*x = PrivateWidgetSort{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetSort) ProtoMessage() {}

func (x *PrivateWidgetSort) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetSort.ProtoReflect.Descriptor instead.
func (*PrivateWidgetSort) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{0}
}

func (x *PrivateWidgetSort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PrivateWidgetSort) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type PrivateWidgetPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PrivateWidgetPage) Reset() {
	*x = PrivateWidgetPage{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetPage) ProtoMessage() {}

func (x *PrivateWidgetPage) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetPage.ProtoReflect.Descriptor instead.
func (*PrivateWidgetPage) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{1}
}

func (x *PrivateWidgetPage) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PrivateWidgetPage) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CreatePrivateWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State CreatePrivateWidgetRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.CreatePrivateWidgetRequest_State" json:"state,omitempty"`
	// +optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	WidgetType string `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	// +optional
	Size string `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	DataTableId int32 `protobuf:"varint,8,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	// +optional
	DataTables []*_struct.Struct `protobuf:"bytes,9,rep,name=data_tables,json=dataTables,proto3" json:"data_tables,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CreatePrivateWidgetRequest) Reset() {
	*x = CreatePrivateWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrivateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrivateWidgetRequest) ProtoMessage() {}

func (x *CreatePrivateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrivateWidgetRequest.ProtoReflect.Descriptor instead.
func (*CreatePrivateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePrivateWidgetRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *CreatePrivateWidgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePrivateWidgetRequest) GetState() CreatePrivateWidgetRequest_State {
	if x != nil {
		return x.State
	}
	return CreatePrivateWidgetRequest_STATE_NONE
}

func (x *CreatePrivateWidgetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePrivateWidgetRequest) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *CreatePrivateWidgetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreatePrivateWidgetRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePrivateWidgetRequest) GetDataTableId() int32 {
	if x != nil {
		return x.DataTableId
	}
	return 0
}

func (x *CreatePrivateWidgetRequest) GetDataTables() []*_struct.Struct {
	if x != nil {
		return x.DataTables
	}
	return nil
}

func (x *CreatePrivateWidgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdatePrivateWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State UpdatePrivateWidgetRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest_State" json:"state,omitempty"`
	// +optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	WidgetType string `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	// +optional
	Size string `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	DataTableId string `protobuf:"bytes,8,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdatePrivateWidgetRequest) Reset() {
	*x = UpdatePrivateWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivateWidgetRequest) ProtoMessage() {}

func (x *UpdatePrivateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivateWidgetRequest.ProtoReflect.Descriptor instead.
func (*UpdatePrivateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePrivateWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetState() UpdatePrivateWidgetRequest_State {
	if x != nil {
		return x.State
	}
	return UpdatePrivateWidgetRequest_STATE_NONE
}

func (x *UpdatePrivateWidgetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdatePrivateWidgetRequest) GetDataTableId() string {
	if x != nil {
		return x.DataTableId
	}
	return ""
}

func (x *UpdatePrivateWidgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PrivateWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetId string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
}

func (x *PrivateWidgetRequest) Reset() {
	*x = PrivateWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetRequest) ProtoMessage() {}

func (x *PrivateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetRequest.ProtoReflect.Descriptor instead.
func (*PrivateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{4}
}

func (x *PrivateWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

type LoadPrivateWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetId    string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Granularity string `protobuf:"bytes,2,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Start       string `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End         string `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Sort []*PrivateWidgetSort `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort,omitempty"`
	// +optional
	Page *PrivateWidgetPage `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	// +optional
	Vars *_struct.Struct `protobuf:"bytes,7,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *LoadPrivateWidgetRequest) Reset() {
	*x = LoadPrivateWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadPrivateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPrivateWidgetRequest) ProtoMessage() {}

func (x *LoadPrivateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPrivateWidgetRequest.ProtoReflect.Descriptor instead.
func (*LoadPrivateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{5}
}

func (x *LoadPrivateWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *LoadPrivateWidgetRequest) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *LoadPrivateWidgetRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *LoadPrivateWidgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LoadPrivateWidgetRequest) GetSort() []*PrivateWidgetSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *LoadPrivateWidgetRequest) GetPage() *PrivateWidgetPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *LoadPrivateWidgetRequest) GetVars() *_struct.Struct {
	if x != nil {
		return x.Vars
	}
	return nil
}

type LoadSumPrivateWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetId    string `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Granularity string `protobuf:"bytes,2,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Start       string `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End         string `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Vars *_struct.Struct `protobuf:"bytes,7,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *LoadSumPrivateWidgetRequest) Reset() {
	*x = LoadSumPrivateWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSumPrivateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSumPrivateWidgetRequest) ProtoMessage() {}

func (x *LoadSumPrivateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSumPrivateWidgetRequest.ProtoReflect.Descriptor instead.
func (*LoadSumPrivateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{6}
}

func (x *LoadSumPrivateWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *LoadSumPrivateWidgetRequest) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *LoadSumPrivateWidgetRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *LoadSumPrivateWidgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LoadSumPrivateWidgetRequest) GetVars() *_struct.Struct {
	if x != nil {
		return x.Vars
	}
	return nil
}

type PrivateWidgetQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query       *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DashboardId string    `protobuf:"bytes,2,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// +optional
	WidgetId string `protobuf:"bytes,3,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PrivateWidgetQuery) Reset() {
	*x = PrivateWidgetQuery{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetQuery) ProtoMessage() {}

func (x *PrivateWidgetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetQuery.ProtoReflect.Descriptor instead.
func (*PrivateWidgetQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{7}
}

func (x *PrivateWidgetQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PrivateWidgetQuery) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *PrivateWidgetQuery) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *PrivateWidgetQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PrivateWidgetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidgetId    string                  `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State       PrivateWidgetInfo_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.PrivateWidgetInfo_State" json:"state,omitempty"`
	Description string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	WidgetType  string                  `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	Size        string                  `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	Options     *_struct.Struct         `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	Tags        *_struct.Struct         `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId    string                  `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	UserId      string                  `protobuf:"bytes,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DashboardId string                  `protobuf:"bytes,23,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	DataTableId string                  `protobuf:"bytes,24,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	CreatedAt   string                  `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string                  `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PrivateWidgetInfo) Reset() {
	*x = PrivateWidgetInfo{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetInfo) ProtoMessage() {}

func (x *PrivateWidgetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetInfo.ProtoReflect.Descriptor instead.
func (*PrivateWidgetInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{8}
}

func (x *PrivateWidgetInfo) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *PrivateWidgetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrivateWidgetInfo) GetState() PrivateWidgetInfo_State {
	if x != nil {
		return x.State
	}
	return PrivateWidgetInfo_STATE_NONE
}

func (x *PrivateWidgetInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PrivateWidgetInfo) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *PrivateWidgetInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PrivateWidgetInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PrivateWidgetInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PrivateWidgetInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *PrivateWidgetInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PrivateWidgetInfo) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *PrivateWidgetInfo) GetDataTableId() string {
	if x != nil {
		return x.DataTableId
	}
	return ""
}

func (x *PrivateWidgetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PrivateWidgetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PrivateWidgetsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*PrivateWidgetInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PrivateWidgetsInfo) Reset() {
	*x = PrivateWidgetsInfo{}
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateWidgetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateWidgetsInfo) ProtoMessage() {}

func (x *PrivateWidgetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateWidgetsInfo.ProtoReflect.Descriptor instead.
func (*PrivateWidgetsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP(), []int{9}
}

func (x *PrivateWidgetsInfo) GetResults() []*PrivateWidgetInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PrivateWidgetsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_dashboard_v1_private_widget_proto protoreflect.FileDescriptor

var file_spaceone_api_dashboard_v1_private_widget_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x3f, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xfc, 0x03, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x03, 0x22, 0xae, 0x03, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x51, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x22, 0x33, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x18, 0x4c, 0x6f, 0x61, 0x64,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0xb1, 0x01, 0x0a,
	0x1b, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61,
	0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x22, 0x9b, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc1,
	0x04, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x03, 0x22, 0x7d, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0x91, 0x08, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x12, 0x9d, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a,
	0x01, 0x2a, 0x22, 0x23, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x8d, 0x01, 0x0a,
	0x08, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x12, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x73, 0x75, 0x6d, 0x12, 0x91, 0x01, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74,
	0x12, 0x92, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a,
	0x01, 0x2a, 0x22, 0x21, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_dashboard_v1_private_widget_proto_rawDescOnce sync.Once
	file_spaceone_api_dashboard_v1_private_widget_proto_rawDescData = file_spaceone_api_dashboard_v1_private_widget_proto_rawDesc
)

func file_spaceone_api_dashboard_v1_private_widget_proto_rawDescGZIP() []byte {
	file_spaceone_api_dashboard_v1_private_widget_proto_rawDescOnce.Do(func() {
		file_spaceone_api_dashboard_v1_private_widget_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_dashboard_v1_private_widget_proto_rawDescData)
	})
	return file_spaceone_api_dashboard_v1_private_widget_proto_rawDescData
}

var file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_dashboard_v1_private_widget_proto_goTypes = []any{
	(CreatePrivateWidgetRequest_State)(0), // 0: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.State
	(UpdatePrivateWidgetRequest_State)(0), // 1: spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest.State
	(PrivateWidgetInfo_State)(0),          // 2: spaceone.api.dashboard.v1.PrivateWidgetInfo.State
	(*PrivateWidgetSort)(nil),             // 3: spaceone.api.dashboard.v1.PrivateWidgetSort
	(*PrivateWidgetPage)(nil),             // 4: spaceone.api.dashboard.v1.PrivateWidgetPage
	(*CreatePrivateWidgetRequest)(nil),    // 5: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest
	(*UpdatePrivateWidgetRequest)(nil),    // 6: spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest
	(*PrivateWidgetRequest)(nil),          // 7: spaceone.api.dashboard.v1.PrivateWidgetRequest
	(*LoadPrivateWidgetRequest)(nil),      // 8: spaceone.api.dashboard.v1.LoadPrivateWidgetRequest
	(*LoadSumPrivateWidgetRequest)(nil),   // 9: spaceone.api.dashboard.v1.LoadSumPrivateWidgetRequest
	(*PrivateWidgetQuery)(nil),            // 10: spaceone.api.dashboard.v1.PrivateWidgetQuery
	(*PrivateWidgetInfo)(nil),             // 11: spaceone.api.dashboard.v1.PrivateWidgetInfo
	(*PrivateWidgetsInfo)(nil),            // 12: spaceone.api.dashboard.v1.PrivateWidgetsInfo
	(*_struct.Struct)(nil),                // 13: google.protobuf.Struct
	(*v2.Query)(nil),                      // 14: spaceone.api.core.v2.Query
	(*empty.Empty)(nil),                   // 15: google.protobuf.Empty
}
var file_spaceone_api_dashboard_v1_private_widget_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.state:type_name -> spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.State
	13, // 1: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.options:type_name -> google.protobuf.Struct
	13, // 2: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.data_tables:type_name -> google.protobuf.Struct
	13, // 3: spaceone.api.dashboard.v1.CreatePrivateWidgetRequest.tags:type_name -> google.protobuf.Struct
	1,  // 4: spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest.state:type_name -> spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest.State
	13, // 5: spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest.options:type_name -> google.protobuf.Struct
	13, // 6: spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest.tags:type_name -> google.protobuf.Struct
	3,  // 7: spaceone.api.dashboard.v1.LoadPrivateWidgetRequest.sort:type_name -> spaceone.api.dashboard.v1.PrivateWidgetSort
	4,  // 8: spaceone.api.dashboard.v1.LoadPrivateWidgetRequest.page:type_name -> spaceone.api.dashboard.v1.PrivateWidgetPage
	13, // 9: spaceone.api.dashboard.v1.LoadPrivateWidgetRequest.vars:type_name -> google.protobuf.Struct
	13, // 10: spaceone.api.dashboard.v1.LoadSumPrivateWidgetRequest.vars:type_name -> google.protobuf.Struct
	14, // 11: spaceone.api.dashboard.v1.PrivateWidgetQuery.query:type_name -> spaceone.api.core.v2.Query
	2,  // 12: spaceone.api.dashboard.v1.PrivateWidgetInfo.state:type_name -> spaceone.api.dashboard.v1.PrivateWidgetInfo.State
	13, // 13: spaceone.api.dashboard.v1.PrivateWidgetInfo.options:type_name -> google.protobuf.Struct
	13, // 14: spaceone.api.dashboard.v1.PrivateWidgetInfo.tags:type_name -> google.protobuf.Struct
	11, // 15: spaceone.api.dashboard.v1.PrivateWidgetsInfo.results:type_name -> spaceone.api.dashboard.v1.PrivateWidgetInfo
	5,  // 16: spaceone.api.dashboard.v1.PrivateWidget.create:input_type -> spaceone.api.dashboard.v1.CreatePrivateWidgetRequest
	6,  // 17: spaceone.api.dashboard.v1.PrivateWidget.update:input_type -> spaceone.api.dashboard.v1.UpdatePrivateWidgetRequest
	7,  // 18: spaceone.api.dashboard.v1.PrivateWidget.delete:input_type -> spaceone.api.dashboard.v1.PrivateWidgetRequest
	8,  // 19: spaceone.api.dashboard.v1.PrivateWidget.load:input_type -> spaceone.api.dashboard.v1.LoadPrivateWidgetRequest
	9,  // 20: spaceone.api.dashboard.v1.PrivateWidget.load_sum:input_type -> spaceone.api.dashboard.v1.LoadSumPrivateWidgetRequest
	7,  // 21: spaceone.api.dashboard.v1.PrivateWidget.get:input_type -> spaceone.api.dashboard.v1.PrivateWidgetRequest
	10, // 22: spaceone.api.dashboard.v1.PrivateWidget.list:input_type -> spaceone.api.dashboard.v1.PrivateWidgetQuery
	11, // 23: spaceone.api.dashboard.v1.PrivateWidget.create:output_type -> spaceone.api.dashboard.v1.PrivateWidgetInfo
	11, // 24: spaceone.api.dashboard.v1.PrivateWidget.update:output_type -> spaceone.api.dashboard.v1.PrivateWidgetInfo
	15, // 25: spaceone.api.dashboard.v1.PrivateWidget.delete:output_type -> google.protobuf.Empty
	13, // 26: spaceone.api.dashboard.v1.PrivateWidget.load:output_type -> google.protobuf.Struct
	13, // 27: spaceone.api.dashboard.v1.PrivateWidget.load_sum:output_type -> google.protobuf.Struct
	11, // 28: spaceone.api.dashboard.v1.PrivateWidget.get:output_type -> spaceone.api.dashboard.v1.PrivateWidgetInfo
	12, // 29: spaceone.api.dashboard.v1.PrivateWidget.list:output_type -> spaceone.api.dashboard.v1.PrivateWidgetsInfo
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_spaceone_api_dashboard_v1_private_widget_proto_init() }
func file_spaceone_api_dashboard_v1_private_widget_proto_init() {
	if File_spaceone_api_dashboard_v1_private_widget_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_dashboard_v1_private_widget_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_dashboard_v1_private_widget_proto_goTypes,
		DependencyIndexes: file_spaceone_api_dashboard_v1_private_widget_proto_depIdxs,
		EnumInfos:         file_spaceone_api_dashboard_v1_private_widget_proto_enumTypes,
		MessageInfos:      file_spaceone_api_dashboard_v1_private_widget_proto_msgTypes,
	}.Build()
	File_spaceone_api_dashboard_v1_private_widget_proto = out.File
	file_spaceone_api_dashboard_v1_private_widget_proto_rawDesc = nil
	file_spaceone_api_dashboard_v1_private_widget_proto_goTypes = nil
	file_spaceone_api_dashboard_v1_private_widget_proto_depIdxs = nil
}
