// description of widget

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.6.1
// source: spaceone/api/dashboard/v1/public_widget.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePublicWidgetRequest_State int32

const (
	CreatePublicWidgetRequest_STATE_NONE CreatePublicWidgetRequest_State = 0
	CreatePublicWidgetRequest_CREATING   CreatePublicWidgetRequest_State = 1
	CreatePublicWidgetRequest_ACTIVE     CreatePublicWidgetRequest_State = 2
	CreatePublicWidgetRequest_INACTIVE   CreatePublicWidgetRequest_State = 3
)

// Enum value maps for CreatePublicWidgetRequest_State.
var (
	CreatePublicWidgetRequest_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "CREATING",
		2: "ACTIVE",
		3: "INACTIVE",
	}
	CreatePublicWidgetRequest_State_value = map[string]int32{
		"STATE_NONE": 0,
		"CREATING":   1,
		"ACTIVE":     2,
		"INACTIVE":   3,
	}
)

func (x CreatePublicWidgetRequest_State) Enum() *CreatePublicWidgetRequest_State {
	p := new(CreatePublicWidgetRequest_State)
	*p = x
	return p
}

func (x CreatePublicWidgetRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreatePublicWidgetRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[0].Descriptor()
}

func (CreatePublicWidgetRequest_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[0]
}

func (x CreatePublicWidgetRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreatePublicWidgetRequest_State.Descriptor instead.
func (CreatePublicWidgetRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{2, 0}
}

type UpdatePublicWidgetRequest_State int32

const (
	UpdatePublicWidgetRequest_STATE_NONE UpdatePublicWidgetRequest_State = 0
	UpdatePublicWidgetRequest_ACTIVE     UpdatePublicWidgetRequest_State = 1
	UpdatePublicWidgetRequest_INACTIVE   UpdatePublicWidgetRequest_State = 2
)

// Enum value maps for UpdatePublicWidgetRequest_State.
var (
	UpdatePublicWidgetRequest_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	UpdatePublicWidgetRequest_State_value = map[string]int32{
		"STATE_NONE": 0,
		"ACTIVE":     1,
		"INACTIVE":   2,
	}
)

func (x UpdatePublicWidgetRequest_State) Enum() *UpdatePublicWidgetRequest_State {
	p := new(UpdatePublicWidgetRequest_State)
	*p = x
	return p
}

func (x UpdatePublicWidgetRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePublicWidgetRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[1].Descriptor()
}

func (UpdatePublicWidgetRequest_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[1]
}

func (x UpdatePublicWidgetRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePublicWidgetRequest_State.Descriptor instead.
func (UpdatePublicWidgetRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{3, 0}
}

type PublicWidgetInfo_ResourceGroup int32

const (
	PublicWidgetInfo_RESOURCE_GROUP_NONE PublicWidgetInfo_ResourceGroup = 0
	PublicWidgetInfo_DOMAIN              PublicWidgetInfo_ResourceGroup = 1
	PublicWidgetInfo_WORKSPACE           PublicWidgetInfo_ResourceGroup = 2
	PublicWidgetInfo_PROJECT             PublicWidgetInfo_ResourceGroup = 3
)

// Enum value maps for PublicWidgetInfo_ResourceGroup.
var (
	PublicWidgetInfo_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
		3: "PROJECT",
	}
	PublicWidgetInfo_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"DOMAIN":              1,
		"WORKSPACE":           2,
		"PROJECT":             3,
	}
)

func (x PublicWidgetInfo_ResourceGroup) Enum() *PublicWidgetInfo_ResourceGroup {
	p := new(PublicWidgetInfo_ResourceGroup)
	*p = x
	return p
}

func (x PublicWidgetInfo_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublicWidgetInfo_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[2].Descriptor()
}

func (PublicWidgetInfo_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[2]
}

func (x PublicWidgetInfo_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublicWidgetInfo_ResourceGroup.Descriptor instead.
func (PublicWidgetInfo_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{8, 0}
}

type PublicWidgetInfo_State int32

const (
	PublicWidgetInfo_STATE_NONE PublicWidgetInfo_State = 0
	PublicWidgetInfo_CREATING   PublicWidgetInfo_State = 1
	PublicWidgetInfo_ACTIVE     PublicWidgetInfo_State = 2
	PublicWidgetInfo_INACTIVE   PublicWidgetInfo_State = 3
)

// Enum value maps for PublicWidgetInfo_State.
var (
	PublicWidgetInfo_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "CREATING",
		2: "ACTIVE",
		3: "INACTIVE",
	}
	PublicWidgetInfo_State_value = map[string]int32{
		"STATE_NONE": 0,
		"CREATING":   1,
		"ACTIVE":     2,
		"INACTIVE":   3,
	}
)

func (x PublicWidgetInfo_State) Enum() *PublicWidgetInfo_State {
	p := new(PublicWidgetInfo_State)
	*p = x
	return p
}

func (x PublicWidgetInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublicWidgetInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[3].Descriptor()
}

func (PublicWidgetInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes[3]
}

func (x PublicWidgetInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublicWidgetInfo_State.Descriptor instead.
func (PublicWidgetInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{8, 1}
}

type PublicWidgetSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc          bool                   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetSort) Reset() {
	*x = PublicWidgetSort{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetSort) ProtoMessage() {}

func (x *PublicWidgetSort) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetSort.ProtoReflect.Descriptor instead.
func (*PublicWidgetSort) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{0}
}

func (x *PublicWidgetSort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PublicWidgetSort) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type PublicWidgetPage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int32                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetPage) Reset() {
	*x = PublicWidgetPage{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetPage) ProtoMessage() {}

func (x *PublicWidgetPage) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetPage.ProtoReflect.Descriptor instead.
func (*PublicWidgetPage) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{1}
}

func (x *PublicWidgetPage) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PublicWidgetPage) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CreatePublicWidgetRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	DashboardId string                 `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State CreatePublicWidgetRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.CreatePublicWidgetRequest_State" json:"state,omitempty"`
	// +optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	WidgetType string `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	// +optional
	Size string `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	DataTableId int32 `protobuf:"varint,8,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	// +optional
	DataTables []*_struct.Struct `protobuf:"bytes,9,rep,name=data_tables,json=dataTables,proto3" json:"data_tables,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublicWidgetRequest) Reset() {
	*x = CreatePublicWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublicWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublicWidgetRequest) ProtoMessage() {}

func (x *CreatePublicWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublicWidgetRequest.ProtoReflect.Descriptor instead.
func (*CreatePublicWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePublicWidgetRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *CreatePublicWidgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePublicWidgetRequest) GetState() CreatePublicWidgetRequest_State {
	if x != nil {
		return x.State
	}
	return CreatePublicWidgetRequest_STATE_NONE
}

func (x *CreatePublicWidgetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePublicWidgetRequest) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *CreatePublicWidgetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreatePublicWidgetRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePublicWidgetRequest) GetDataTableId() int32 {
	if x != nil {
		return x.DataTableId
	}
	return 0
}

func (x *CreatePublicWidgetRequest) GetDataTables() []*_struct.Struct {
	if x != nil {
		return x.DataTables
	}
	return nil
}

func (x *CreatePublicWidgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdatePublicWidgetRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	WidgetId string                 `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State UpdatePublicWidgetRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.UpdatePublicWidgetRequest_State" json:"state,omitempty"`
	// +optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// +optional
	WidgetType string `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	// +optional
	Size string `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	DataTableId string `protobuf:"bytes,8,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePublicWidgetRequest) Reset() {
	*x = UpdatePublicWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePublicWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePublicWidgetRequest) ProtoMessage() {}

func (x *UpdatePublicWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePublicWidgetRequest.ProtoReflect.Descriptor instead.
func (*UpdatePublicWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePublicWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetState() UpdatePublicWidgetRequest_State {
	if x != nil {
		return x.State
	}
	return UpdatePublicWidgetRequest_STATE_NONE
}

func (x *UpdatePublicWidgetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdatePublicWidgetRequest) GetDataTableId() string {
	if x != nil {
		return x.DataTableId
	}
	return ""
}

func (x *UpdatePublicWidgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PublicWidgetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WidgetId      string                 `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetRequest) Reset() {
	*x = PublicWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetRequest) ProtoMessage() {}

func (x *PublicWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetRequest.ProtoReflect.Descriptor instead.
func (*PublicWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{4}
}

func (x *PublicWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

type LoadPublicWidgetRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	WidgetId    string                 `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Granularity string                 `protobuf:"bytes,2,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Start       string                 `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End         string                 `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Sort []*PublicWidgetSort `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort,omitempty"`
	// +optional
	Page *PublicWidgetPage `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	// +optional
	Vars          *_struct.Struct `protobuf:"bytes,7,opt,name=vars,proto3" json:"vars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadPublicWidgetRequest) Reset() {
	*x = LoadPublicWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadPublicWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPublicWidgetRequest) ProtoMessage() {}

func (x *LoadPublicWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPublicWidgetRequest.ProtoReflect.Descriptor instead.
func (*LoadPublicWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{5}
}

func (x *LoadPublicWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *LoadPublicWidgetRequest) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *LoadPublicWidgetRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *LoadPublicWidgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LoadPublicWidgetRequest) GetSort() []*PublicWidgetSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *LoadPublicWidgetRequest) GetPage() *PublicWidgetPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *LoadPublicWidgetRequest) GetVars() *_struct.Struct {
	if x != nil {
		return x.Vars
	}
	return nil
}

type LoadSumPublicWidgetRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	WidgetId    string                 `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Granularity string                 `protobuf:"bytes,2,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Start       string                 `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End         string                 `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Vars          *_struct.Struct `protobuf:"bytes,7,opt,name=vars,proto3" json:"vars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSumPublicWidgetRequest) Reset() {
	*x = LoadSumPublicWidgetRequest{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSumPublicWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSumPublicWidgetRequest) ProtoMessage() {}

func (x *LoadSumPublicWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSumPublicWidgetRequest.ProtoReflect.Descriptor instead.
func (*LoadSumPublicWidgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{6}
}

func (x *LoadSumPublicWidgetRequest) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *LoadSumPublicWidgetRequest) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *LoadSumPublicWidgetRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *LoadSumPublicWidgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LoadSumPublicWidgetRequest) GetVars() *_struct.Struct {
	if x != nil {
		return x.Vars
	}
	return nil
}

type PublicWidgetQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query       *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DashboardId string    `protobuf:"bytes,2,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// +optional
	WidgetId string `protobuf:"bytes,3,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	// +optional
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetQuery) Reset() {
	*x = PublicWidgetQuery{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetQuery) ProtoMessage() {}

func (x *PublicWidgetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetQuery.ProtoReflect.Descriptor instead.
func (*PublicWidgetQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{7}
}

func (x *PublicWidgetQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PublicWidgetQuery) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *PublicWidgetQuery) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *PublicWidgetQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PublicWidgetInfo struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	WidgetId      string                         `protobuf:"bytes,1,opt,name=widget_id,json=widgetId,proto3" json:"widget_id,omitempty"`
	Name          string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         PublicWidgetInfo_State         `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.dashboard.v1.PublicWidgetInfo_State" json:"state,omitempty"`
	Description   string                         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	WidgetType    string                         `protobuf:"bytes,5,opt,name=widget_type,json=widgetType,proto3" json:"widget_type,omitempty"`
	Size          string                         `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	Options       *_struct.Struct                `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	Tags          *_struct.Struct                `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	ResourceGroup PublicWidgetInfo_ResourceGroup `protobuf:"varint,20,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.dashboard.v1.PublicWidgetInfo_ResourceGroup" json:"resource_group,omitempty"`
	DomainId      string                         `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId   string                         `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ProjectId     string                         `protobuf:"bytes,23,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DashboardId   string                         `protobuf:"bytes,24,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	DataTableId   string                         `protobuf:"bytes,25,opt,name=data_table_id,json=dataTableId,proto3" json:"data_table_id,omitempty"`
	CreatedAt     string                         `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                         `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetInfo) Reset() {
	*x = PublicWidgetInfo{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetInfo) ProtoMessage() {}

func (x *PublicWidgetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetInfo.ProtoReflect.Descriptor instead.
func (*PublicWidgetInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{8}
}

func (x *PublicWidgetInfo) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *PublicWidgetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicWidgetInfo) GetState() PublicWidgetInfo_State {
	if x != nil {
		return x.State
	}
	return PublicWidgetInfo_STATE_NONE
}

func (x *PublicWidgetInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PublicWidgetInfo) GetWidgetType() string {
	if x != nil {
		return x.WidgetType
	}
	return ""
}

func (x *PublicWidgetInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PublicWidgetInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PublicWidgetInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PublicWidgetInfo) GetResourceGroup() PublicWidgetInfo_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return PublicWidgetInfo_RESOURCE_GROUP_NONE
}

func (x *PublicWidgetInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *PublicWidgetInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *PublicWidgetInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PublicWidgetInfo) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *PublicWidgetInfo) GetDataTableId() string {
	if x != nil {
		return x.DataTableId
	}
	return ""
}

func (x *PublicWidgetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PublicWidgetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PublicWidgetsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PublicWidgetInfo    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicWidgetsInfo) Reset() {
	*x = PublicWidgetsInfo{}
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicWidgetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicWidgetsInfo) ProtoMessage() {}

func (x *PublicWidgetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicWidgetsInfo.ProtoReflect.Descriptor instead.
func (*PublicWidgetsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP(), []int{9}
}

func (x *PublicWidgetsInfo) GetResults() []*PublicWidgetInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PublicWidgetsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_dashboard_v1_public_widget_proto protoreflect.FileDescriptor

var file_spaceone_api_dashboard_v1_public_widget_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x19, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22,
	0x3e, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xfa, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x3f, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x22, 0xac, 0x03, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x22, 0x32, 0x0a, 0x13, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22,
	0xaf, 0x02, 0x0a, 0x17, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e,
	0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67,
	0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x76, 0x61, 0x72, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x9c, 0x06, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x50, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49,
	0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03, 0x22,
	0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03,
	0x22, 0x7b, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xfd, 0x07,
	0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x9a,
	0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x06,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x7f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x04, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x61, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x8b, 0x01, 0x0a,
	0x08, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x12, 0x35, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x73, 0x75, 0x6d, 0x12, 0x8e, 0x01, 0x0a, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2d, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x40, 0x5a,
	0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_dashboard_v1_public_widget_proto_rawDescOnce sync.Once
	file_spaceone_api_dashboard_v1_public_widget_proto_rawDescData = file_spaceone_api_dashboard_v1_public_widget_proto_rawDesc
)

func file_spaceone_api_dashboard_v1_public_widget_proto_rawDescGZIP() []byte {
	file_spaceone_api_dashboard_v1_public_widget_proto_rawDescOnce.Do(func() {
		file_spaceone_api_dashboard_v1_public_widget_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_dashboard_v1_public_widget_proto_rawDescData)
	})
	return file_spaceone_api_dashboard_v1_public_widget_proto_rawDescData
}

var file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_dashboard_v1_public_widget_proto_goTypes = []any{
	(CreatePublicWidgetRequest_State)(0), // 0: spaceone.api.dashboard.v1.CreatePublicWidgetRequest.State
	(UpdatePublicWidgetRequest_State)(0), // 1: spaceone.api.dashboard.v1.UpdatePublicWidgetRequest.State
	(PublicWidgetInfo_ResourceGroup)(0),  // 2: spaceone.api.dashboard.v1.PublicWidgetInfo.ResourceGroup
	(PublicWidgetInfo_State)(0),          // 3: spaceone.api.dashboard.v1.PublicWidgetInfo.State
	(*PublicWidgetSort)(nil),             // 4: spaceone.api.dashboard.v1.PublicWidgetSort
	(*PublicWidgetPage)(nil),             // 5: spaceone.api.dashboard.v1.PublicWidgetPage
	(*CreatePublicWidgetRequest)(nil),    // 6: spaceone.api.dashboard.v1.CreatePublicWidgetRequest
	(*UpdatePublicWidgetRequest)(nil),    // 7: spaceone.api.dashboard.v1.UpdatePublicWidgetRequest
	(*PublicWidgetRequest)(nil),          // 8: spaceone.api.dashboard.v1.PublicWidgetRequest
	(*LoadPublicWidgetRequest)(nil),      // 9: spaceone.api.dashboard.v1.LoadPublicWidgetRequest
	(*LoadSumPublicWidgetRequest)(nil),   // 10: spaceone.api.dashboard.v1.LoadSumPublicWidgetRequest
	(*PublicWidgetQuery)(nil),            // 11: spaceone.api.dashboard.v1.PublicWidgetQuery
	(*PublicWidgetInfo)(nil),             // 12: spaceone.api.dashboard.v1.PublicWidgetInfo
	(*PublicWidgetsInfo)(nil),            // 13: spaceone.api.dashboard.v1.PublicWidgetsInfo
	(*_struct.Struct)(nil),               // 14: google.protobuf.Struct
	(*v2.Query)(nil),                     // 15: spaceone.api.core.v2.Query
	(*empty.Empty)(nil),                  // 16: google.protobuf.Empty
}
var file_spaceone_api_dashboard_v1_public_widget_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.dashboard.v1.CreatePublicWidgetRequest.state:type_name -> spaceone.api.dashboard.v1.CreatePublicWidgetRequest.State
	14, // 1: spaceone.api.dashboard.v1.CreatePublicWidgetRequest.options:type_name -> google.protobuf.Struct
	14, // 2: spaceone.api.dashboard.v1.CreatePublicWidgetRequest.data_tables:type_name -> google.protobuf.Struct
	14, // 3: spaceone.api.dashboard.v1.CreatePublicWidgetRequest.tags:type_name -> google.protobuf.Struct
	1,  // 4: spaceone.api.dashboard.v1.UpdatePublicWidgetRequest.state:type_name -> spaceone.api.dashboard.v1.UpdatePublicWidgetRequest.State
	14, // 5: spaceone.api.dashboard.v1.UpdatePublicWidgetRequest.options:type_name -> google.protobuf.Struct
	14, // 6: spaceone.api.dashboard.v1.UpdatePublicWidgetRequest.tags:type_name -> google.protobuf.Struct
	4,  // 7: spaceone.api.dashboard.v1.LoadPublicWidgetRequest.sort:type_name -> spaceone.api.dashboard.v1.PublicWidgetSort
	5,  // 8: spaceone.api.dashboard.v1.LoadPublicWidgetRequest.page:type_name -> spaceone.api.dashboard.v1.PublicWidgetPage
	14, // 9: spaceone.api.dashboard.v1.LoadPublicWidgetRequest.vars:type_name -> google.protobuf.Struct
	14, // 10: spaceone.api.dashboard.v1.LoadSumPublicWidgetRequest.vars:type_name -> google.protobuf.Struct
	15, // 11: spaceone.api.dashboard.v1.PublicWidgetQuery.query:type_name -> spaceone.api.core.v2.Query
	3,  // 12: spaceone.api.dashboard.v1.PublicWidgetInfo.state:type_name -> spaceone.api.dashboard.v1.PublicWidgetInfo.State
	14, // 13: spaceone.api.dashboard.v1.PublicWidgetInfo.options:type_name -> google.protobuf.Struct
	14, // 14: spaceone.api.dashboard.v1.PublicWidgetInfo.tags:type_name -> google.protobuf.Struct
	2,  // 15: spaceone.api.dashboard.v1.PublicWidgetInfo.resource_group:type_name -> spaceone.api.dashboard.v1.PublicWidgetInfo.ResourceGroup
	12, // 16: spaceone.api.dashboard.v1.PublicWidgetsInfo.results:type_name -> spaceone.api.dashboard.v1.PublicWidgetInfo
	6,  // 17: spaceone.api.dashboard.v1.PublicWidget.create:input_type -> spaceone.api.dashboard.v1.CreatePublicWidgetRequest
	7,  // 18: spaceone.api.dashboard.v1.PublicWidget.update:input_type -> spaceone.api.dashboard.v1.UpdatePublicWidgetRequest
	8,  // 19: spaceone.api.dashboard.v1.PublicWidget.delete:input_type -> spaceone.api.dashboard.v1.PublicWidgetRequest
	9,  // 20: spaceone.api.dashboard.v1.PublicWidget.load:input_type -> spaceone.api.dashboard.v1.LoadPublicWidgetRequest
	10, // 21: spaceone.api.dashboard.v1.PublicWidget.load_sum:input_type -> spaceone.api.dashboard.v1.LoadSumPublicWidgetRequest
	8,  // 22: spaceone.api.dashboard.v1.PublicWidget.get:input_type -> spaceone.api.dashboard.v1.PublicWidgetRequest
	11, // 23: spaceone.api.dashboard.v1.PublicWidget.list:input_type -> spaceone.api.dashboard.v1.PublicWidgetQuery
	12, // 24: spaceone.api.dashboard.v1.PublicWidget.create:output_type -> spaceone.api.dashboard.v1.PublicWidgetInfo
	12, // 25: spaceone.api.dashboard.v1.PublicWidget.update:output_type -> spaceone.api.dashboard.v1.PublicWidgetInfo
	16, // 26: spaceone.api.dashboard.v1.PublicWidget.delete:output_type -> google.protobuf.Empty
	14, // 27: spaceone.api.dashboard.v1.PublicWidget.load:output_type -> google.protobuf.Struct
	14, // 28: spaceone.api.dashboard.v1.PublicWidget.load_sum:output_type -> google.protobuf.Struct
	12, // 29: spaceone.api.dashboard.v1.PublicWidget.get:output_type -> spaceone.api.dashboard.v1.PublicWidgetInfo
	13, // 30: spaceone.api.dashboard.v1.PublicWidget.list:output_type -> spaceone.api.dashboard.v1.PublicWidgetsInfo
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_spaceone_api_dashboard_v1_public_widget_proto_init() }
func file_spaceone_api_dashboard_v1_public_widget_proto_init() {
	if File_spaceone_api_dashboard_v1_public_widget_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_dashboard_v1_public_widget_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_dashboard_v1_public_widget_proto_goTypes,
		DependencyIndexes: file_spaceone_api_dashboard_v1_public_widget_proto_depIdxs,
		EnumInfos:         file_spaceone_api_dashboard_v1_public_widget_proto_enumTypes,
		MessageInfos:      file_spaceone_api_dashboard_v1_public_widget_proto_msgTypes,
	}.Build()
	File_spaceone_api_dashboard_v1_public_widget_proto = out.File
	file_spaceone_api_dashboard_v1_public_widget_proto_rawDesc = nil
	file_spaceone_api_dashboard_v1_public_widget_proto_goTypes = nil
	file_spaceone_api_dashboard_v1_public_widget_proto_depIdxs = nil
}
