// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.6.1
// source: spaceone/api/identity/v2/trusted_account.proto

package v2

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scheduled_ScheduledState int32

const (
	Scheduled_NONE     Scheduled_ScheduledState = 0
	Scheduled_ENABLED  Scheduled_ScheduledState = 1
	Scheduled_DISABLED Scheduled_ScheduledState = 2
)

// Enum value maps for Scheduled_ScheduledState.
var (
	Scheduled_ScheduledState_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	Scheduled_ScheduledState_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x Scheduled_ScheduledState) Enum() *Scheduled_ScheduledState {
	p := new(Scheduled_ScheduledState)
	*p = x
	return p
}

func (x Scheduled_ScheduledState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scheduled_ScheduledState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[0].Descriptor()
}

func (Scheduled_ScheduledState) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[0]
}

func (x Scheduled_ScheduledState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scheduled_ScheduledState.Descriptor instead.
func (Scheduled_ScheduledState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{0, 0}
}

type CreateTrustedAccountRequest_ResourceGroup int32

const (
	CreateTrustedAccountRequest_NONE      CreateTrustedAccountRequest_ResourceGroup = 0
	CreateTrustedAccountRequest_DOMAIN    CreateTrustedAccountRequest_ResourceGroup = 1
	CreateTrustedAccountRequest_WORKSPACE CreateTrustedAccountRequest_ResourceGroup = 2
)

// Enum value maps for CreateTrustedAccountRequest_ResourceGroup.
var (
	CreateTrustedAccountRequest_ResourceGroup_name = map[int32]string{
		0: "NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
	}
	CreateTrustedAccountRequest_ResourceGroup_value = map[string]int32{
		"NONE":      0,
		"DOMAIN":    1,
		"WORKSPACE": 2,
	}
)

func (x CreateTrustedAccountRequest_ResourceGroup) Enum() *CreateTrustedAccountRequest_ResourceGroup {
	p := new(CreateTrustedAccountRequest_ResourceGroup)
	*p = x
	return p
}

func (x CreateTrustedAccountRequest_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTrustedAccountRequest_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[1].Descriptor()
}

func (CreateTrustedAccountRequest_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[1]
}

func (x CreateTrustedAccountRequest_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTrustedAccountRequest_ResourceGroup.Descriptor instead.
func (CreateTrustedAccountRequest_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{1, 0}
}

type TrustedAccountInfo_ResourceGroup int32

const (
	TrustedAccountInfo_NONE      TrustedAccountInfo_ResourceGroup = 0
	TrustedAccountInfo_DOMAIN    TrustedAccountInfo_ResourceGroup = 1
	TrustedAccountInfo_WORKSPACE TrustedAccountInfo_ResourceGroup = 2
)

// Enum value maps for TrustedAccountInfo_ResourceGroup.
var (
	TrustedAccountInfo_ResourceGroup_name = map[int32]string{
		0: "NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
	}
	TrustedAccountInfo_ResourceGroup_value = map[string]int32{
		"NONE":      0,
		"DOMAIN":    1,
		"WORKSPACE": 2,
	}
)

func (x TrustedAccountInfo_ResourceGroup) Enum() *TrustedAccountInfo_ResourceGroup {
	p := new(TrustedAccountInfo_ResourceGroup)
	*p = x
	return p
}

func (x TrustedAccountInfo_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrustedAccountInfo_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[2].Descriptor()
}

func (TrustedAccountInfo_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[2]
}

func (x TrustedAccountInfo_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrustedAccountInfo_ResourceGroup.Descriptor instead.
func (TrustedAccountInfo_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{5, 0}
}

type TrustedAccountSearchQuery_ResourceGroup int32

const (
	TrustedAccountSearchQuery_NONE      TrustedAccountSearchQuery_ResourceGroup = 0
	TrustedAccountSearchQuery_DOMAIN    TrustedAccountSearchQuery_ResourceGroup = 1
	TrustedAccountSearchQuery_WORKSPACE TrustedAccountSearchQuery_ResourceGroup = 2
)

// Enum value maps for TrustedAccountSearchQuery_ResourceGroup.
var (
	TrustedAccountSearchQuery_ResourceGroup_name = map[int32]string{
		0: "NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
	}
	TrustedAccountSearchQuery_ResourceGroup_value = map[string]int32{
		"NONE":      0,
		"DOMAIN":    1,
		"WORKSPACE": 2,
	}
)

func (x TrustedAccountSearchQuery_ResourceGroup) Enum() *TrustedAccountSearchQuery_ResourceGroup {
	p := new(TrustedAccountSearchQuery_ResourceGroup)
	*p = x
	return p
}

func (x TrustedAccountSearchQuery_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrustedAccountSearchQuery_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[3].Descriptor()
}

func (TrustedAccountSearchQuery_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_trusted_account_proto_enumTypes[3]
}

func (x TrustedAccountSearchQuery_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrustedAccountSearchQuery_ResourceGroup.Descriptor instead.
func (TrustedAccountSearchQuery_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{6, 0}
}

type Scheduled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Scheduled_ScheduledState `protobuf:"varint,1,opt,name=state,proto3,enum=spaceone.api.identity.v2.Scheduled_ScheduledState" json:"state,omitempty"`
	Hours []int32                  `protobuf:"varint,2,rep,packed,name=hours,proto3" json:"hours,omitempty"`
}

func (x *Scheduled) Reset() {
	*x = Scheduled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheduled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheduled) ProtoMessage() {}

func (x *Scheduled) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheduled.ProtoReflect.Descriptor instead.
func (*Scheduled) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{0}
}

func (x *Scheduled) GetState() Scheduled_ScheduledState {
	if x != nil {
		return x.State
	}
	return Scheduled_NONE
}

func (x *Scheduled) GetHours() []int32 {
	if x != nil {
		return x.Hours
	}
	return nil
}

//	{
//	 "name": "Trusted Account",
//	 "data": {
//	   "account_id": "123456789",
//	  }
//	 "provider": "aws",
//	 "secret_schema_id": "aws-secret-access-key",
//	 "schedule": {
//	   "state": "ENABLED",
//	   "hours": [3, 15]
//	 },
//	 "resource_group": "DOMAIN",
//	 "workspace_id": "*"
//	}
type CreateTrustedAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Base Information of Trusted Account. It depends on provider.
	Data           *_struct.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Provider       string          `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	SecretSchemaId string          `protobuf:"bytes,4,opt,name=secret_schema_id,json=secretSchemaId,proto3" json:"secret_schema_id,omitempty"`
	SecretData     *_struct.Struct `protobuf:"bytes,5,opt,name=secret_data,json=secretData,proto3" json:"secret_data,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	SyncOptions *_struct.Struct `protobuf:"bytes,7,opt,name=sync_options,json=syncOptions,proto3" json:"sync_options,omitempty"`
	// +optional
	Tags          *_struct.Struct                           `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	ResourceGroup CreateTrustedAccountRequest_ResourceGroup `protobuf:"varint,20,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.identity.v2.CreateTrustedAccountRequest_ResourceGroup" json:"resource_group,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CreateTrustedAccountRequest) Reset() {
	*x = CreateTrustedAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrustedAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrustedAccountRequest) ProtoMessage() {}

func (x *CreateTrustedAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrustedAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateTrustedAccountRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTrustedAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTrustedAccountRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateTrustedAccountRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateTrustedAccountRequest) GetSecretSchemaId() string {
	if x != nil {
		return x.SecretSchemaId
	}
	return ""
}

func (x *CreateTrustedAccountRequest) GetSecretData() *_struct.Struct {
	if x != nil {
		return x.SecretData
	}
	return nil
}

func (x *CreateTrustedAccountRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *CreateTrustedAccountRequest) GetSyncOptions() *_struct.Struct {
	if x != nil {
		return x.SyncOptions
	}
	return nil
}

func (x *CreateTrustedAccountRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateTrustedAccountRequest) GetResourceGroup() CreateTrustedAccountRequest_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return CreateTrustedAccountRequest_NONE
}

func (x *CreateTrustedAccountRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type UpdateTrustedAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustedAccountId string `protobuf:"bytes,1,opt,name=trusted_account_id,json=trustedAccountId,proto3" json:"trusted_account_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Data *_struct.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	SyncOptions *_struct.Struct `protobuf:"bytes,5,opt,name=sync_options,json=syncOptions,proto3" json:"sync_options,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdateTrustedAccountRequest) Reset() {
	*x = UpdateTrustedAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrustedAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustedAccountRequest) ProtoMessage() {}

func (x *UpdateTrustedAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustedAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrustedAccountRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTrustedAccountRequest) GetTrustedAccountId() string {
	if x != nil {
		return x.TrustedAccountId
	}
	return ""
}

func (x *UpdateTrustedAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTrustedAccountRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateTrustedAccountRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UpdateTrustedAccountRequest) GetSyncOptions() *_struct.Struct {
	if x != nil {
		return x.SyncOptions
	}
	return nil
}

func (x *UpdateTrustedAccountRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateTrustedAccountSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustedAccountId string          `protobuf:"bytes,1,opt,name=trusted_account_id,json=trustedAccountId,proto3" json:"trusted_account_id,omitempty"`
	SecretSchemaId   string          `protobuf:"bytes,2,opt,name=secret_schema_id,json=secretSchemaId,proto3" json:"secret_schema_id,omitempty"`
	SecretData       *_struct.Struct `protobuf:"bytes,3,opt,name=secret_data,json=secretData,proto3" json:"secret_data,omitempty"`
}

func (x *UpdateTrustedAccountSecretRequest) Reset() {
	*x = UpdateTrustedAccountSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrustedAccountSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrustedAccountSecretRequest) ProtoMessage() {}

func (x *UpdateTrustedAccountSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrustedAccountSecretRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrustedAccountSecretRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTrustedAccountSecretRequest) GetTrustedAccountId() string {
	if x != nil {
		return x.TrustedAccountId
	}
	return ""
}

func (x *UpdateTrustedAccountSecretRequest) GetSecretSchemaId() string {
	if x != nil {
		return x.SecretSchemaId
	}
	return ""
}

func (x *UpdateTrustedAccountSecretRequest) GetSecretData() *_struct.Struct {
	if x != nil {
		return x.SecretData
	}
	return nil
}

type TrustedAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustedAccountId string `protobuf:"bytes,1,opt,name=trusted_account_id,json=trustedAccountId,proto3" json:"trusted_account_id,omitempty"`
}

func (x *TrustedAccountRequest) Reset() {
	*x = TrustedAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedAccountRequest) ProtoMessage() {}

func (x *TrustedAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedAccountRequest.ProtoReflect.Descriptor instead.
func (*TrustedAccountRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{4}
}

func (x *TrustedAccountRequest) GetTrustedAccountId() string {
	if x != nil {
		return x.TrustedAccountId
	}
	return ""
}

type TrustedAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustedAccountId string                           `protobuf:"bytes,1,opt,name=trusted_account_id,json=trustedAccountId,proto3" json:"trusted_account_id,omitempty"`
	Name             string                           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data             *_struct.Struct                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Provider         string                           `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Schedule         *Scheduled                       `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	SyncOptions      *_struct.Struct                  `protobuf:"bytes,6,opt,name=sync_options,json=syncOptions,proto3" json:"sync_options,omitempty"`
	Tags             *_struct.Struct                  `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	ResourceGroup    TrustedAccountInfo_ResourceGroup `protobuf:"varint,20,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.identity.v2.TrustedAccountInfo_ResourceGroup" json:"resource_group,omitempty"`
	DomainId         string                           `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId      string                           `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	SecretSchemaId   string                           `protobuf:"bytes,23,opt,name=secret_schema_id,json=secretSchemaId,proto3" json:"secret_schema_id,omitempty"`
	TrustedSecretId  string                           `protobuf:"bytes,24,opt,name=trusted_secret_id,json=trustedSecretId,proto3" json:"trusted_secret_id,omitempty"`
	CreatedAt        string                           `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TrustedAccountInfo) Reset() {
	*x = TrustedAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedAccountInfo) ProtoMessage() {}

func (x *TrustedAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedAccountInfo.ProtoReflect.Descriptor instead.
func (*TrustedAccountInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{5}
}

func (x *TrustedAccountInfo) GetTrustedAccountId() string {
	if x != nil {
		return x.TrustedAccountId
	}
	return ""
}

func (x *TrustedAccountInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrustedAccountInfo) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TrustedAccountInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TrustedAccountInfo) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *TrustedAccountInfo) GetSyncOptions() *_struct.Struct {
	if x != nil {
		return x.SyncOptions
	}
	return nil
}

func (x *TrustedAccountInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TrustedAccountInfo) GetResourceGroup() TrustedAccountInfo_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return TrustedAccountInfo_NONE
}

func (x *TrustedAccountInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *TrustedAccountInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *TrustedAccountInfo) GetSecretSchemaId() string {
	if x != nil {
		return x.SecretSchemaId
	}
	return ""
}

func (x *TrustedAccountInfo) GetTrustedSecretId() string {
	if x != nil {
		return x.TrustedSecretId
	}
	return ""
}

func (x *TrustedAccountInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TrustedAccountSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	TrustedAccountId string `protobuf:"bytes,2,opt,name=trusted_account_id,json=trustedAccountId,proto3" json:"trusted_account_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Provider string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// +optional
	SecretSchemaId string `protobuf:"bytes,22,opt,name=secret_schema_id,json=secretSchemaId,proto3" json:"secret_schema_id,omitempty"`
	// +optional
	TrustedSecretId string `protobuf:"bytes,23,opt,name=trusted_secret_id,json=trustedSecretId,proto3" json:"trusted_secret_id,omitempty"`
}

func (x *TrustedAccountSearchQuery) Reset() {
	*x = TrustedAccountSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedAccountSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedAccountSearchQuery) ProtoMessage() {}

func (x *TrustedAccountSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedAccountSearchQuery.ProtoReflect.Descriptor instead.
func (*TrustedAccountSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{6}
}

func (x *TrustedAccountSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *TrustedAccountSearchQuery) GetTrustedAccountId() string {
	if x != nil {
		return x.TrustedAccountId
	}
	return ""
}

func (x *TrustedAccountSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrustedAccountSearchQuery) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TrustedAccountSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *TrustedAccountSearchQuery) GetSecretSchemaId() string {
	if x != nil {
		return x.SecretSchemaId
	}
	return ""
}

func (x *TrustedAccountSearchQuery) GetTrustedSecretId() string {
	if x != nil {
		return x.TrustedSecretId
	}
	return ""
}

type TrustedAccountsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*TrustedAccountInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *TrustedAccountsInfo) Reset() {
	*x = TrustedAccountsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedAccountsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedAccountsInfo) ProtoMessage() {}

func (x *TrustedAccountsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedAccountsInfo.ProtoReflect.Descriptor instead.
func (*TrustedAccountsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{7}
}

func (x *TrustedAccountsInfo) GetResults() []*TrustedAccountInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TrustedAccountsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type TrustedAccountStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *v2.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *TrustedAccountStatQuery) Reset() {
	*x = TrustedAccountStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedAccountStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedAccountStatQuery) ProtoMessage() {}

func (x *TrustedAccountStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedAccountStatQuery.ProtoReflect.Descriptor instead.
func (*TrustedAccountStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP(), []int{8}
}

func (x *TrustedAccountStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_spaceone_api_identity_v2_trusted_account_proto protoreflect.FileDescriptor

var file_spaceone_api_identity_v2_trusted_account_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xcd, 0x04, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x79, 0x6e,
	0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x6a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22, 0xb6, 0x02, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x15, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x97, 0x05, 0x0a, 0x12, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x61,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x34, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22, 0xdb, 0x02, 0x0a,
	0x19, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22, 0x7e, 0x0a, 0x13, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x32, 0xc3, 0x09, 0x0a, 0x0e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x9d, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a,
	0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a,
	0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xbb, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a,
	0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32,
	0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2d, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a,
	0x01, 0x2a, 0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32,
	0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x7d, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x32, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x91, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x2f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a,
	0x01, 0x2a, 0x22, 0x21, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32,
	0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x31,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65,
	0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_spaceone_api_identity_v2_trusted_account_proto_rawDescOnce sync.Once
	file_spaceone_api_identity_v2_trusted_account_proto_rawDescData = file_spaceone_api_identity_v2_trusted_account_proto_rawDesc
)

func file_spaceone_api_identity_v2_trusted_account_proto_rawDescGZIP() []byte {
	file_spaceone_api_identity_v2_trusted_account_proto_rawDescOnce.Do(func() {
		file_spaceone_api_identity_v2_trusted_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_identity_v2_trusted_account_proto_rawDescData)
	})
	return file_spaceone_api_identity_v2_trusted_account_proto_rawDescData
}

var file_spaceone_api_identity_v2_trusted_account_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_spaceone_api_identity_v2_trusted_account_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_spaceone_api_identity_v2_trusted_account_proto_goTypes = []interface{}{
	(Scheduled_ScheduledState)(0),                  // 0: spaceone.api.identity.v2.Scheduled.ScheduledState
	(CreateTrustedAccountRequest_ResourceGroup)(0), // 1: spaceone.api.identity.v2.CreateTrustedAccountRequest.ResourceGroup
	(TrustedAccountInfo_ResourceGroup)(0),          // 2: spaceone.api.identity.v2.TrustedAccountInfo.ResourceGroup
	(TrustedAccountSearchQuery_ResourceGroup)(0),   // 3: spaceone.api.identity.v2.TrustedAccountSearchQuery.ResourceGroup
	(*Scheduled)(nil),                              // 4: spaceone.api.identity.v2.Scheduled
	(*CreateTrustedAccountRequest)(nil),            // 5: spaceone.api.identity.v2.CreateTrustedAccountRequest
	(*UpdateTrustedAccountRequest)(nil),            // 6: spaceone.api.identity.v2.UpdateTrustedAccountRequest
	(*UpdateTrustedAccountSecretRequest)(nil),      // 7: spaceone.api.identity.v2.UpdateTrustedAccountSecretRequest
	(*TrustedAccountRequest)(nil),                  // 8: spaceone.api.identity.v2.TrustedAccountRequest
	(*TrustedAccountInfo)(nil),                     // 9: spaceone.api.identity.v2.TrustedAccountInfo
	(*TrustedAccountSearchQuery)(nil),              // 10: spaceone.api.identity.v2.TrustedAccountSearchQuery
	(*TrustedAccountsInfo)(nil),                    // 11: spaceone.api.identity.v2.TrustedAccountsInfo
	(*TrustedAccountStatQuery)(nil),                // 12: spaceone.api.identity.v2.TrustedAccountStatQuery
	(*_struct.Struct)(nil),                         // 13: google.protobuf.Struct
	(*v2.Query)(nil),                               // 14: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),                     // 15: spaceone.api.core.v2.StatisticsQuery
	(*empty.Empty)(nil),                            // 16: google.protobuf.Empty
}
var file_spaceone_api_identity_v2_trusted_account_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.identity.v2.Scheduled.state:type_name -> spaceone.api.identity.v2.Scheduled.ScheduledState
	13, // 1: spaceone.api.identity.v2.CreateTrustedAccountRequest.data:type_name -> google.protobuf.Struct
	13, // 2: spaceone.api.identity.v2.CreateTrustedAccountRequest.secret_data:type_name -> google.protobuf.Struct
	4,  // 3: spaceone.api.identity.v2.CreateTrustedAccountRequest.schedule:type_name -> spaceone.api.identity.v2.Scheduled
	13, // 4: spaceone.api.identity.v2.CreateTrustedAccountRequest.sync_options:type_name -> google.protobuf.Struct
	13, // 5: spaceone.api.identity.v2.CreateTrustedAccountRequest.tags:type_name -> google.protobuf.Struct
	1,  // 6: spaceone.api.identity.v2.CreateTrustedAccountRequest.resource_group:type_name -> spaceone.api.identity.v2.CreateTrustedAccountRequest.ResourceGroup
	13, // 7: spaceone.api.identity.v2.UpdateTrustedAccountRequest.data:type_name -> google.protobuf.Struct
	4,  // 8: spaceone.api.identity.v2.UpdateTrustedAccountRequest.schedule:type_name -> spaceone.api.identity.v2.Scheduled
	13, // 9: spaceone.api.identity.v2.UpdateTrustedAccountRequest.sync_options:type_name -> google.protobuf.Struct
	13, // 10: spaceone.api.identity.v2.UpdateTrustedAccountRequest.tags:type_name -> google.protobuf.Struct
	13, // 11: spaceone.api.identity.v2.UpdateTrustedAccountSecretRequest.secret_data:type_name -> google.protobuf.Struct
	13, // 12: spaceone.api.identity.v2.TrustedAccountInfo.data:type_name -> google.protobuf.Struct
	4,  // 13: spaceone.api.identity.v2.TrustedAccountInfo.schedule:type_name -> spaceone.api.identity.v2.Scheduled
	13, // 14: spaceone.api.identity.v2.TrustedAccountInfo.sync_options:type_name -> google.protobuf.Struct
	13, // 15: spaceone.api.identity.v2.TrustedAccountInfo.tags:type_name -> google.protobuf.Struct
	2,  // 16: spaceone.api.identity.v2.TrustedAccountInfo.resource_group:type_name -> spaceone.api.identity.v2.TrustedAccountInfo.ResourceGroup
	14, // 17: spaceone.api.identity.v2.TrustedAccountSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	9,  // 18: spaceone.api.identity.v2.TrustedAccountsInfo.results:type_name -> spaceone.api.identity.v2.TrustedAccountInfo
	15, // 19: spaceone.api.identity.v2.TrustedAccountStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	5,  // 20: spaceone.api.identity.v2.TrustedAccount.create:input_type -> spaceone.api.identity.v2.CreateTrustedAccountRequest
	6,  // 21: spaceone.api.identity.v2.TrustedAccount.update:input_type -> spaceone.api.identity.v2.UpdateTrustedAccountRequest
	7,  // 22: spaceone.api.identity.v2.TrustedAccount.update_secret_data:input_type -> spaceone.api.identity.v2.UpdateTrustedAccountSecretRequest
	8,  // 23: spaceone.api.identity.v2.TrustedAccount.delete:input_type -> spaceone.api.identity.v2.TrustedAccountRequest
	8,  // 24: spaceone.api.identity.v2.TrustedAccount.sync:input_type -> spaceone.api.identity.v2.TrustedAccountRequest
	8,  // 25: spaceone.api.identity.v2.TrustedAccount.get:input_type -> spaceone.api.identity.v2.TrustedAccountRequest
	10, // 26: spaceone.api.identity.v2.TrustedAccount.list:input_type -> spaceone.api.identity.v2.TrustedAccountSearchQuery
	12, // 27: spaceone.api.identity.v2.TrustedAccount.stat:input_type -> spaceone.api.identity.v2.TrustedAccountStatQuery
	9,  // 28: spaceone.api.identity.v2.TrustedAccount.create:output_type -> spaceone.api.identity.v2.TrustedAccountInfo
	9,  // 29: spaceone.api.identity.v2.TrustedAccount.update:output_type -> spaceone.api.identity.v2.TrustedAccountInfo
	9,  // 30: spaceone.api.identity.v2.TrustedAccount.update_secret_data:output_type -> spaceone.api.identity.v2.TrustedAccountInfo
	16, // 31: spaceone.api.identity.v2.TrustedAccount.delete:output_type -> google.protobuf.Empty
	16, // 32: spaceone.api.identity.v2.TrustedAccount.sync:output_type -> google.protobuf.Empty
	9,  // 33: spaceone.api.identity.v2.TrustedAccount.get:output_type -> spaceone.api.identity.v2.TrustedAccountInfo
	11, // 34: spaceone.api.identity.v2.TrustedAccount.list:output_type -> spaceone.api.identity.v2.TrustedAccountsInfo
	13, // 35: spaceone.api.identity.v2.TrustedAccount.stat:output_type -> google.protobuf.Struct
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_spaceone_api_identity_v2_trusted_account_proto_init() }
func file_spaceone_api_identity_v2_trusted_account_proto_init() {
	if File_spaceone_api_identity_v2_trusted_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheduled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrustedAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrustedAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrustedAccountSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedAccountSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedAccountsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_trusted_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedAccountStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_identity_v2_trusted_account_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_identity_v2_trusted_account_proto_goTypes,
		DependencyIndexes: file_spaceone_api_identity_v2_trusted_account_proto_depIdxs,
		EnumInfos:         file_spaceone_api_identity_v2_trusted_account_proto_enumTypes,
		MessageInfos:      file_spaceone_api_identity_v2_trusted_account_proto_msgTypes,
	}.Build()
	File_spaceone_api_identity_v2_trusted_account_proto = out.File
	file_spaceone_api_identity_v2_trusted_account_proto_rawDesc = nil
	file_spaceone_api_identity_v2_trusted_account_proto_goTypes = nil
	file_spaceone_api_identity_v2_trusted_account_proto_depIdxs = nil
}
