// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: spaceone/api/identity/v2/workspace_user.proto

package v2

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	_ "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkspaceUserSearchQuery_State int32

const (
	WorkspaceUserSearchQuery_NONE     WorkspaceUserSearchQuery_State = 0
	WorkspaceUserSearchQuery_ENABLED  WorkspaceUserSearchQuery_State = 1
	WorkspaceUserSearchQuery_DISABLED WorkspaceUserSearchQuery_State = 2
	WorkspaceUserSearchQuery_PENDING  WorkspaceUserSearchQuery_State = 3
)

// Enum value maps for WorkspaceUserSearchQuery_State.
var (
	WorkspaceUserSearchQuery_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
		3: "PENDING",
	}
	WorkspaceUserSearchQuery_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
		"PENDING":  3,
	}
)

func (x WorkspaceUserSearchQuery_State) Enum() *WorkspaceUserSearchQuery_State {
	p := new(WorkspaceUserSearchQuery_State)
	*p = x
	return p
}

func (x WorkspaceUserSearchQuery_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceUserSearchQuery_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[0].Descriptor()
}

func (WorkspaceUserSearchQuery_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[0]
}

func (x WorkspaceUserSearchQuery_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceUserSearchQuery_State.Descriptor instead.
func (WorkspaceUserSearchQuery_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{2, 0}
}

type WorkspaceUserInfo_State int32

const (
	WorkspaceUserInfo_STATE_NONE WorkspaceUserInfo_State = 0
	WorkspaceUserInfo_ENABLED    WorkspaceUserInfo_State = 1
	WorkspaceUserInfo_DISABLED   WorkspaceUserInfo_State = 2
	WorkspaceUserInfo_PENDING    WorkspaceUserInfo_State = 3
)

// Enum value maps for WorkspaceUserInfo_State.
var (
	WorkspaceUserInfo_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "ENABLED",
		2: "DISABLED",
		3: "PENDING",
	}
	WorkspaceUserInfo_State_value = map[string]int32{
		"STATE_NONE": 0,
		"ENABLED":    1,
		"DISABLED":   2,
		"PENDING":    3,
	}
)

func (x WorkspaceUserInfo_State) Enum() *WorkspaceUserInfo_State {
	p := new(WorkspaceUserInfo_State)
	*p = x
	return p
}

func (x WorkspaceUserInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceUserInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[1].Descriptor()
}

func (WorkspaceUserInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[1]
}

func (x WorkspaceUserInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceUserInfo_State.Descriptor instead.
func (WorkspaceUserInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{3, 0}
}

type WorkspaceUserInfo_RoleType int32

const (
	WorkspaceUserInfo_ROLE_TYPE_NONE   WorkspaceUserInfo_RoleType = 0
	WorkspaceUserInfo_SYSTEM_ADMIN     WorkspaceUserInfo_RoleType = 1
	WorkspaceUserInfo_DOMAIN_ADMIN     WorkspaceUserInfo_RoleType = 2
	WorkspaceUserInfo_WORKSPACE_OWNER  WorkspaceUserInfo_RoleType = 3
	WorkspaceUserInfo_WORKSPACE_MEMBER WorkspaceUserInfo_RoleType = 4
	WorkspaceUserInfo_USER             WorkspaceUserInfo_RoleType = 5
)

// Enum value maps for WorkspaceUserInfo_RoleType.
var (
	WorkspaceUserInfo_RoleType_name = map[int32]string{
		0: "ROLE_TYPE_NONE",
		1: "SYSTEM_ADMIN",
		2: "DOMAIN_ADMIN",
		3: "WORKSPACE_OWNER",
		4: "WORKSPACE_MEMBER",
		5: "USER",
	}
	WorkspaceUserInfo_RoleType_value = map[string]int32{
		"ROLE_TYPE_NONE":   0,
		"SYSTEM_ADMIN":     1,
		"DOMAIN_ADMIN":     2,
		"WORKSPACE_OWNER":  3,
		"WORKSPACE_MEMBER": 4,
		"USER":             5,
	}
)

func (x WorkspaceUserInfo_RoleType) Enum() *WorkspaceUserInfo_RoleType {
	p := new(WorkspaceUserInfo_RoleType)
	*p = x
	return p
}

func (x WorkspaceUserInfo_RoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceUserInfo_RoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[2].Descriptor()
}

func (WorkspaceUserInfo_RoleType) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_workspace_user_proto_enumTypes[2]
}

func (x WorkspaceUserInfo_RoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceUserInfo_RoleType.Descriptor instead.
func (WorkspaceUserInfo_RoleType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{3, 1}
}

type CreateWorkspaceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// When auth_type is LOCAL, password is required.
	// +optional
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Email    string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	AuthType AuthType `protobuf:"varint,5,opt,name=auth_type,json=authType,proto3,enum=spaceone.api.identity.v2.AuthType" json:"auth_type,omitempty"`
	// en,ko
	// +optional
	Language string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// UTC, Asia/Seoul
	// +optional
	Timezone string `protobuf:"bytes,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	// If reset_password is true, send email
	ResetPassword bool   `protobuf:"varint,9,opt,name=reset_password,json=resetPassword,proto3" json:"reset_password,omitempty"`
	RoleId        string `protobuf:"bytes,10,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	DomainId      string `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId   string `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CreateWorkspaceUserRequest) Reset() {
	*x = CreateWorkspaceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspaceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceUserRequest) ProtoMessage() {}

func (x *CreateWorkspaceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceUserRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceUserRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkspaceUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_NONE_BACKEND
}

func (x *CreateWorkspaceUserRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateWorkspaceUserRequest) GetResetPassword() bool {
	if x != nil {
		return x.ResetPassword
	}
	return false
}

func (x *CreateWorkspaceUserRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CreateWorkspaceUserRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type WorkspaceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DomainId    string `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId string `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserRequest) Reset() {
	*x = WorkspaceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserRequest) ProtoMessage() {}

func (x *WorkspaceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceUserRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{1}
}

func (x *WorkspaceUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceUserRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WorkspaceUserRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type WorkspaceUserSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	UserId string    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State WorkspaceUserSearchQuery_State `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.identity.v2.WorkspaceUserSearchQuery_State" json:"state,omitempty"`
	// +optional
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// +optional
	AuthType AuthType `protobuf:"varint,6,opt,name=auth_type,json=authType,proto3,enum=spaceone.api.identity.v2.AuthType" json:"auth_type,omitempty"`
	DomainId string   `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserSearchQuery) Reset() {
	*x = WorkspaceUserSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceUserSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserSearchQuery) ProtoMessage() {}

func (x *WorkspaceUserSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserSearchQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceUserSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{2}
}

func (x *WorkspaceUserSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WorkspaceUserSearchQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceUserSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceUserSearchQuery) GetState() WorkspaceUserSearchQuery_State {
	if x != nil {
		return x.State
	}
	return WorkspaceUserSearchQuery_NONE
}

func (x *WorkspaceUserSearchQuery) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WorkspaceUserSearchQuery) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_NONE_BACKEND
}

func (x *WorkspaceUserSearchQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WorkspaceUserSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type WorkspaceUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string                     `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name           string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State          WorkspaceUserInfo_State    `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.identity.v2.WorkspaceUserInfo_State" json:"state,omitempty"`
	Email          string                     `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	AuthType       AuthType                   `protobuf:"varint,5,opt,name=auth_type,json=authType,proto3,enum=spaceone.api.identity.v2.AuthType" json:"auth_type,omitempty"`
	RoleType       WorkspaceUserInfo_RoleType `protobuf:"varint,6,opt,name=role_type,json=roleType,proto3,enum=spaceone.api.identity.v2.WorkspaceUserInfo_RoleType" json:"role_type,omitempty"`
	Tags           *_struct.Struct            `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId       string                     `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt      string                     `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastAccessedAt string                     `protobuf:"bytes,32,opt,name=last_accessed_at,json=lastAccessedAt,proto3" json:"last_accessed_at,omitempty"`
}

func (x *WorkspaceUserInfo) Reset() {
	*x = WorkspaceUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserInfo) ProtoMessage() {}

func (x *WorkspaceUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceUserInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{3}
}

func (x *WorkspaceUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceUserInfo) GetState() WorkspaceUserInfo_State {
	if x != nil {
		return x.State
	}
	return WorkspaceUserInfo_STATE_NONE
}

func (x *WorkspaceUserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WorkspaceUserInfo) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_NONE_BACKEND
}

func (x *WorkspaceUserInfo) GetRoleType() WorkspaceUserInfo_RoleType {
	if x != nil {
		return x.RoleType
	}
	return WorkspaceUserInfo_ROLE_TYPE_NONE
}

func (x *WorkspaceUserInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorkspaceUserInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WorkspaceUserInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkspaceUserInfo) GetLastAccessedAt() string {
	if x != nil {
		return x.LastAccessedAt
	}
	return ""
}

type WorkspaceUsersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*UserInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *WorkspaceUsersInfo) Reset() {
	*x = WorkspaceUsersInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceUsersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUsersInfo) ProtoMessage() {}

func (x *WorkspaceUsersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUsersInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceUsersInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{4}
}

func (x *WorkspaceUsersInfo) GetResults() []*UserInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WorkspaceUsersInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WorkspaceUserStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v2.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WorkspaceUserStatQuery) Reset() {
	*x = WorkspaceUserStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceUserStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceUserStatQuery) ProtoMessage() {}

func (x *WorkspaceUserStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceUserStatQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceUserStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP(), []int{5}
}

func (x *WorkspaceUserStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WorkspaceUserStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WorkspaceUserStatQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

var File_spaceone_api_identity_v2_workspace_user_proto protoreflect.FileDescriptor

var file_spaceone_api_identity_v2_workspace_user_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x03, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x6f, 0x0a,
	0x14, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9c,
	0x03, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x3f, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x80, 0x05,
	0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x3f, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x51, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x77, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4d,
	0x41, 0x49, 0x4e, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4d, 0x45,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x05,
	0x22, 0x73, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x32, 0xd5, 0x04,
	0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x9a, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x8e, 0x01, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x95, 0x01,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x30, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_identity_v2_workspace_user_proto_rawDescOnce sync.Once
	file_spaceone_api_identity_v2_workspace_user_proto_rawDescData = file_spaceone_api_identity_v2_workspace_user_proto_rawDesc
)

func file_spaceone_api_identity_v2_workspace_user_proto_rawDescGZIP() []byte {
	file_spaceone_api_identity_v2_workspace_user_proto_rawDescOnce.Do(func() {
		file_spaceone_api_identity_v2_workspace_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_identity_v2_workspace_user_proto_rawDescData)
	})
	return file_spaceone_api_identity_v2_workspace_user_proto_rawDescData
}

var file_spaceone_api_identity_v2_workspace_user_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spaceone_api_identity_v2_workspace_user_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_spaceone_api_identity_v2_workspace_user_proto_goTypes = []interface{}{
	(WorkspaceUserSearchQuery_State)(0), // 0: spaceone.api.identity.v2.WorkspaceUserSearchQuery.State
	(WorkspaceUserInfo_State)(0),        // 1: spaceone.api.identity.v2.WorkspaceUserInfo.State
	(WorkspaceUserInfo_RoleType)(0),     // 2: spaceone.api.identity.v2.WorkspaceUserInfo.RoleType
	(*CreateWorkspaceUserRequest)(nil),  // 3: spaceone.api.identity.v2.CreateWorkspaceUserRequest
	(*WorkspaceUserRequest)(nil),        // 4: spaceone.api.identity.v2.WorkspaceUserRequest
	(*WorkspaceUserSearchQuery)(nil),    // 5: spaceone.api.identity.v2.WorkspaceUserSearchQuery
	(*WorkspaceUserInfo)(nil),           // 6: spaceone.api.identity.v2.WorkspaceUserInfo
	(*WorkspaceUsersInfo)(nil),          // 7: spaceone.api.identity.v2.WorkspaceUsersInfo
	(*WorkspaceUserStatQuery)(nil),      // 8: spaceone.api.identity.v2.WorkspaceUserStatQuery
	(AuthType)(0),                       // 9: spaceone.api.identity.v2.AuthType
	(*_struct.Struct)(nil),              // 10: google.protobuf.Struct
	(*v2.Query)(nil),                    // 11: spaceone.api.core.v2.Query
	(*UserInfo)(nil),                    // 12: spaceone.api.identity.v2.UserInfo
	(*v2.StatisticsQuery)(nil),          // 13: spaceone.api.core.v2.StatisticsQuery
}
var file_spaceone_api_identity_v2_workspace_user_proto_depIdxs = []int32{
	9,  // 0: spaceone.api.identity.v2.CreateWorkspaceUserRequest.auth_type:type_name -> spaceone.api.identity.v2.AuthType
	10, // 1: spaceone.api.identity.v2.CreateWorkspaceUserRequest.tags:type_name -> google.protobuf.Struct
	11, // 2: spaceone.api.identity.v2.WorkspaceUserSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	0,  // 3: spaceone.api.identity.v2.WorkspaceUserSearchQuery.state:type_name -> spaceone.api.identity.v2.WorkspaceUserSearchQuery.State
	9,  // 4: spaceone.api.identity.v2.WorkspaceUserSearchQuery.auth_type:type_name -> spaceone.api.identity.v2.AuthType
	1,  // 5: spaceone.api.identity.v2.WorkspaceUserInfo.state:type_name -> spaceone.api.identity.v2.WorkspaceUserInfo.State
	9,  // 6: spaceone.api.identity.v2.WorkspaceUserInfo.auth_type:type_name -> spaceone.api.identity.v2.AuthType
	2,  // 7: spaceone.api.identity.v2.WorkspaceUserInfo.role_type:type_name -> spaceone.api.identity.v2.WorkspaceUserInfo.RoleType
	10, // 8: spaceone.api.identity.v2.WorkspaceUserInfo.tags:type_name -> google.protobuf.Struct
	12, // 9: spaceone.api.identity.v2.WorkspaceUsersInfo.results:type_name -> spaceone.api.identity.v2.UserInfo
	13, // 10: spaceone.api.identity.v2.WorkspaceUserStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	3,  // 11: spaceone.api.identity.v2.WorkspaceUser.create:input_type -> spaceone.api.identity.v2.CreateWorkspaceUserRequest
	4,  // 12: spaceone.api.identity.v2.WorkspaceUser.get:input_type -> spaceone.api.identity.v2.WorkspaceUserRequest
	5,  // 13: spaceone.api.identity.v2.WorkspaceUser.list:input_type -> spaceone.api.identity.v2.WorkspaceUserSearchQuery
	8,  // 14: spaceone.api.identity.v2.WorkspaceUser.stat:input_type -> spaceone.api.identity.v2.WorkspaceUserStatQuery
	6,  // 15: spaceone.api.identity.v2.WorkspaceUser.create:output_type -> spaceone.api.identity.v2.WorkspaceUserInfo
	6,  // 16: spaceone.api.identity.v2.WorkspaceUser.get:output_type -> spaceone.api.identity.v2.WorkspaceUserInfo
	7,  // 17: spaceone.api.identity.v2.WorkspaceUser.list:output_type -> spaceone.api.identity.v2.WorkspaceUsersInfo
	10, // 18: spaceone.api.identity.v2.WorkspaceUser.stat:output_type -> google.protobuf.Struct
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spaceone_api_identity_v2_workspace_user_proto_init() }
func file_spaceone_api_identity_v2_workspace_user_proto_init() {
	if File_spaceone_api_identity_v2_workspace_user_proto != nil {
		return
	}
	file_spaceone_api_identity_v2_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspaceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceUserSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceUsersInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_identity_v2_workspace_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceUserStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_identity_v2_workspace_user_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_identity_v2_workspace_user_proto_goTypes,
		DependencyIndexes: file_spaceone_api_identity_v2_workspace_user_proto_depIdxs,
		EnumInfos:         file_spaceone_api_identity_v2_workspace_user_proto_enumTypes,
		MessageInfos:      file_spaceone_api_identity_v2_workspace_user_proto_msgTypes,
	}.Build()
	File_spaceone_api_identity_v2_workspace_user_proto = out.File
	file_spaceone_api_identity_v2_workspace_user_proto_rawDesc = nil
	file_spaceone_api_identity_v2_workspace_user_proto_goTypes = nil
	file_spaceone_api_identity_v2_workspace_user_proto_depIdxs = nil
}
