// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.6.1
// source: spaceone/api/identity/v2/domain.proto

package v2

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainAuthInfo_ExternalAuthState int32

const (
	DomainAuthInfo_NONE     DomainAuthInfo_ExternalAuthState = 0
	DomainAuthInfo_ENABLED  DomainAuthInfo_ExternalAuthState = 1
	DomainAuthInfo_DISABLED DomainAuthInfo_ExternalAuthState = 2
)

// Enum value maps for DomainAuthInfo_ExternalAuthState.
var (
	DomainAuthInfo_ExternalAuthState_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	DomainAuthInfo_ExternalAuthState_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x DomainAuthInfo_ExternalAuthState) Enum() *DomainAuthInfo_ExternalAuthState {
	p := new(DomainAuthInfo_ExternalAuthState)
	*p = x
	return p
}

func (x DomainAuthInfo_ExternalAuthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainAuthInfo_ExternalAuthState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_domain_proto_enumTypes[0].Descriptor()
}

func (DomainAuthInfo_ExternalAuthState) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_domain_proto_enumTypes[0]
}

func (x DomainAuthInfo_ExternalAuthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainAuthInfo_ExternalAuthState.Descriptor instead.
func (DomainAuthInfo_ExternalAuthState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{5, 0}
}

type DomainInfo_State int32

const (
	DomainInfo_NONE     DomainInfo_State = 0
	DomainInfo_ENABLED  DomainInfo_State = 1
	DomainInfo_DISABLED DomainInfo_State = 2
)

// Enum value maps for DomainInfo_State.
var (
	DomainInfo_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	DomainInfo_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x DomainInfo_State) Enum() *DomainInfo_State {
	p := new(DomainInfo_State)
	*p = x
	return p
}

func (x DomainInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_domain_proto_enumTypes[1].Descriptor()
}

func (DomainInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_domain_proto_enumTypes[1]
}

func (x DomainInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainInfo_State.Descriptor instead.
func (DomainInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{6, 0}
}

type DomainSearchQuery_State int32

const (
	DomainSearchQuery_NONE     DomainSearchQuery_State = 0
	DomainSearchQuery_ENABLED  DomainSearchQuery_State = 1
	DomainSearchQuery_DISABLED DomainSearchQuery_State = 2
)

// Enum value maps for DomainSearchQuery_State.
var (
	DomainSearchQuery_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	DomainSearchQuery_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x DomainSearchQuery_State) Enum() *DomainSearchQuery_State {
	p := new(DomainSearchQuery_State)
	*p = x
	return p
}

func (x DomainSearchQuery_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainSearchQuery_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_domain_proto_enumTypes[2].Descriptor()
}

func (DomainSearchQuery_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_domain_proto_enumTypes[2]
}

func (x DomainSearchQuery_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainSearchQuery_State.Descriptor instead.
func (DomainSearchQuery_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{7, 0}
}

type Admin struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// +optional
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// +optional
	Language string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	// +optional
	Timezone string `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	// +optional
	ResetPassword bool `protobuf:"varint,8,opt,name=reset_password,json=resetPassword,proto3" json:"reset_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Admin) Reset() {
	*x = Admin{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Admin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admin) ProtoMessage() {}

func (x *Admin) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admin.ProtoReflect.Descriptor instead.
func (*Admin) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{0}
}

func (x *Admin) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Admin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Admin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Admin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Admin) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Admin) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Admin) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Admin) GetResetPassword() bool {
	if x != nil {
		return x.ResetPassword
	}
	return false
}

//	{
//	 "name": "wonny-dev",
//	 "admin": {
//	   "user_id": "wonny@cloudforet.io",
//	   "name": "Wonny",
//	   "password": "Password1234!",
//	   "email": "wonny@cloudforet.io",
//	   "language": "en",
//	   "timezone": "UTC"
//	 }
//	}
type CreateDomainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Admin *Admin                 `protobuf:"bytes,2,opt,name=admin,proto3" json:"admin,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDomainRequest) Reset() {
	*x = CreateDomainRequest{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainRequest) ProtoMessage() {}

func (x *CreateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDomainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDomainRequest) GetAdmin() *Admin {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *CreateDomainRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

//	{
//	 "domain_id": "domain-a1b2c3d4e5f6",
//	 "name": "wonny-dev"
//	}
type UpdateDomainRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	DomainId string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDomainRequest) Reset() {
	*x = UpdateDomainRequest{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainRequest) ProtoMessage() {}

func (x *UpdateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainRequest.ProtoReflect.Descriptor instead.
func (*UpdateDomainRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UpdateDomainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDomainRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

//	{
//	 "domain_id": "domain-a1b2c3d4e5f6"
//	}
type DomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainRequest) Reset() {
	*x = DomainRequest{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRequest) ProtoMessage() {}

func (x *DomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRequest.ProtoReflect.Descriptor instead.
func (*DomainRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{3}
}

func (x *DomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	 "name": "wonny-dev"
//	}
type GetDomainAuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDomainAuthRequest) Reset() {
	*x = GetDomainAuthRequest{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDomainAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomainAuthRequest) ProtoMessage() {}

func (x *GetDomainAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomainAuthRequest.ProtoReflect.Descriptor instead.
func (*GetDomainAuthRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{4}
}

func (x *GetDomainAuthRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//	{
//	 "domain_id": "domain-a1b2c3d4e5f6",
//	 "name": "wonny-dev",
//	 "external_auth_state": "DISABLED",
//	 "metadata": {},
//	 "config": {
//	     "settings": {
//	       "unified_cost_config": {
//	         "aggregation_day": 15.0,
//	         "currency": "KRW",
//	         "custom_exchange_rate": {},
//	         "exchange_date": 15.0,
//	         "exchange_rate_mode": "AUTO",
//	         "exchange_source": "Yahoo! Finance",
//	         "is_exchange_last_day": false,
//	         "is_last_day": false,
//	         "run_hour": 0.0
//	       }
//	     }
//	 }
//	}
type DomainAuthInfo struct {
	state             protoimpl.MessageState           `protogen:"open.v1"`
	DomainId          string                           `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Name              string                           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalAuthState DomainAuthInfo_ExternalAuthState `protobuf:"varint,3,opt,name=external_auth_state,json=externalAuthState,proto3,enum=spaceone.api.identity.v2.DomainAuthInfo_ExternalAuthState" json:"external_auth_state,omitempty"`
	Metadata          *_struct.Struct                  `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Config            *_struct.Struct                  `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DomainAuthInfo) Reset() {
	*x = DomainAuthInfo{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainAuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainAuthInfo) ProtoMessage() {}

func (x *DomainAuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainAuthInfo.ProtoReflect.Descriptor instead.
func (*DomainAuthInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{5}
}

func (x *DomainAuthInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DomainAuthInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainAuthInfo) GetExternalAuthState() DomainAuthInfo_ExternalAuthState {
	if x != nil {
		return x.ExternalAuthState
	}
	return DomainAuthInfo_NONE
}

func (x *DomainAuthInfo) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DomainAuthInfo) GetConfig() *_struct.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

//	{
//	 "domain_id": "domain-a1b2c3d4e5f6",
//	 "name": "wonny-dev",
//	 "state": "ENABLED",
//	 "created_at": "2024-11-12T02:24:01.233Z"
//	}
type DomainInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         DomainInfo_State       `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.identity.v2.DomainInfo_State" json:"state,omitempty"`
	Tags          *_struct.Struct        `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt     string                 `protobuf:"bytes,32,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainInfo) Reset() {
	*x = DomainInfo{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainInfo) ProtoMessage() {}

func (x *DomainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainInfo.ProtoReflect.Descriptor instead.
func (*DomainInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{6}
}

func (x *DomainInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DomainInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainInfo) GetState() DomainInfo_State {
	if x != nil {
		return x.State
	}
	return DomainInfo_NONE
}

func (x *DomainInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DomainInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DomainInfo) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

//	{
//	 "query": {
//	   "filter": [{
//	     "k": "tag.env",
//	     "v": "dev",
//	     "o": "eq"
//	   }],
//	   "sort": [{
//	     "key": "created_at",
//	     "desc": true
//	   }]
//	 }
//	}
type DomainSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State         DomainSearchQuery_State `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.identity.v2.DomainSearchQuery_State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainSearchQuery) Reset() {
	*x = DomainSearchQuery{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainSearchQuery) ProtoMessage() {}

func (x *DomainSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainSearchQuery.ProtoReflect.Descriptor instead.
func (*DomainSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{7}
}

func (x *DomainSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *DomainSearchQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DomainSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DomainSearchQuery) GetState() DomainSearchQuery_State {
	if x != nil {
		return x.State
	}
	return DomainSearchQuery_NONE
}

//	{
//	 "results": [
//	 {
//	   "domain_id": "domain-a1b2c3d4e5f6",
//	   "name": "wonny-dev1",
//	   "state": "ENABLED",
//	   "created_at": "2024-11-12T02:24:01.233Z"
//	 },
//	 {
//	   "domain_id": "domain-g7h8i9j1k2l3",
//	   "name": "wonny-dev2",
//	   "state": "ENABLED",
//	   "created_at": "2024-11-01T03:34:01.233Z"
//	 }
//	 ],
//	 "total_count": 2
//	}
type DomainsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*DomainInfo          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainsInfo) Reset() {
	*x = DomainsInfo{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainsInfo) ProtoMessage() {}

func (x *DomainsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainsInfo.ProtoReflect.Descriptor instead.
func (*DomainsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{8}
}

func (x *DomainsInfo) GetResults() []*DomainInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *DomainsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DomainStatQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainStatQuery) Reset() {
	*x = DomainStatQuery{}
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainStatQuery) ProtoMessage() {}

func (x *DomainStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_domain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainStatQuery.ProtoReflect.Descriptor instead.
func (*DomainStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_domain_proto_rawDescGZIP(), []int{9}
}

func (x *DomainStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_spaceone_api_identity_v2_domain_proto protoreflect.FileDescriptor

var file_spaceone_api_identity_v2_domain_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x32, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf2, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x73, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x2c, 0x0a, 0x0d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcd, 0x02, 0x0a, 0x0e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x38, 0x0a, 0x11, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x22, 0x98, 0x02, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x2c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22,
	0xee, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x2c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x22, 0x6e, 0x0a, 0x0b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x32, 0xdd, 0x09, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x84, 0x01, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x70, 0x0a, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22,
	0x1a, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22,
	0x1a, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01,
	0x2a, 0x22, 0x1b, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x78,
	0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22,
	0x17, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x0d, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22,
	0x21, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x6d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_identity_v2_domain_proto_rawDescOnce sync.Once
	file_spaceone_api_identity_v2_domain_proto_rawDescData = file_spaceone_api_identity_v2_domain_proto_rawDesc
)

func file_spaceone_api_identity_v2_domain_proto_rawDescGZIP() []byte {
	file_spaceone_api_identity_v2_domain_proto_rawDescOnce.Do(func() {
		file_spaceone_api_identity_v2_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_identity_v2_domain_proto_rawDescData)
	})
	return file_spaceone_api_identity_v2_domain_proto_rawDescData
}

var file_spaceone_api_identity_v2_domain_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spaceone_api_identity_v2_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_identity_v2_domain_proto_goTypes = []any{
	(DomainAuthInfo_ExternalAuthState)(0), // 0: spaceone.api.identity.v2.DomainAuthInfo.ExternalAuthState
	(DomainInfo_State)(0),                 // 1: spaceone.api.identity.v2.DomainInfo.State
	(DomainSearchQuery_State)(0),          // 2: spaceone.api.identity.v2.DomainSearchQuery.State
	(*Admin)(nil),                         // 3: spaceone.api.identity.v2.Admin
	(*CreateDomainRequest)(nil),           // 4: spaceone.api.identity.v2.CreateDomainRequest
	(*UpdateDomainRequest)(nil),           // 5: spaceone.api.identity.v2.UpdateDomainRequest
	(*DomainRequest)(nil),                 // 6: spaceone.api.identity.v2.DomainRequest
	(*GetDomainAuthRequest)(nil),          // 7: spaceone.api.identity.v2.GetDomainAuthRequest
	(*DomainAuthInfo)(nil),                // 8: spaceone.api.identity.v2.DomainAuthInfo
	(*DomainInfo)(nil),                    // 9: spaceone.api.identity.v2.DomainInfo
	(*DomainSearchQuery)(nil),             // 10: spaceone.api.identity.v2.DomainSearchQuery
	(*DomainsInfo)(nil),                   // 11: spaceone.api.identity.v2.DomainsInfo
	(*DomainStatQuery)(nil),               // 12: spaceone.api.identity.v2.DomainStatQuery
	(*_struct.Struct)(nil),                // 13: google.protobuf.Struct
	(*v2.Query)(nil),                      // 14: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),            // 15: spaceone.api.core.v2.StatisticsQuery
	(*v2.AuthenticationRequest)(nil),      // 16: spaceone.api.core.v2.AuthenticationRequest
	(*empty.Empty)(nil),                   // 17: google.protobuf.Empty
	(*v2.AuthenticationResponse)(nil),     // 18: spaceone.api.core.v2.AuthenticationResponse
}
var file_spaceone_api_identity_v2_domain_proto_depIdxs = []int32{
	13, // 0: spaceone.api.identity.v2.Admin.tags:type_name -> google.protobuf.Struct
	3,  // 1: spaceone.api.identity.v2.CreateDomainRequest.admin:type_name -> spaceone.api.identity.v2.Admin
	13, // 2: spaceone.api.identity.v2.CreateDomainRequest.tags:type_name -> google.protobuf.Struct
	13, // 3: spaceone.api.identity.v2.UpdateDomainRequest.tags:type_name -> google.protobuf.Struct
	0,  // 4: spaceone.api.identity.v2.DomainAuthInfo.external_auth_state:type_name -> spaceone.api.identity.v2.DomainAuthInfo.ExternalAuthState
	13, // 5: spaceone.api.identity.v2.DomainAuthInfo.metadata:type_name -> google.protobuf.Struct
	13, // 6: spaceone.api.identity.v2.DomainAuthInfo.config:type_name -> google.protobuf.Struct
	1,  // 7: spaceone.api.identity.v2.DomainInfo.state:type_name -> spaceone.api.identity.v2.DomainInfo.State
	13, // 8: spaceone.api.identity.v2.DomainInfo.tags:type_name -> google.protobuf.Struct
	14, // 9: spaceone.api.identity.v2.DomainSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	2,  // 10: spaceone.api.identity.v2.DomainSearchQuery.state:type_name -> spaceone.api.identity.v2.DomainSearchQuery.State
	9,  // 11: spaceone.api.identity.v2.DomainsInfo.results:type_name -> spaceone.api.identity.v2.DomainInfo
	15, // 12: spaceone.api.identity.v2.DomainStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	4,  // 13: spaceone.api.identity.v2.Domain.create:input_type -> spaceone.api.identity.v2.CreateDomainRequest
	5,  // 14: spaceone.api.identity.v2.Domain.update:input_type -> spaceone.api.identity.v2.UpdateDomainRequest
	6,  // 15: spaceone.api.identity.v2.Domain.delete:input_type -> spaceone.api.identity.v2.DomainRequest
	6,  // 16: spaceone.api.identity.v2.Domain.enable:input_type -> spaceone.api.identity.v2.DomainRequest
	6,  // 17: spaceone.api.identity.v2.Domain.disable:input_type -> spaceone.api.identity.v2.DomainRequest
	6,  // 18: spaceone.api.identity.v2.Domain.get:input_type -> spaceone.api.identity.v2.DomainRequest
	7,  // 19: spaceone.api.identity.v2.Domain.get_auth_info:input_type -> spaceone.api.identity.v2.GetDomainAuthRequest
	16, // 20: spaceone.api.identity.v2.Domain.get_public_key:input_type -> spaceone.api.core.v2.AuthenticationRequest
	10, // 21: spaceone.api.identity.v2.Domain.list:input_type -> spaceone.api.identity.v2.DomainSearchQuery
	12, // 22: spaceone.api.identity.v2.Domain.stat:input_type -> spaceone.api.identity.v2.DomainStatQuery
	9,  // 23: spaceone.api.identity.v2.Domain.create:output_type -> spaceone.api.identity.v2.DomainInfo
	9,  // 24: spaceone.api.identity.v2.Domain.update:output_type -> spaceone.api.identity.v2.DomainInfo
	17, // 25: spaceone.api.identity.v2.Domain.delete:output_type -> google.protobuf.Empty
	9,  // 26: spaceone.api.identity.v2.Domain.enable:output_type -> spaceone.api.identity.v2.DomainInfo
	9,  // 27: spaceone.api.identity.v2.Domain.disable:output_type -> spaceone.api.identity.v2.DomainInfo
	9,  // 28: spaceone.api.identity.v2.Domain.get:output_type -> spaceone.api.identity.v2.DomainInfo
	8,  // 29: spaceone.api.identity.v2.Domain.get_auth_info:output_type -> spaceone.api.identity.v2.DomainAuthInfo
	18, // 30: spaceone.api.identity.v2.Domain.get_public_key:output_type -> spaceone.api.core.v2.AuthenticationResponse
	11, // 31: spaceone.api.identity.v2.Domain.list:output_type -> spaceone.api.identity.v2.DomainsInfo
	13, // 32: spaceone.api.identity.v2.Domain.stat:output_type -> google.protobuf.Struct
	23, // [23:33] is the sub-list for method output_type
	13, // [13:23] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_spaceone_api_identity_v2_domain_proto_init() }
func file_spaceone_api_identity_v2_domain_proto_init() {
	if File_spaceone_api_identity_v2_domain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_identity_v2_domain_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_identity_v2_domain_proto_goTypes,
		DependencyIndexes: file_spaceone_api_identity_v2_domain_proto_depIdxs,
		EnumInfos:         file_spaceone_api_identity_v2_domain_proto_enumTypes,
		MessageInfos:      file_spaceone_api_identity_v2_domain_proto_msgTypes,
	}.Build()
	File_spaceone_api_identity_v2_domain_proto = out.File
	file_spaceone_api_identity_v2_domain_proto_rawDesc = nil
	file_spaceone_api_identity_v2_domain_proto_goTypes = nil
	file_spaceone_api_identity_v2_domain_proto_depIdxs = nil
}
