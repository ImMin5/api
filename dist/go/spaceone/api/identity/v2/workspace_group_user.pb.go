// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v3.6.1
// source: spaceone/api/identity/v2/workspace_group_user.proto

package v2

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	_ "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkspaceGroupUserFindRequest_State int32

const (
	WorkspaceGroupUserFindRequest_NONE     WorkspaceGroupUserFindRequest_State = 0
	WorkspaceGroupUserFindRequest_ENABLED  WorkspaceGroupUserFindRequest_State = 1
	WorkspaceGroupUserFindRequest_DISABLED WorkspaceGroupUserFindRequest_State = 2
	WorkspaceGroupUserFindRequest_PENDING  WorkspaceGroupUserFindRequest_State = 3
)

// Enum value maps for WorkspaceGroupUserFindRequest_State.
var (
	WorkspaceGroupUserFindRequest_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
		3: "PENDING",
	}
	WorkspaceGroupUserFindRequest_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
		"PENDING":  3,
	}
)

func (x WorkspaceGroupUserFindRequest_State) Enum() *WorkspaceGroupUserFindRequest_State {
	p := new(WorkspaceGroupUserFindRequest_State)
	*p = x
	return p
}

func (x WorkspaceGroupUserFindRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceGroupUserFindRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes[0].Descriptor()
}

func (WorkspaceGroupUserFindRequest_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes[0]
}

func (x WorkspaceGroupUserFindRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceGroupUserFindRequest_State.Descriptor instead.
func (WorkspaceGroupUserFindRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{2, 0}
}

type WorkspaceGroupUserSummaryInfo_State int32

const (
	WorkspaceGroupUserSummaryInfo_STATE_NONE WorkspaceGroupUserSummaryInfo_State = 0
	WorkspaceGroupUserSummaryInfo_ENABLED    WorkspaceGroupUserSummaryInfo_State = 1
	WorkspaceGroupUserSummaryInfo_DISABLED   WorkspaceGroupUserSummaryInfo_State = 2
	WorkspaceGroupUserSummaryInfo_PENDING    WorkspaceGroupUserSummaryInfo_State = 3
)

// Enum value maps for WorkspaceGroupUserSummaryInfo_State.
var (
	WorkspaceGroupUserSummaryInfo_State_name = map[int32]string{
		0: "STATE_NONE",
		1: "ENABLED",
		2: "DISABLED",
		3: "PENDING",
	}
	WorkspaceGroupUserSummaryInfo_State_value = map[string]int32{
		"STATE_NONE": 0,
		"ENABLED":    1,
		"DISABLED":   2,
		"PENDING":    3,
	}
)

func (x WorkspaceGroupUserSummaryInfo_State) Enum() *WorkspaceGroupUserSummaryInfo_State {
	p := new(WorkspaceGroupUserSummaryInfo_State)
	*p = x
	return p
}

func (x WorkspaceGroupUserSummaryInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceGroupUserSummaryInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes[1].Descriptor()
}

func (WorkspaceGroupUserSummaryInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes[1]
}

func (x WorkspaceGroupUserSummaryInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceGroupUserSummaryInfo_State.Descriptor instead.
func (WorkspaceGroupUserSummaryInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{4, 0}
}

type WorkspaceGroupUsersRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceGroupId string                 `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	Users            []*UserWorkspaceGroup  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkspaceGroupUsersRequest) Reset() {
	*x = WorkspaceGroupUsersRequest{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUsersRequest) ProtoMessage() {}

func (x *WorkspaceGroupUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUsersRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUsersRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{0}
}

func (x *WorkspaceGroupUsersRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupUsersRequest) GetUsers() []*UserWorkspaceGroup {
	if x != nil {
		return x.Users
	}
	return nil
}

type WorkspaceGroupUserUpdateRoleRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceGroupId string                 `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	TargetUserId     string                 `protobuf:"bytes,2,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	RoleId           string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkspaceGroupUserUpdateRoleRequest) Reset() {
	*x = WorkspaceGroupUserUpdateRoleRequest{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserUpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserUpdateRoleRequest) ProtoMessage() {}

func (x *WorkspaceGroupUserUpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserUpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserUpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{1}
}

func (x *WorkspaceGroupUserUpdateRoleRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupUserUpdateRoleRequest) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *WorkspaceGroupUserUpdateRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type WorkspaceGroupUserFindRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceGroupId string                 `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	Keyword          string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// +optional
	State WorkspaceGroupUserFindRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.identity.v2.WorkspaceGroupUserFindRequest_State" json:"state,omitempty"`
	// +optional
	Page          *v2.Page `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkspaceGroupUserFindRequest) Reset() {
	*x = WorkspaceGroupUserFindRequest{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserFindRequest) ProtoMessage() {}

func (x *WorkspaceGroupUserFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserFindRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserFindRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{2}
}

func (x *WorkspaceGroupUserFindRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupUserFindRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *WorkspaceGroupUserFindRequest) GetState() WorkspaceGroupUserFindRequest_State {
	if x != nil {
		return x.State
	}
	return WorkspaceGroupUserFindRequest_NONE
}

func (x *WorkspaceGroupUserFindRequest) GetPage() *v2.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type WorkspaceGroupUserRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceGroupId string                 `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkspaceGroupUserRequest) Reset() {
	*x = WorkspaceGroupUserRequest{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserRequest) ProtoMessage() {}

func (x *WorkspaceGroupUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{3}
}

func (x *WorkspaceGroupUserRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

type WorkspaceGroupUserSummaryInfo struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	UserId        string                              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         WorkspaceGroupUserSummaryInfo_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo_State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkspaceGroupUserSummaryInfo) Reset() {
	*x = WorkspaceGroupUserSummaryInfo{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserSummaryInfo) ProtoMessage() {}

func (x *WorkspaceGroupUserSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserSummaryInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserSummaryInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{4}
}

func (x *WorkspaceGroupUserSummaryInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceGroupUserSummaryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceGroupUserSummaryInfo) GetState() WorkspaceGroupUserSummaryInfo_State {
	if x != nil {
		return x.State
	}
	return WorkspaceGroupUserSummaryInfo_STATE_NONE
}

type WorkspaceGroupUsersSummaryInfo struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Results       []*WorkspaceGroupUserSummaryInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkspaceGroupUsersSummaryInfo) Reset() {
	*x = WorkspaceGroupUsersSummaryInfo{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUsersSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUsersSummaryInfo) ProtoMessage() {}

func (x *WorkspaceGroupUsersSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUsersSummaryInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUsersSummaryInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{5}
}

func (x *WorkspaceGroupUsersSummaryInfo) GetResults() []*WorkspaceGroupUserSummaryInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WorkspaceGroupUsersSummaryInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WorkspaceGroupUserSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	WorkspaceGroupId string `protobuf:"bytes,2,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// +optional
	UpdatedBy     string `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkspaceGroupUserSearchQuery) Reset() {
	*x = WorkspaceGroupUserSearchQuery{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserSearchQuery) ProtoMessage() {}

func (x *WorkspaceGroupUserSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserSearchQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{6}
}

func (x *WorkspaceGroupUserSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WorkspaceGroupUserSearchQuery) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupUserSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceGroupUserSearchQuery) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *WorkspaceGroupUserSearchQuery) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type WorkspaceGroupUserStatQuery struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Query            *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	WorkspaceGroupId string                 `protobuf:"bytes,21,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkspaceGroupUserStatQuery) Reset() {
	*x = WorkspaceGroupUserStatQuery{}
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceGroupUserStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUserStatQuery) ProtoMessage() {}

func (x *WorkspaceGroupUserStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUserStatQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUserStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP(), []int{7}
}

func (x *WorkspaceGroupUserStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WorkspaceGroupUserStatQuery) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

var File_spaceone_api_identity_v2_workspace_group_user_proto protoreflect.FileDescriptor

var file_spaceone_api_identity_v2_workspace_group_user_proto_rawDesc = []byte{
	0x0a, 0x33, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x23,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0xa7, 0x02, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x53, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x39, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x19, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x94, 0x01, 0x0a, 0x1e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xd2, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x32, 0x89, 0x09, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x9b, 0x01, 0x0a, 0x03, 0x61, 0x64, 0x64,
	0x12, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22,
	0x25, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x12, 0xa1, 0x01, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x12, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a,
	0x22, 0x28, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a,
	0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0xac, 0x01, 0x0a, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x37, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6e, 0x64,
	0x12, 0x9a, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x12, 0xa1, 0x01,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x89, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x35, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescOnce sync.Once
	file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescData = file_spaceone_api_identity_v2_workspace_group_user_proto_rawDesc
)

func file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescGZIP() []byte {
	file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescOnce.Do(func() {
		file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescData)
	})
	return file_spaceone_api_identity_v2_workspace_group_user_proto_rawDescData
}

var file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spaceone_api_identity_v2_workspace_group_user_proto_goTypes = []any{
	(WorkspaceGroupUserFindRequest_State)(0),    // 0: spaceone.api.identity.v2.WorkspaceGroupUserFindRequest.State
	(WorkspaceGroupUserSummaryInfo_State)(0),    // 1: spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo.State
	(*WorkspaceGroupUsersRequest)(nil),          // 2: spaceone.api.identity.v2.WorkspaceGroupUsersRequest
	(*WorkspaceGroupUserUpdateRoleRequest)(nil), // 3: spaceone.api.identity.v2.WorkspaceGroupUserUpdateRoleRequest
	(*WorkspaceGroupUserFindRequest)(nil),       // 4: spaceone.api.identity.v2.WorkspaceGroupUserFindRequest
	(*WorkspaceGroupUserRequest)(nil),           // 5: spaceone.api.identity.v2.WorkspaceGroupUserRequest
	(*WorkspaceGroupUserSummaryInfo)(nil),       // 6: spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo
	(*WorkspaceGroupUsersSummaryInfo)(nil),      // 7: spaceone.api.identity.v2.WorkspaceGroupUsersSummaryInfo
	(*WorkspaceGroupUserSearchQuery)(nil),       // 8: spaceone.api.identity.v2.WorkspaceGroupUserSearchQuery
	(*WorkspaceGroupUserStatQuery)(nil),         // 9: spaceone.api.identity.v2.WorkspaceGroupUserStatQuery
	(*UserWorkspaceGroup)(nil),                  // 10: spaceone.api.identity.v2.UserWorkspaceGroup
	(*v2.Page)(nil),                             // 11: spaceone.api.core.v2.Page
	(*v2.Query)(nil),                            // 12: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),                  // 13: spaceone.api.core.v2.StatisticsQuery
	(*WorkspaceGroupInfo)(nil),                  // 14: spaceone.api.identity.v2.WorkspaceGroupInfo
	(*WorkspaceGroupsInfo)(nil),                 // 15: spaceone.api.identity.v2.WorkspaceGroupsInfo
	(*_struct.Struct)(nil),                      // 16: google.protobuf.Struct
}
var file_spaceone_api_identity_v2_workspace_group_user_proto_depIdxs = []int32{
	10, // 0: spaceone.api.identity.v2.WorkspaceGroupUsersRequest.users:type_name -> spaceone.api.identity.v2.UserWorkspaceGroup
	0,  // 1: spaceone.api.identity.v2.WorkspaceGroupUserFindRequest.state:type_name -> spaceone.api.identity.v2.WorkspaceGroupUserFindRequest.State
	11, // 2: spaceone.api.identity.v2.WorkspaceGroupUserFindRequest.page:type_name -> spaceone.api.core.v2.Page
	1,  // 3: spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo.state:type_name -> spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo.State
	6,  // 4: spaceone.api.identity.v2.WorkspaceGroupUsersSummaryInfo.results:type_name -> spaceone.api.identity.v2.WorkspaceGroupUserSummaryInfo
	12, // 5: spaceone.api.identity.v2.WorkspaceGroupUserSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	13, // 6: spaceone.api.identity.v2.WorkspaceGroupUserStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	2,  // 7: spaceone.api.identity.v2.WorkspaceGroupUser.add:input_type -> spaceone.api.identity.v2.WorkspaceGroupUsersRequest
	2,  // 8: spaceone.api.identity.v2.WorkspaceGroupUser.remove:input_type -> spaceone.api.identity.v2.WorkspaceGroupUsersRequest
	3,  // 9: spaceone.api.identity.v2.WorkspaceGroupUser.update_role:input_type -> spaceone.api.identity.v2.WorkspaceGroupUserUpdateRoleRequest
	4,  // 10: spaceone.api.identity.v2.WorkspaceGroupUser.find:input_type -> spaceone.api.identity.v2.WorkspaceGroupUserFindRequest
	5,  // 11: spaceone.api.identity.v2.WorkspaceGroupUser.get:input_type -> spaceone.api.identity.v2.WorkspaceGroupUserRequest
	8,  // 12: spaceone.api.identity.v2.WorkspaceGroupUser.list:input_type -> spaceone.api.identity.v2.WorkspaceGroupUserSearchQuery
	9,  // 13: spaceone.api.identity.v2.WorkspaceGroupUser.stat:input_type -> spaceone.api.identity.v2.WorkspaceGroupUserStatQuery
	14, // 14: spaceone.api.identity.v2.WorkspaceGroupUser.add:output_type -> spaceone.api.identity.v2.WorkspaceGroupInfo
	14, // 15: spaceone.api.identity.v2.WorkspaceGroupUser.remove:output_type -> spaceone.api.identity.v2.WorkspaceGroupInfo
	14, // 16: spaceone.api.identity.v2.WorkspaceGroupUser.update_role:output_type -> spaceone.api.identity.v2.WorkspaceGroupInfo
	7,  // 17: spaceone.api.identity.v2.WorkspaceGroupUser.find:output_type -> spaceone.api.identity.v2.WorkspaceGroupUsersSummaryInfo
	14, // 18: spaceone.api.identity.v2.WorkspaceGroupUser.get:output_type -> spaceone.api.identity.v2.WorkspaceGroupInfo
	15, // 19: spaceone.api.identity.v2.WorkspaceGroupUser.list:output_type -> spaceone.api.identity.v2.WorkspaceGroupsInfo
	16, // 20: spaceone.api.identity.v2.WorkspaceGroupUser.stat:output_type -> google.protobuf.Struct
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_spaceone_api_identity_v2_workspace_group_user_proto_init() }
func file_spaceone_api_identity_v2_workspace_group_user_proto_init() {
	if File_spaceone_api_identity_v2_workspace_group_user_proto != nil {
		return
	}
	file_spaceone_api_identity_v2_workspace_group_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_identity_v2_workspace_group_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_identity_v2_workspace_group_user_proto_goTypes,
		DependencyIndexes: file_spaceone_api_identity_v2_workspace_group_user_proto_depIdxs,
		EnumInfos:         file_spaceone_api_identity_v2_workspace_group_user_proto_enumTypes,
		MessageInfos:      file_spaceone_api_identity_v2_workspace_group_user_proto_msgTypes,
	}.Build()
	File_spaceone_api_identity_v2_workspace_group_user_proto = out.File
	file_spaceone_api_identity_v2_workspace_group_user_proto_rawDesc = nil
	file_spaceone_api_identity_v2_workspace_group_user_proto_goTypes = nil
	file_spaceone_api_identity_v2_workspace_group_user_proto_depIdxs = nil
}
