// A Repository is a repository storing data of deployable plugins.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.6.1
// source: spaceone/api/repository/v1/repository.proto

package v1

import (
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//	{
//	   "query": {},
//	   "repository_id": "repo-123456789012"
//	}
type RepositoryQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	RepositoryId string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	// +optional
	RepositoryType string `protobuf:"bytes,2,opt,name=repository_type,json=repositoryType,proto3" json:"repository_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RepositoryQuery) Reset() {
	*x = RepositoryQuery{}
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryQuery) ProtoMessage() {}

func (x *RepositoryQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryQuery.ProtoReflect.Descriptor instead.
func (*RepositoryQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_repository_proto_rawDescGZIP(), []int{0}
}

func (x *RepositoryQuery) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *RepositoryQuery) GetRepositoryType() string {
	if x != nil {
		return x.RepositoryType
	}
	return ""
}

//	{
//	   "repository_id": "repo-123456789012",
//	   "name": "Open Source Marketplace",
//	   "repository_type": "remote",
//	   "endpoint": "grpc+ssl://repository.portal.spaceone.megazone.io:443",
//	}
type RepositoryInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId   string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RepositoryType string                 `protobuf:"bytes,3,opt,name=repository_type,json=repositoryType,proto3" json:"repository_type,omitempty"`
	Endpoint       string                 `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RepositoryInfo) Reset() {
	*x = RepositoryInfo{}
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryInfo) ProtoMessage() {}

func (x *RepositoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryInfo.ProtoReflect.Descriptor instead.
func (*RepositoryInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_repository_proto_rawDescGZIP(), []int{1}
}

func (x *RepositoryInfo) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *RepositoryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepositoryInfo) GetRepositoryType() string {
	if x != nil {
		return x.RepositoryType
	}
	return ""
}

func (x *RepositoryInfo) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "repository_id": "repo-123456789012",
//	           "name": "Open Source Marketplace",
//	           "repository_type": "remote",
//	           "endpoint": "grpc+ssl://repository.portal.spaceone.megazone.io:443",
//	       }
//	   ],
//	   "total_count": 1
//	}
type RepositoriesInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*RepositoryInfo      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoriesInfo) Reset() {
	*x = RepositoriesInfo{}
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoriesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoriesInfo) ProtoMessage() {}

func (x *RepositoriesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_repository_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoriesInfo.ProtoReflect.Descriptor instead.
func (*RepositoriesInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_repository_proto_rawDescGZIP(), []int{2}
}

func (x *RepositoriesInfo) GetResults() []*RepositoryInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RepositoriesInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_repository_v1_repository_proto protoreflect.FileDescriptor

var file_spaceone_api_repository_v1_repository_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0x79, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0x9b, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x8c,
	0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x41, 0x5a,
	0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_repository_v1_repository_proto_rawDescOnce sync.Once
	file_spaceone_api_repository_v1_repository_proto_rawDescData = file_spaceone_api_repository_v1_repository_proto_rawDesc
)

func file_spaceone_api_repository_v1_repository_proto_rawDescGZIP() []byte {
	file_spaceone_api_repository_v1_repository_proto_rawDescOnce.Do(func() {
		file_spaceone_api_repository_v1_repository_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_repository_v1_repository_proto_rawDescData)
	})
	return file_spaceone_api_repository_v1_repository_proto_rawDescData
}

var file_spaceone_api_repository_v1_repository_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_spaceone_api_repository_v1_repository_proto_goTypes = []any{
	(*RepositoryQuery)(nil),  // 0: spaceone.api.repository.v1.RepositoryQuery
	(*RepositoryInfo)(nil),   // 1: spaceone.api.repository.v1.RepositoryInfo
	(*RepositoriesInfo)(nil), // 2: spaceone.api.repository.v1.RepositoriesInfo
}
var file_spaceone_api_repository_v1_repository_proto_depIdxs = []int32{
	1, // 0: spaceone.api.repository.v1.RepositoriesInfo.results:type_name -> spaceone.api.repository.v1.RepositoryInfo
	0, // 1: spaceone.api.repository.v1.Repository.list:input_type -> spaceone.api.repository.v1.RepositoryQuery
	2, // 2: spaceone.api.repository.v1.Repository.list:output_type -> spaceone.api.repository.v1.RepositoriesInfo
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_spaceone_api_repository_v1_repository_proto_init() }
func file_spaceone_api_repository_v1_repository_proto_init() {
	if File_spaceone_api_repository_v1_repository_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_repository_v1_repository_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_repository_v1_repository_proto_goTypes,
		DependencyIndexes: file_spaceone_api_repository_v1_repository_proto_depIdxs,
		MessageInfos:      file_spaceone_api_repository_v1_repository_proto_msgTypes,
	}.Build()
	File_spaceone_api_repository_v1_repository_proto = out.File
	file_spaceone_api_repository_v1_repository_proto_rawDesc = nil
	file_spaceone_api_repository_v1_repository_proto_goTypes = nil
	file_spaceone_api_repository_v1_repository_proto_depIdxs = nil
}
