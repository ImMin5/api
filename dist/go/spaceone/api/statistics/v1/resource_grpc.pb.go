//
//desc: A Resource is a resource used for analysis on all microservices used in Cloudforet.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.6.1
// source: spaceone/api/statistics/v1/resource.proto

package v1

import (
	context "context"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Resource_Stat_FullMethodName = "/spaceone.api.statistics.v1.Resource/stat"
)

// ResourceClient is the client API for Resource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ResourceClient interface {
	// desc: Enables data preprocessing of different services. Although limited, it is possible to create not only basic queries but also data suitable for users' needs, such as joins between two tables created by the query, handling missing values, and sorting.
	// request_example: >-
	// {
	// "aggregate": [
	// {"query": {"resource_type": "inventory.CloudServiceType",
	// "query": {
	// "filter": [{"k": "labels", "v": ["Server"], "o": "in"},
	// {"k": "is_primary", "v": true, "o": "eq"}], "aggregate": [{
	// "group": {
	// "keys": [
	// {
	// "key": "cloud_service_type_id",
	// "name": "cloud_service_type_id"},
	// {
	// "key": "name",
	// "name": "cloud_service_type"},
	// {
	// "key": "group",
	// "name": "cloud_service_group"},
	// {
	// "key": "provider",
	// "name": "provider"},
	// {
	// "key": "cloud_service_type_id",
	// "name": "cloud_service_type_id"}],
	// "fields": [
	// {
	// "key": "tags",
	// "name": "tags",
	// "operator": "first"},
	// {
	// "key": "labels",
	// "name": "labels",
	// "operator": "first"}]}}]}}},
	// {"join": {"resource_type": "inventory.CloudService", "query": {"filter": [
	// {"k": "ref_cloud_service_type.cloud_service_type_id",
	// "v": ["cloud-svc-type-58c926b19aca", "cloud-svc-type-c7e5bc38d911",
	// "cloud-svc-type-8dd4d7a13b95", "cloud-svc-type-719e705cb529",
	// "cloud-svc-type-50bd62cf6e0e"], "o": "in"}], "aggregate": [{"group": {
	// "keys": [{"key": "cloud_service_type", "name": "cloud_service_type"},
	// {"key": "cloud_service_group", "name": "cloud_service_group"},
	// {"key": "provider", "name": "provider"}],
	// "fields": [{"name": "count", "operator": "count"}]}}]},
	// "keys": ["cloud_service_type", "cloud_service_group", "provider"]}},
	// {"fill_na": {"data": {"count": 0.0}}}, {"formula": {"query": "count > 0"}},
	// {"sort": {"key": "count", "desc": true}}],
	// "domain_id": "domain-58010aa2e451"
	// }
	// response_example: >-
	// {
	// "total_count": 5.0,
	// "results": [
	// {
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "cloud_service_type_id": "cloud-svc-type-58c926b19aca",
	// "cloud_service_type": "Instance",
	// "count": 44.0,
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/aws-ec2.svg"
	// }
	// ],
	// "provider": "aws",
	// "cloud_service_group": "EC2"
	// },
	// {
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/openstack/openstack_compute.svg"
	// },
	// {
	// "key": "spaceone:display_name",
	// "value": "Instance"
	// }
	// ],
	// "cloud_service_group": "Compute",
	// "cloud_service_type": "Instance",
	// "provider": "openstack",
	// "count": 12.0,
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "cloud_service_type_id": "cloud-svc-type-50bd62cf6e0e"
	// },
	// {
	// "cloud_service_type": "Node",
	// "count": 8.0,
	// "provider": "kubernetes",
	// "cloud_service_type_id": "cloud-svc-type-719e705cb529",
	// "cloud_service_group": "Cluster",
	// "tags": [
	// {
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/kubernetes/node.svg",
	// "key": "spaceone:icon"
	// }
	// ],
	// "labels": [
	// "Compute",
	// "Server",
	// "Container"
	// ]
	// },
	// {
	// "cloud_service_type_id": "cloud-svc-type-8dd4d7a13b95",
	// "cloud_service_type": "Instance",
	// "cloud_service_group": "ComputeEngine",
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/google_cloud/Compute_Engine.svg"
	// }
	// ],
	// "count": 5.0,
	// "provider": "google_cloud"
	// },
	// {
	// "tags": [
	// {
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/azure-vm.svg",
	// "key": "spaceone:icon"
	// }
	// ],
	// "cloud_service_type": "VirtualMachine",
	// "cloud_service_group": "Compute",
	// "count": 2.0,
	// "provider": "azure",
	// "cloud_service_type_id": "cloud-svc-type-c7e5bc38d911",
	// "labels": [
	// "Compute",
	// "Server"
	// ]
	// }
	// ]
	// }
	Stat(ctx context.Context, in *ResourceStatRequest, opts ...grpc.CallOption) (*_struct.Struct, error)
}

type resourceClient struct {
	cc grpc.ClientConnInterface
}

func NewResourceClient(cc grpc.ClientConnInterface) ResourceClient {
	return &resourceClient{cc}
}

func (c *resourceClient) Stat(ctx context.Context, in *ResourceStatRequest, opts ...grpc.CallOption) (*_struct.Struct, error) {
	out := new(_struct.Struct)
	err := c.cc.Invoke(ctx, Resource_Stat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceServer is the server API for Resource service.
// All implementations must embed UnimplementedResourceServer
// for forward compatibility
type ResourceServer interface {
	// desc: Enables data preprocessing of different services. Although limited, it is possible to create not only basic queries but also data suitable for users' needs, such as joins between two tables created by the query, handling missing values, and sorting.
	// request_example: >-
	// {
	// "aggregate": [
	// {"query": {"resource_type": "inventory.CloudServiceType",
	// "query": {
	// "filter": [{"k": "labels", "v": ["Server"], "o": "in"},
	// {"k": "is_primary", "v": true, "o": "eq"}], "aggregate": [{
	// "group": {
	// "keys": [
	// {
	// "key": "cloud_service_type_id",
	// "name": "cloud_service_type_id"},
	// {
	// "key": "name",
	// "name": "cloud_service_type"},
	// {
	// "key": "group",
	// "name": "cloud_service_group"},
	// {
	// "key": "provider",
	// "name": "provider"},
	// {
	// "key": "cloud_service_type_id",
	// "name": "cloud_service_type_id"}],
	// "fields": [
	// {
	// "key": "tags",
	// "name": "tags",
	// "operator": "first"},
	// {
	// "key": "labels",
	// "name": "labels",
	// "operator": "first"}]}}]}}},
	// {"join": {"resource_type": "inventory.CloudService", "query": {"filter": [
	// {"k": "ref_cloud_service_type.cloud_service_type_id",
	// "v": ["cloud-svc-type-58c926b19aca", "cloud-svc-type-c7e5bc38d911",
	// "cloud-svc-type-8dd4d7a13b95", "cloud-svc-type-719e705cb529",
	// "cloud-svc-type-50bd62cf6e0e"], "o": "in"}], "aggregate": [{"group": {
	// "keys": [{"key": "cloud_service_type", "name": "cloud_service_type"},
	// {"key": "cloud_service_group", "name": "cloud_service_group"},
	// {"key": "provider", "name": "provider"}],
	// "fields": [{"name": "count", "operator": "count"}]}}]},
	// "keys": ["cloud_service_type", "cloud_service_group", "provider"]}},
	// {"fill_na": {"data": {"count": 0.0}}}, {"formula": {"query": "count > 0"}},
	// {"sort": {"key": "count", "desc": true}}],
	// "domain_id": "domain-58010aa2e451"
	// }
	// response_example: >-
	// {
	// "total_count": 5.0,
	// "results": [
	// {
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "cloud_service_type_id": "cloud-svc-type-58c926b19aca",
	// "cloud_service_type": "Instance",
	// "count": 44.0,
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/aws-ec2.svg"
	// }
	// ],
	// "provider": "aws",
	// "cloud_service_group": "EC2"
	// },
	// {
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/openstack/openstack_compute.svg"
	// },
	// {
	// "key": "spaceone:display_name",
	// "value": "Instance"
	// }
	// ],
	// "cloud_service_group": "Compute",
	// "cloud_service_type": "Instance",
	// "provider": "openstack",
	// "count": 12.0,
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "cloud_service_type_id": "cloud-svc-type-50bd62cf6e0e"
	// },
	// {
	// "cloud_service_type": "Node",
	// "count": 8.0,
	// "provider": "kubernetes",
	// "cloud_service_type_id": "cloud-svc-type-719e705cb529",
	// "cloud_service_group": "Cluster",
	// "tags": [
	// {
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/kubernetes/node.svg",
	// "key": "spaceone:icon"
	// }
	// ],
	// "labels": [
	// "Compute",
	// "Server",
	// "Container"
	// ]
	// },
	// {
	// "cloud_service_type_id": "cloud-svc-type-8dd4d7a13b95",
	// "cloud_service_type": "Instance",
	// "cloud_service_group": "ComputeEngine",
	// "labels": [
	// "Compute",
	// "Server"
	// ],
	// "tags": [
	// {
	// "key": "spaceone:icon",
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/google_cloud/Compute_Engine.svg"
	// }
	// ],
	// "count": 5.0,
	// "provider": "google_cloud"
	// },
	// {
	// "tags": [
	// {
	// "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/azure-vm.svg",
	// "key": "spaceone:icon"
	// }
	// ],
	// "cloud_service_type": "VirtualMachine",
	// "cloud_service_group": "Compute",
	// "count": 2.0,
	// "provider": "azure",
	// "cloud_service_type_id": "cloud-svc-type-c7e5bc38d911",
	// "labels": [
	// "Compute",
	// "Server"
	// ]
	// }
	// ]
	// }
	Stat(context.Context, *ResourceStatRequest) (*_struct.Struct, error)
	mustEmbedUnimplementedResourceServer()
}

// UnimplementedResourceServer must be embedded to have forward compatible implementations.
type UnimplementedResourceServer struct {
}

func (UnimplementedResourceServer) Stat(context.Context, *ResourceStatRequest) (*_struct.Struct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stat not implemented")
}
func (UnimplementedResourceServer) mustEmbedUnimplementedResourceServer() {}

// UnsafeResourceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ResourceServer will
// result in compilation errors.
type UnsafeResourceServer interface {
	mustEmbedUnimplementedResourceServer()
}

func RegisterResourceServer(s grpc.ServiceRegistrar, srv ResourceServer) {
	s.RegisterService(&Resource_ServiceDesc, srv)
}

func _Resource_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Resource_Stat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServer).Stat(ctx, req.(*ResourceStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Resource_ServiceDesc is the grpc.ServiceDesc for Resource service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Resource_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "spaceone.api.statistics.v1.Resource",
	HandlerType: (*ResourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "stat",
			Handler:    _Resource_Stat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "spaceone/api/statistics/v1/resource.proto",
}
