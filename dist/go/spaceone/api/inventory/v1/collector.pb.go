// A Collector is a plugin instance collecting cloud resources. A Collector can collect the resource data manually or by a pre-set schedule.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: spaceone/api/inventory/v1/collector.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scheduled_ScheduledState int32

const (
	Scheduled_NONE     Scheduled_ScheduledState = 0
	Scheduled_ENABLED  Scheduled_ScheduledState = 1
	Scheduled_DISABLED Scheduled_ScheduledState = 2
)

// Enum value maps for Scheduled_ScheduledState.
var (
	Scheduled_ScheduledState_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	Scheduled_ScheduledState_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x Scheduled_ScheduledState) Enum() *Scheduled_ScheduledState {
	p := new(Scheduled_ScheduledState)
	*p = x
	return p
}

func (x Scheduled_ScheduledState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scheduled_ScheduledState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[0].Descriptor()
}

func (Scheduled_ScheduledState) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[0]
}

func (x Scheduled_ScheduledState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scheduled_ScheduledState.Descriptor instead.
func (Scheduled_ScheduledState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{0, 0}
}

type SecretFilter_SecretFilterState int32

const (
	SecretFilter_NONE     SecretFilter_SecretFilterState = 0
	SecretFilter_ENABLED  SecretFilter_SecretFilterState = 1
	SecretFilter_DISABLED SecretFilter_SecretFilterState = 2
)

// Enum value maps for SecretFilter_SecretFilterState.
var (
	SecretFilter_SecretFilterState_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	SecretFilter_SecretFilterState_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x SecretFilter_SecretFilterState) Enum() *SecretFilter_SecretFilterState {
	p := new(SecretFilter_SecretFilterState)
	*p = x
	return p
}

func (x SecretFilter_SecretFilterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretFilter_SecretFilterState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[1].Descriptor()
}

func (SecretFilter_SecretFilterState) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[1]
}

func (x SecretFilter_SecretFilterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretFilter_SecretFilterState.Descriptor instead.
func (SecretFilter_SecretFilterState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{1, 0}
}

type PluginInfo_UpgradeMode int32

const (
	PluginInfo_NONE   PluginInfo_UpgradeMode = 0
	PluginInfo_MANUAL PluginInfo_UpgradeMode = 1
	PluginInfo_AUTO   PluginInfo_UpgradeMode = 2
)

// Enum value maps for PluginInfo_UpgradeMode.
var (
	PluginInfo_UpgradeMode_name = map[int32]string{
		0: "NONE",
		1: "MANUAL",
		2: "AUTO",
	}
	PluginInfo_UpgradeMode_value = map[string]int32{
		"NONE":   0,
		"MANUAL": 1,
		"AUTO":   2,
	}
)

func (x PluginInfo_UpgradeMode) Enum() *PluginInfo_UpgradeMode {
	p := new(PluginInfo_UpgradeMode)
	*p = x
	return p
}

func (x PluginInfo_UpgradeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginInfo_UpgradeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[2].Descriptor()
}

func (PluginInfo_UpgradeMode) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[2]
}

func (x PluginInfo_UpgradeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginInfo_UpgradeMode.Descriptor instead.
func (PluginInfo_UpgradeMode) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{2, 0}
}

type UpdatePluginRequest_UpgradeMode int32

const (
	UpdatePluginRequest_NONE   UpdatePluginRequest_UpgradeMode = 0
	UpdatePluginRequest_MANUAL UpdatePluginRequest_UpgradeMode = 1
	UpdatePluginRequest_AUTO   UpdatePluginRequest_UpgradeMode = 2
)

// Enum value maps for UpdatePluginRequest_UpgradeMode.
var (
	UpdatePluginRequest_UpgradeMode_name = map[int32]string{
		0: "NONE",
		1: "MANUAL",
		2: "AUTO",
	}
	UpdatePluginRequest_UpgradeMode_value = map[string]int32{
		"NONE":   0,
		"MANUAL": 1,
		"AUTO":   2,
	}
)

func (x UpdatePluginRequest_UpgradeMode) Enum() *UpdatePluginRequest_UpgradeMode {
	p := new(UpdatePluginRequest_UpgradeMode)
	*p = x
	return p
}

func (x UpdatePluginRequest_UpgradeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePluginRequest_UpgradeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[3].Descriptor()
}

func (UpdatePluginRequest_UpgradeMode) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[3]
}

func (x UpdatePluginRequest_UpgradeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePluginRequest_UpgradeMode.Descriptor instead.
func (UpdatePluginRequest_UpgradeMode) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{5, 0}
}

type CollectorQuery_State int32

const (
	CollectorQuery_NONE     CollectorQuery_State = 0
	CollectorQuery_ENABLED  CollectorQuery_State = 1
	CollectorQuery_DISABLED CollectorQuery_State = 2
)

// Enum value maps for CollectorQuery_State.
var (
	CollectorQuery_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	CollectorQuery_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CollectorQuery_State) Enum() *CollectorQuery_State {
	p := new(CollectorQuery_State)
	*p = x
	return p
}

func (x CollectorQuery_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectorQuery_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[4].Descriptor()
}

func (CollectorQuery_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[4]
}

func (x CollectorQuery_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectorQuery_State.Descriptor instead.
func (CollectorQuery_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{8, 0}
}

type CollectorInfo_State int32

const (
	CollectorInfo_NONE     CollectorInfo_State = 0
	CollectorInfo_ENABLED  CollectorInfo_State = 1
	CollectorInfo_DISABLED CollectorInfo_State = 2
)

// Enum value maps for CollectorInfo_State.
var (
	CollectorInfo_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	CollectorInfo_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x CollectorInfo_State) Enum() *CollectorInfo_State {
	p := new(CollectorInfo_State)
	*p = x
	return p
}

func (x CollectorInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectorInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[5].Descriptor()
}

func (CollectorInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[5]
}

func (x CollectorInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectorInfo_State.Descriptor instead.
func (CollectorInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{11, 0}
}

type JobInfo_Status int32

const (
	JobInfo_NONE        JobInfo_Status = 0
	JobInfo_FAILURE     JobInfo_Status = 1
	JobInfo_CANCELED    JobInfo_Status = 2
	JobInfo_IN_PROGRESS JobInfo_Status = 3
	JobInfo_SUCCESS     JobInfo_Status = 4
)

// Enum value maps for JobInfo_Status.
var (
	JobInfo_Status_name = map[int32]string{
		0: "NONE",
		1: "FAILURE",
		2: "CANCELED",
		3: "IN_PROGRESS",
		4: "SUCCESS",
	}
	JobInfo_Status_value = map[string]int32{
		"NONE":        0,
		"FAILURE":     1,
		"CANCELED":    2,
		"IN_PROGRESS": 3,
		"SUCCESS":     4,
	}
)

func (x JobInfo_Status) Enum() *JobInfo_Status {
	p := new(JobInfo_Status)
	*p = x
	return p
}

func (x JobInfo_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobInfo_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_collector_proto_enumTypes[6].Descriptor()
}

func (JobInfo_Status) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_collector_proto_enumTypes[6]
}

func (x JobInfo_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobInfo_Status.Descriptor instead.
func (JobInfo_Status) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{16, 0}
}

type Scheduled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Scheduled_ScheduledState `protobuf:"varint,1,opt,name=state,proto3,enum=spaceone.api.inventory.v1.Scheduled_ScheduledState" json:"state,omitempty"`
	Hours []int32                  `protobuf:"varint,2,rep,packed,name=hours,proto3" json:"hours,omitempty"`
}

func (x *Scheduled) Reset() {
	*x = Scheduled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheduled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheduled) ProtoMessage() {}

func (x *Scheduled) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheduled.ProtoReflect.Descriptor instead.
func (*Scheduled) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{0}
}

func (x *Scheduled) GetState() Scheduled_ScheduledState {
	if x != nil {
		return x.State
	}
	return Scheduled_NONE
}

func (x *Scheduled) GetHours() []int32 {
	if x != nil {
		return x.Hours
	}
	return nil
}

type SecretFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                  SecretFilter_SecretFilterState `protobuf:"varint,1,opt,name=state,proto3,enum=spaceone.api.inventory.v1.SecretFilter_SecretFilterState" json:"state,omitempty"`
	Secrets                []string                       `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"`
	ServiceAccounts        []string                       `protobuf:"bytes,3,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	Schemas                []string                       `protobuf:"bytes,4,rep,name=schemas,proto3" json:"schemas,omitempty"`
	ExcludeSecrets         []string                       `protobuf:"bytes,5,rep,name=exclude_secrets,json=excludeSecrets,proto3" json:"exclude_secrets,omitempty"`
	ExcludeServiceAccounts []string                       `protobuf:"bytes,6,rep,name=exclude_service_accounts,json=excludeServiceAccounts,proto3" json:"exclude_service_accounts,omitempty"`
	ExcludeSchemas         []string                       `protobuf:"bytes,7,rep,name=exclude_schemas,json=excludeSchemas,proto3" json:"exclude_schemas,omitempty"`
}

func (x *SecretFilter) Reset() {
	*x = SecretFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretFilter) ProtoMessage() {}

func (x *SecretFilter) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretFilter.ProtoReflect.Descriptor instead.
func (*SecretFilter) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{1}
}

func (x *SecretFilter) GetState() SecretFilter_SecretFilterState {
	if x != nil {
		return x.State
	}
	return SecretFilter_NONE
}

func (x *SecretFilter) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *SecretFilter) GetServiceAccounts() []string {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

func (x *SecretFilter) GetSchemas() []string {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *SecretFilter) GetExcludeSecrets() []string {
	if x != nil {
		return x.ExcludeSecrets
	}
	return nil
}

func (x *SecretFilter) GetExcludeServiceAccounts() []string {
	if x != nil {
		return x.ExcludeServiceAccounts
	}
	return nil
}

func (x *SecretFilter) GetExcludeSchemas() []string {
	if x != nil {
		return x.ExcludeSchemas
	}
	return nil
}

type PluginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginId    string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Version     string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Options     *_struct.Struct        `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	Metadata    *_struct.Struct        `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UpgradeMode PluginInfo_UpgradeMode `protobuf:"varint,11,opt,name=upgrade_mode,json=upgradeMode,proto3,enum=spaceone.api.inventory.v1.PluginInfo_UpgradeMode" json:"upgrade_mode,omitempty"`
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{2}
}

func (x *PluginInfo) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *PluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PluginInfo) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PluginInfo) GetUpgradeMode() PluginInfo_UpgradeMode {
	if x != nil {
		return x.UpgradeMode
	}
	return PluginInfo_NONE
}

//	{
//	   "name": "AWS Collector",
//	   "plugin_info": {
//	       "plugin_id": "plugin-30d21ef75a5d",
//	       "version": "1.13.13",
//	       "options": {},
//	       "metadata": {
//	           "filter_format": [],
//	           "supported_schedules": [
//	               "hours"
//	           ],
//	           "supported_resource_type": [
//	               "inventory.CloudService",
//	               "inventory.CloudServiceType",
//	               "inventory.Region"
//	           ],
//	           "supported_features": [
//	               "garbage_collection"
//	           ]
//	       },
//	       "upgrade_mode": "AUTO"
//	   },
//	   "schedule": {
//	       "state": "ENABLED",
//	       "hours": [0, 6, 12, 18]
//	   },
//	   "secret_filter": {
//	       "state": "ENABLED",
//	       "secrets": ["secret-xxx", "secret-yyy"],
//	       "service_accounts": ["sa-xxx", "sa-yyy"],
//	       "schemas": ["schema-xxx", "schema-yyy"]
//	   },
//	   "tags": {
//	       "type": "test"
//	   },
//	}
type CreateCollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PluginInfo *PluginInfo `protobuf:"bytes,2,opt,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Provider string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	// +optional
	SecretFilter *SecretFilter `protobuf:"bytes,6,opt,name=secret_filter,json=secretFilter,proto3" json:"secret_filter,omitempty"`
	DomainId     string        `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateCollectorRequest) Reset() {
	*x = CreateCollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectorRequest) ProtoMessage() {}

func (x *CreateCollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectorRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectorRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCollectorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCollectorRequest) GetPluginInfo() *PluginInfo {
	if x != nil {
		return x.PluginInfo
	}
	return nil
}

func (x *CreateCollectorRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *CreateCollectorRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateCollectorRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateCollectorRequest) GetSecretFilter() *SecretFilter {
	if x != nil {
		return x.SecretFilter
	}
	return nil
}

func (x *CreateCollectorRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "collector_id": "collector-2c0847644f39",
//	   "name": "New AWS Collector",
//	   "plugin_info": {
//	       "plugin_id": "plugin-30d21ef75a5d",
//	       "version": "1.14.0",
//	       "provider": "aws",
//	       "upgrade_mode": "MANUAL"
//	   },
//	   "schedule": {
//	       "state": "ENABLED",
//	       "hours": [0, 6, 12, 18]
//	   },
//	   "secret_filter": {
//	       "state": "ENABLED",
//	       "secrets": ["secret-xxx", "secret-yyy"],
//	       "service_accounts": ["sa-xxx", "sa-yyy"],
//	       "schemas": ["schema-xxx", "schema-yyy"]
//	   },
//	   "tags": {
//	       "a": "b"
//	   }
//	}
type UpdateCollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	SecretFilter *SecretFilter `protobuf:"bytes,6,opt,name=secret_filter,json=secretFilter,proto3" json:"secret_filter,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateCollectorRequest) Reset() {
	*x = UpdateCollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectorRequest) ProtoMessage() {}

func (x *UpdateCollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectorRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollectorRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCollectorRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *UpdateCollectorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCollectorRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UpdateCollectorRequest) GetSecretFilter() *SecretFilter {
	if x != nil {
		return x.SecretFilter
	}
	return nil
}

func (x *UpdateCollectorRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateCollectorRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type UpdatePluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// +optional
	Options  *_struct.Struct `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	DomainId string          `protobuf:"bytes,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	UpgradeMode UpdatePluginRequest_UpgradeMode `protobuf:"varint,5,opt,name=upgrade_mode,json=upgradeMode,proto3,enum=spaceone.api.inventory.v1.UpdatePluginRequest_UpgradeMode" json:"upgrade_mode,omitempty"`
}

func (x *UpdatePluginRequest) Reset() {
	*x = UpdatePluginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePluginRequest) ProtoMessage() {}

func (x *UpdatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePluginRequest.ProtoReflect.Descriptor instead.
func (*UpdatePluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePluginRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *UpdatePluginRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdatePluginRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdatePluginRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UpdatePluginRequest) GetUpgradeMode() UpdatePluginRequest_UpgradeMode {
	if x != nil {
		return x.UpgradeMode
	}
	return UpdatePluginRequest_NONE
}

//	{
//	   "collector_id": "collector-f2e4e9cc7f21"
//	}
type CollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	DomainId    string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CollectorRequest) Reset() {
	*x = CollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorRequest) ProtoMessage() {}

func (x *CollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorRequest.ProtoReflect.Descriptor instead.
func (*CollectorRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{6}
}

func (x *CollectorRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *CollectorRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "collector_id": "collector-f2e4e9cc7f21"
//	}
type GetCollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	DomainId    string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetCollectorRequest) Reset() {
	*x = GetCollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectorRequest) ProtoMessage() {}

func (x *GetCollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectorRequest.ProtoReflect.Descriptor instead.
func (*GetCollectorRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{7}
}

func (x *GetCollectorRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *GetCollectorRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetCollectorRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {}
//	}
type CollectorQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query       *v1.Query            `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	CollectorId string               `protobuf:"bytes,2,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	Name        string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	State       CollectorQuery_State `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.inventory.v1.CollectorQuery_State" json:"state,omitempty"`
	Priority    int32                `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	PluginId    string               `protobuf:"bytes,6,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	DomainId    string               `protobuf:"bytes,7,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CollectorQuery) Reset() {
	*x = CollectorQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorQuery) ProtoMessage() {}

func (x *CollectorQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorQuery.ProtoReflect.Descriptor instead.
func (*CollectorQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{8}
}

func (x *CollectorQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CollectorQuery) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *CollectorQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectorQuery) GetState() CollectorQuery_State {
	if x != nil {
		return x.State
	}
	return CollectorQuery_NONE
}

func (x *CollectorQuery) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CollectorQuery) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *CollectorQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type CollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	Filter *_struct.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// +optional
	SecretId string `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	// +optional
	CollectMode string `protobuf:"bytes,4,opt,name=collect_mode,json=collectMode,proto3" json:"collect_mode,omitempty"`
	DomainId    string `protobuf:"bytes,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	UseCache bool `protobuf:"varint,6,opt,name=use_cache,json=useCache,proto3" json:"use_cache,omitempty"`
}

func (x *CollectRequest) Reset() {
	*x = CollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectRequest) ProtoMessage() {}

func (x *CollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectRequest.ProtoReflect.Descriptor instead.
func (*CollectRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{9}
}

func (x *CollectRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *CollectRequest) GetFilter() *_struct.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *CollectRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *CollectRequest) GetCollectMode() string {
	if x != nil {
		return x.CollectMode
	}
	return ""
}

func (x *CollectRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CollectRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type VerifyPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId string `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	SecretId string `protobuf:"bytes,2,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	DomainId string `protobuf:"bytes,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *VerifyPluginRequest) Reset() {
	*x = VerifyPluginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPluginRequest) ProtoMessage() {}

func (x *VerifyPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPluginRequest.ProtoReflect.Descriptor instead.
func (*VerifyPluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyPluginRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *VerifyPluginRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *VerifyPluginRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "collector_id": "collector-2c0847644f39",
//	   "name": "AWS Collector",
//	   "plugin_info": {
//	       "plugin_id": "plugin-30d21ef75a5d",
//	       "version": "1.13.13",
//	       "options": {},
//	       "metadata": {
//	           "supported_schedules": [
//	               "hours"
//	           ],
//	           "supported_resource_type": [
//	               "inventory.CloudService",
//	               "inventory.CloudServiceType",
//	               "inventory.Region"
//	           ],
//	           "filter_format": [],
//	           "supported_features": [
//	               "garbage_collection"
//	           ]
//	       },
//	       "upgrade_mode": "AUTO"
//	   },
//	   "tags": {
//	       "type": "test"
//	   },
//	   "created_at": "2022-06-17T06:33:27.195Z",
//	   "domain_id": "domain-58010aa2e451",
//	   "provider": "aws",
//	   "capability": {
//	       "supported_schema": [
//	           "aws_access_key"
//	       ]
//	   },
//	   "schedule": {
//	       "state": "ENABLED",
//	       "hours": [0, 6, 12, 18]
//	   },
//	   "secret_filter": {
//	       "state": "ENABLED",
//	       "secrets": ["secret-xxx", "secret-yyy"],
//	       "service_accounts": ["sa-xxx", "sa-yyy"],
//	       "schemas": ["schema-xxx", "schema-yyy"]
//	   },
//	   "last_collected_at": "2022-06-17T06:33:27.195Z"
//	}
type CollectorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectorId     string          `protobuf:"bytes,1,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	Name            string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginInfo      *PluginInfo     `protobuf:"bytes,4,opt,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	Tags            *_struct.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	Provider        string          `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	Capability      *_struct.Struct `protobuf:"bytes,7,opt,name=capability,proto3" json:"capability,omitempty"`
	Schedule        *Scheduled      `protobuf:"bytes,8,opt,name=schedule,proto3" json:"schedule,omitempty"`
	SecretFilter    *SecretFilter   `protobuf:"bytes,9,opt,name=secret_filter,json=secretFilter,proto3" json:"secret_filter,omitempty"`
	CreatedAt       string          `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastCollectedAt string          `protobuf:"bytes,12,opt,name=last_collected_at,json=lastCollectedAt,proto3" json:"last_collected_at,omitempty"`
	DomainId        string          `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CollectorInfo) Reset() {
	*x = CollectorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorInfo) ProtoMessage() {}

func (x *CollectorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorInfo.ProtoReflect.Descriptor instead.
func (*CollectorInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{11}
}

func (x *CollectorInfo) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *CollectorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectorInfo) GetPluginInfo() *PluginInfo {
	if x != nil {
		return x.PluginInfo
	}
	return nil
}

func (x *CollectorInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CollectorInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CollectorInfo) GetCapability() *_struct.Struct {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *CollectorInfo) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *CollectorInfo) GetSecretFilter() *SecretFilter {
	if x != nil {
		return x.SecretFilter
	}
	return nil
}

func (x *CollectorInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CollectorInfo) GetLastCollectedAt() string {
	if x != nil {
		return x.LastCollectedAt
	}
	return ""
}

func (x *CollectorInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	    "results": [
//	       {
//	         "collector_id": "collector-2c0847644f39",
//	         "name": "AWS Collector",
//	         "plugin_info": {
//	             "plugin_id": "plugin-30d21ef75a5d",
//	             "version": "1.13.13",
//	             "options": {},
//	             "metadata": {
//	                 "supported_schedules": [
//	                     "hours"
//	                 ],
//	             "supported_resource_type": [
//	               "inventory.CloudService",
//	               "inventory.CloudServiceType",
//	               "inventory.Region"
//	             ],
//	             "filter_format": [],
//	             "supported_features": [
//	               "garbage_collection"
//	             ]
//	         },
//	         "upgrade_mode": "AUTO"
//	     },
//	     "tags": {
//	         "type": "test"
//	     },
//	     "created_at": "2022-06-17T06:33:27.195Z",
//	     "domain_id": "domain-58010aa2e451",
//	     "provider": "aws",
//	     "capability": {
//	         "supported_schema": [
//	             "aws_access_key"
//	         ]
//	     },
//	     "schedule": {
//	         "state": "ENABLED",
//	         "hours": [0, 6, 12, 18]
//	     },
//	     "secret_filter": {
//	         "state": "ENABLED",
//	         "secrets": ["secret-xxx", "secret-yyy"],
//	         "service_accounts": ["sa-xxx", "sa-yyy"],
//	         "schemas": ["schema-xxx", "schema-yyy"]
//	     },
//	     "last_collected_at": "2022-06-17T06:33:27.195Z"
//	   },
//	   {
//	     "collector_id": "collector-2c0847644f39",
//	     "name": "AWS Collector",
//	     "plugin_info": {
//	         "plugin_id": "plugin-30d21ef75a5d",
//	         "version": "1.13.13",
//	         "options": {},
//	         "metadata": {
//	             "supported_schedules": [
//	                 "hours"
//	             ],
//	             "supported_resource_type": [
//	                 "inventory.CloudService",
//	                 "inventory.CloudServiceType",
//	                 "inventory.Region"
//	             ],
//	             "filter_format": [],
//	             "supported_features": [
//	               "garbage_collection"
//	             ]
//	         },
//	         "upgrade_mode": "AUTO"
//	     },
//	     "tags": {
//	         "type": "test"
//	     },
//	     "created_at": "2022-06-17T06:33:27.195Z",
//	     "domain_id": "domain-58010aa2e451",
//	     "provider": "aws",
//	     "capability": {
//	         "supported_schema": [
//	             "aws_access_key"
//	         ]
//	     },
//	     "schedule": {
//	         "state": "ENABLED",
//	         "hours": [0, 6, 12, 18]
//	     },
//	     "secret_filter": {
//	         "state": "ENABLED",
//	         "secrets": ["secret-xxx", "secret-yyy"],
//	         "service_accounts": ["sa-xxx", "sa-yyy"],
//	         "schemas": ["schema-xxx", "schema-yyy"]
//	     },
//	     "last_collected_at": "2022-06-17T06:33:27.195Z"
//	   }
//	   ],
//	   "total_count": 2
//	}
type CollectorsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*CollectorInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *CollectorsInfo) Reset() {
	*x = CollectorsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorsInfo) ProtoMessage() {}

func (x *CollectorsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorsInfo.ProtoReflect.Descriptor instead.
func (*CollectorsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{12}
}

func (x *CollectorsInfo) GetResults() []*CollectorInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CollectorsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CollectorStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CollectorStatQuery) Reset() {
	*x = CollectorStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorStatQuery) ProtoMessage() {}

func (x *CollectorStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorStatQuery.ProtoReflect.Descriptor instead.
func (*CollectorStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{13}
}

func (x *CollectorStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CollectorStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type VerifyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VerifyInfo) Reset() {
	*x = VerifyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInfo) ProtoMessage() {}

func (x *VerifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInfo.ProtoReflect.Descriptor instead.
func (*VerifyInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  string          `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Message    string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Additional *_struct.Struct `protobuf:"bytes,3,opt,name=additional,proto3" json:"additional,omitempty"`
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{15}
}

func (x *ErrorInfo) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorInfo) GetAdditional() *_struct.Struct {
	if x != nil {
		return x.Additional
	}
	return nil
}

//	{
//	     "job_id": "job-123456789012",
//	     "status": "ERROR",
//	     "filter": {},
//	     "total_tasks": 2,
//	     "collector_info": {
//	         "collector_id": "collector-123456789012",
//	         "name": "Jenkins Collector",
//	         "state": "ENABLED",
//	         "plugin_info": {
//	             "plugin_id": "plugin-jenkins-inven-collector",
//	             "version": "0.1.1"
//	         },
//	         "provider": "jenkins",
//	         "capability": {},
//	         "is_public": true
//	     },
//	     "domain_id": "domain-123456789012",
//	     "created_at": "2022-01-01T10:00:01.389Z",
//	     "updated_at": "2022-01-01T10:00:01.389Z",
//	     "finished_at": "2022-01-01T10:02:11.270Z"
//	}
type JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status        JobInfo_Status `protobuf:"varint,2,opt,name=status,proto3,enum=spaceone.api.inventory.v1.JobInfo_Status" json:"status,omitempty"`
	TotalTasks    int32          `protobuf:"varint,4,opt,name=total_tasks,json=totalTasks,proto3" json:"total_tasks,omitempty"`
	RemainedTasks int32          `protobuf:"varint,5,opt,name=remained_tasks,json=remainedTasks,proto3" json:"remained_tasks,omitempty"`
	SuccessTasks  int32          `protobuf:"varint,6,opt,name=success_tasks,json=successTasks,proto3" json:"success_tasks,omitempty"`
	FailureTasks  int32          `protobuf:"varint,7,opt,name=failure_tasks,json=failureTasks,proto3" json:"failure_tasks,omitempty"`
	CollectorId   string         `protobuf:"bytes,11,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	SecretId      string         `protobuf:"bytes,12,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	DomainId      string         `protobuf:"bytes,13,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	PluginId      string         `protobuf:"bytes,15,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	CreatedAt     string         `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string         `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FinishedAt    string         `protobuf:"bytes,23,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{16}
}

func (x *JobInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobInfo) GetStatus() JobInfo_Status {
	if x != nil {
		return x.Status
	}
	return JobInfo_NONE
}

func (x *JobInfo) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

func (x *JobInfo) GetRemainedTasks() int32 {
	if x != nil {
		return x.RemainedTasks
	}
	return 0
}

func (x *JobInfo) GetSuccessTasks() int32 {
	if x != nil {
		return x.SuccessTasks
	}
	return 0
}

func (x *JobInfo) GetFailureTasks() int32 {
	if x != nil {
		return x.FailureTasks
	}
	return 0
}

func (x *JobInfo) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *JobInfo) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *JobInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *JobInfo) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *JobInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *JobInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *JobInfo) GetFinishedAt() string {
	if x != nil {
		return x.FinishedAt
	}
	return ""
}

//	{
//	   "collector_id": "collector-2c0847644f39",
//	   "name": "regular collection",
//	   "schedule": {
//	       "hours": [16, 18, 20, 22, 0]
//	   }
//	}
type CreateScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId    string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CollectorId string `protobuf:"bytes,2,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	CollectMode string     `protobuf:"bytes,4,opt,name=collect_mode,json=collectMode,proto3" json:"collect_mode,omitempty"`
	Schedule    *Scheduled `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Filter *_struct.Struct `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *CreateScheduleRequest) Reset() {
	*x = CreateScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleRequest) ProtoMessage() {}

func (x *CreateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{17}
}

func (x *CreateScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CreateScheduleRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *CreateScheduleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateScheduleRequest) GetCollectMode() string {
	if x != nil {
		return x.CollectMode
	}
	return ""
}

func (x *CreateScheduleRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *CreateScheduleRequest) GetFilter() *_struct.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

//	{
//	   "schedule_id": "sched-dfb2f6ef84bc",
//	   "collector_id": "collector-2c0847644f39",
//	   "name": "regular collection",
//	   "collect_mode": "ALL",
//	   "schedule": {
//	       "hours": [2, 4, 6, 8, 0]
//	   },
//	   "filter": {}
//	}
type UpdateScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId    string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ScheduleId  string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	CollectorId string `protobuf:"bytes,3,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	CollectMode string `protobuf:"bytes,5,opt,name=collect_mode,json=collectMode,proto3" json:"collect_mode,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Filter *_struct.Struct `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *UpdateScheduleRequest) Reset() {
	*x = UpdateScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleRequest) ProtoMessage() {}

func (x *UpdateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateScheduleRequest) GetCollectMode() string {
	if x != nil {
		return x.CollectMode
	}
	return ""
}

func (x *UpdateScheduleRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UpdateScheduleRequest) GetFilter() *_struct.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

//	{
//	   "collector_id": "collector-2c0847644f39",
//	   "schedule_id": "sched-dfb2f6ef84bc"
//	}
type ScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId    string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ScheduleId  string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	CollectorId string `protobuf:"bytes,3,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
}

func (x *ScheduleRequest) Reset() {
	*x = ScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRequest) ProtoMessage() {}

func (x *ScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRequest.ProtoReflect.Descriptor instead.
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{19}
}

func (x *ScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

//	{
//	   "schedule_id": "sched-dfb2f6ef84bc",
//	   "collector_id": "collector-2c0847644f39"
//	}
type DeleteScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId    string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ScheduleId  string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	CollectorId string `protobuf:"bytes,3,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
}

func (x *DeleteScheduleRequest) Reset() {
	*x = DeleteScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleRequest) ProtoMessage() {}

func (x *DeleteScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleRequest.ProtoReflect.Descriptor instead.
func (*DeleteScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DeleteScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *DeleteScheduleRequest) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

//	{
//	   "collector_id": "collector-f2e4e9cc7f21"
//	}
type ScheduleQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query       *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	CollectorId string    `protobuf:"bytes,2,opt,name=collector_id,json=collectorId,proto3" json:"collector_id,omitempty"`
	// +optional
	ScheduleId string `protobuf:"bytes,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	DomainId   string `protobuf:"bytes,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ScheduleQuery) Reset() {
	*x = ScheduleQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleQuery) ProtoMessage() {}

func (x *ScheduleQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleQuery.ProtoReflect.Descriptor instead.
func (*ScheduleQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{21}
}

func (x *ScheduleQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ScheduleQuery) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *ScheduleQuery) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "schedule_id": "sched-dfb2f6ef84bc",
//	   "name": "regular collection",
//	   "collect_mode": "ALL",
//	   "schedule": {
//	       "hours": [
//	           16,
//	           18,
//	           20,
//	           22,
//	           0
//	       ]
//	   },
//	   "created_at": "2022-06-17T07:12:07.374Z",
//	   "collector_info": {
//	       "collector_id": "collector-2c0847644f39",
//	       "name": "AWS stat-kwon Collector",
//	       "state": "ENABLED",
//	       "plugin_info": {
//	           "plugin_id": "plugin-30d21ef75a5d",
//	           "version": "1.13.13.20220610.143142",
//	           "options": {},
//	           "provider": "aws",
//	           "metadata": {
//	               "supported_resource_type": [
//	                   "inventory.CloudService",
//	                   "inventory.CloudServiceType",
//	                   "inventory.Region"
//	               ],
//	               "supported_features": [
//	                   "garbage_collection"
//	               ],
//	               "filter_format": [],
//	               "supported_schedules": [
//	                   "hours"
//	               ]
//	           },
//	           "upgrade_mode": "MANUAL"
//	       },
//	       "priority": 10,
//	       "tags": {
//	           "a": "b"
//	       },
//	       "created_at": "2022-06-17T06:33:27.195Z",
//	       "domain_id": "domain-58010aa2e451",
//	       "provider": "aws",
//	       "capability": {
//	           "supported_schema": [
//	               "aws_access_key"
//	           ]
//	       },
//	       "is_public": true
//	   },
//	   "filter": {}
//	}
type ScheduleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId        string          `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ScheduleId      string          `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CollectMode     string          `protobuf:"bytes,4,opt,name=collect_mode,json=collectMode,proto3" json:"collect_mode,omitempty"`
	Schedule        *Scheduled      `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	CreatedAt       string          `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastScheduledAt string          `protobuf:"bytes,11,opt,name=last_scheduled_at,json=lastScheduledAt,proto3" json:"last_scheduled_at,omitempty"`
	CollectorInfo   *CollectorInfo  `protobuf:"bytes,20,opt,name=collector_info,json=collectorInfo,proto3" json:"collector_info,omitempty"`
	Filter          *_struct.Struct `protobuf:"bytes,21,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ScheduleInfo) Reset() {
	*x = ScheduleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleInfo) ProtoMessage() {}

func (x *ScheduleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleInfo.ProtoReflect.Descriptor instead.
func (*ScheduleInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{22}
}

func (x *ScheduleInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ScheduleInfo) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScheduleInfo) GetCollectMode() string {
	if x != nil {
		return x.CollectMode
	}
	return ""
}

func (x *ScheduleInfo) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *ScheduleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ScheduleInfo) GetLastScheduledAt() string {
	if x != nil {
		return x.LastScheduledAt
	}
	return ""
}

func (x *ScheduleInfo) GetCollectorInfo() *CollectorInfo {
	if x != nil {
		return x.CollectorInfo
	}
	return nil
}

func (x *ScheduleInfo) GetFilter() *_struct.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

//	{
//	   "results": [
//	           {
//	               "schedule_id": "sched-572819cabe90",
//	               "name": "daily",
//	               "collect_mode": "ALL",
//	               "schedule": {
//	                   "hours": [
//	                       15,
//	                       16,
//	                       18,
//	                       21,
//	                       0,
//	                       3,
//	                       4,
//	                       6,
//	                       9,
//	                       12
//	                   ]
//	               },
//	               "created_at": "2021-03-13T14:32:46.137Z",
//	               "collector_info": {
//	                   "collector_id": "collector-f2e4e9cc7f21",
//	                   "name": "AWS Cloud Service Collector",
//	                   "state": "ENABLED",
//	                   "plugin_info": {
//	                       "plugin_id": "plugin-30d21ef75a5d",
//	                       "version": "1.13.13.20220610.143142",
//	                       "options": {},
//	                       "provider": "aws",
//	                       "metadata": {
//	                           "supported_features": [
//	                               "garbage_collection"
//	                           ],
//	                           "supported_schedules": [
//	                               "hours"
//	                           ],
//	                           "filter_format": [],
//	                           "supported_resource_type": [
//	                               "inventory.CloudService",
//	                               "inventory.CloudServiceType",
//	                               "inventory.Region"
//	                           ]
//	                       },
//	                       "upgrade_mode": "AUTO"
//	                   },
//	                   "priority": 10,
//	                   "tags": {},
//	                   "created_at": "2021-03-08T06:49:27.876Z",
//	                   "last_collected_at": "2022-06-17T06:00:07.162Z",
//	                   "domain_id": "domain-58010aa2e451",
//	                   "provider": "aws",
//	                   "capability": {
//	                       "supported_schema": [
//	                           "aws_access_key"
//	                       ]
//	                   },
//	                   "is_public": true
//	               },
//	               "filter": {}
//	           }
//	   ],
//	   "total_count": 1
//	}
type SchedulesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*ScheduleInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *SchedulesInfo) Reset() {
	*x = SchedulesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulesInfo) ProtoMessage() {}

func (x *SchedulesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_collector_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulesInfo.ProtoReflect.Descriptor instead.
func (*SchedulesInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP(), []int{23}
}

func (x *SchedulesInfo) GetResults() []*ScheduleInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SchedulesInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_inventory_v1_collector_proto protoreflect.FileDescriptor

var file_spaceone_api_inventory_v1_collector_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12,
	0x49, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x22, 0x35, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x73, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x16, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x22, 0x38, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xb0,
	0x02, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0c,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0x2d, 0x0a, 0x0b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10,
	0x02, 0x22, 0xea, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xa9,
	0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x5d, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x2d,
	0x0a, 0x0b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x02, 0x22, 0x52, 0x0a,
	0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xc5, 0x02, 0x0a,
	0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x22, 0xde, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x72, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xb6, 0x04, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x08,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4c,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x22, 0x75, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x12, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x7d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x9b,
	0x04, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x4b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04, 0x22, 0x81, 0x02, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xa2, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x0c, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x40, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4f, 0x0a, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x73,
	0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x41, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0xe7, 0x09, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x90, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25,
	0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x12, 0x78, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x03,
	0x67, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22,
	0x1c, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x77, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x40, 0x5a,
	0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_inventory_v1_collector_proto_rawDescOnce sync.Once
	file_spaceone_api_inventory_v1_collector_proto_rawDescData = file_spaceone_api_inventory_v1_collector_proto_rawDesc
)

func file_spaceone_api_inventory_v1_collector_proto_rawDescGZIP() []byte {
	file_spaceone_api_inventory_v1_collector_proto_rawDescOnce.Do(func() {
		file_spaceone_api_inventory_v1_collector_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_inventory_v1_collector_proto_rawDescData)
	})
	return file_spaceone_api_inventory_v1_collector_proto_rawDescData
}

var file_spaceone_api_inventory_v1_collector_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_spaceone_api_inventory_v1_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_spaceone_api_inventory_v1_collector_proto_goTypes = []interface{}{
	(Scheduled_ScheduledState)(0),        // 0: spaceone.api.inventory.v1.Scheduled.ScheduledState
	(SecretFilter_SecretFilterState)(0),  // 1: spaceone.api.inventory.v1.SecretFilter.SecretFilterState
	(PluginInfo_UpgradeMode)(0),          // 2: spaceone.api.inventory.v1.PluginInfo.UpgradeMode
	(UpdatePluginRequest_UpgradeMode)(0), // 3: spaceone.api.inventory.v1.UpdatePluginRequest.UpgradeMode
	(CollectorQuery_State)(0),            // 4: spaceone.api.inventory.v1.CollectorQuery.State
	(CollectorInfo_State)(0),             // 5: spaceone.api.inventory.v1.CollectorInfo.State
	(JobInfo_Status)(0),                  // 6: spaceone.api.inventory.v1.JobInfo.Status
	(*Scheduled)(nil),                    // 7: spaceone.api.inventory.v1.Scheduled
	(*SecretFilter)(nil),                 // 8: spaceone.api.inventory.v1.SecretFilter
	(*PluginInfo)(nil),                   // 9: spaceone.api.inventory.v1.PluginInfo
	(*CreateCollectorRequest)(nil),       // 10: spaceone.api.inventory.v1.CreateCollectorRequest
	(*UpdateCollectorRequest)(nil),       // 11: spaceone.api.inventory.v1.UpdateCollectorRequest
	(*UpdatePluginRequest)(nil),          // 12: spaceone.api.inventory.v1.UpdatePluginRequest
	(*CollectorRequest)(nil),             // 13: spaceone.api.inventory.v1.CollectorRequest
	(*GetCollectorRequest)(nil),          // 14: spaceone.api.inventory.v1.GetCollectorRequest
	(*CollectorQuery)(nil),               // 15: spaceone.api.inventory.v1.CollectorQuery
	(*CollectRequest)(nil),               // 16: spaceone.api.inventory.v1.CollectRequest
	(*VerifyPluginRequest)(nil),          // 17: spaceone.api.inventory.v1.VerifyPluginRequest
	(*CollectorInfo)(nil),                // 18: spaceone.api.inventory.v1.CollectorInfo
	(*CollectorsInfo)(nil),               // 19: spaceone.api.inventory.v1.CollectorsInfo
	(*CollectorStatQuery)(nil),           // 20: spaceone.api.inventory.v1.CollectorStatQuery
	(*VerifyInfo)(nil),                   // 21: spaceone.api.inventory.v1.VerifyInfo
	(*ErrorInfo)(nil),                    // 22: spaceone.api.inventory.v1.ErrorInfo
	(*JobInfo)(nil),                      // 23: spaceone.api.inventory.v1.JobInfo
	(*CreateScheduleRequest)(nil),        // 24: spaceone.api.inventory.v1.CreateScheduleRequest
	(*UpdateScheduleRequest)(nil),        // 25: spaceone.api.inventory.v1.UpdateScheduleRequest
	(*ScheduleRequest)(nil),              // 26: spaceone.api.inventory.v1.ScheduleRequest
	(*DeleteScheduleRequest)(nil),        // 27: spaceone.api.inventory.v1.DeleteScheduleRequest
	(*ScheduleQuery)(nil),                // 28: spaceone.api.inventory.v1.ScheduleQuery
	(*ScheduleInfo)(nil),                 // 29: spaceone.api.inventory.v1.ScheduleInfo
	(*SchedulesInfo)(nil),                // 30: spaceone.api.inventory.v1.SchedulesInfo
	(*_struct.Struct)(nil),               // 31: google.protobuf.Struct
	(*v1.Query)(nil),                     // 32: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),           // 33: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                  // 34: google.protobuf.Empty
}
var file_spaceone_api_inventory_v1_collector_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.inventory.v1.Scheduled.state:type_name -> spaceone.api.inventory.v1.Scheduled.ScheduledState
	1,  // 1: spaceone.api.inventory.v1.SecretFilter.state:type_name -> spaceone.api.inventory.v1.SecretFilter.SecretFilterState
	31, // 2: spaceone.api.inventory.v1.PluginInfo.options:type_name -> google.protobuf.Struct
	31, // 3: spaceone.api.inventory.v1.PluginInfo.metadata:type_name -> google.protobuf.Struct
	2,  // 4: spaceone.api.inventory.v1.PluginInfo.upgrade_mode:type_name -> spaceone.api.inventory.v1.PluginInfo.UpgradeMode
	9,  // 5: spaceone.api.inventory.v1.CreateCollectorRequest.plugin_info:type_name -> spaceone.api.inventory.v1.PluginInfo
	7,  // 6: spaceone.api.inventory.v1.CreateCollectorRequest.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	31, // 7: spaceone.api.inventory.v1.CreateCollectorRequest.tags:type_name -> google.protobuf.Struct
	8,  // 8: spaceone.api.inventory.v1.CreateCollectorRequest.secret_filter:type_name -> spaceone.api.inventory.v1.SecretFilter
	7,  // 9: spaceone.api.inventory.v1.UpdateCollectorRequest.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	8,  // 10: spaceone.api.inventory.v1.UpdateCollectorRequest.secret_filter:type_name -> spaceone.api.inventory.v1.SecretFilter
	31, // 11: spaceone.api.inventory.v1.UpdateCollectorRequest.tags:type_name -> google.protobuf.Struct
	31, // 12: spaceone.api.inventory.v1.UpdatePluginRequest.options:type_name -> google.protobuf.Struct
	3,  // 13: spaceone.api.inventory.v1.UpdatePluginRequest.upgrade_mode:type_name -> spaceone.api.inventory.v1.UpdatePluginRequest.UpgradeMode
	32, // 14: spaceone.api.inventory.v1.CollectorQuery.query:type_name -> spaceone.api.core.v1.Query
	4,  // 15: spaceone.api.inventory.v1.CollectorQuery.state:type_name -> spaceone.api.inventory.v1.CollectorQuery.State
	31, // 16: spaceone.api.inventory.v1.CollectRequest.filter:type_name -> google.protobuf.Struct
	9,  // 17: spaceone.api.inventory.v1.CollectorInfo.plugin_info:type_name -> spaceone.api.inventory.v1.PluginInfo
	31, // 18: spaceone.api.inventory.v1.CollectorInfo.tags:type_name -> google.protobuf.Struct
	31, // 19: spaceone.api.inventory.v1.CollectorInfo.capability:type_name -> google.protobuf.Struct
	7,  // 20: spaceone.api.inventory.v1.CollectorInfo.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	8,  // 21: spaceone.api.inventory.v1.CollectorInfo.secret_filter:type_name -> spaceone.api.inventory.v1.SecretFilter
	18, // 22: spaceone.api.inventory.v1.CollectorsInfo.results:type_name -> spaceone.api.inventory.v1.CollectorInfo
	33, // 23: spaceone.api.inventory.v1.CollectorStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	31, // 24: spaceone.api.inventory.v1.ErrorInfo.additional:type_name -> google.protobuf.Struct
	6,  // 25: spaceone.api.inventory.v1.JobInfo.status:type_name -> spaceone.api.inventory.v1.JobInfo.Status
	7,  // 26: spaceone.api.inventory.v1.CreateScheduleRequest.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	31, // 27: spaceone.api.inventory.v1.CreateScheduleRequest.filter:type_name -> google.protobuf.Struct
	7,  // 28: spaceone.api.inventory.v1.UpdateScheduleRequest.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	31, // 29: spaceone.api.inventory.v1.UpdateScheduleRequest.filter:type_name -> google.protobuf.Struct
	32, // 30: spaceone.api.inventory.v1.ScheduleQuery.query:type_name -> spaceone.api.core.v1.Query
	7,  // 31: spaceone.api.inventory.v1.ScheduleInfo.schedule:type_name -> spaceone.api.inventory.v1.Scheduled
	18, // 32: spaceone.api.inventory.v1.ScheduleInfo.collector_info:type_name -> spaceone.api.inventory.v1.CollectorInfo
	31, // 33: spaceone.api.inventory.v1.ScheduleInfo.filter:type_name -> google.protobuf.Struct
	29, // 34: spaceone.api.inventory.v1.SchedulesInfo.results:type_name -> spaceone.api.inventory.v1.ScheduleInfo
	10, // 35: spaceone.api.inventory.v1.Collector.create:input_type -> spaceone.api.inventory.v1.CreateCollectorRequest
	11, // 36: spaceone.api.inventory.v1.Collector.update:input_type -> spaceone.api.inventory.v1.UpdateCollectorRequest
	12, // 37: spaceone.api.inventory.v1.Collector.update_plugin:input_type -> spaceone.api.inventory.v1.UpdatePluginRequest
	17, // 38: spaceone.api.inventory.v1.Collector.verify_plugin:input_type -> spaceone.api.inventory.v1.VerifyPluginRequest
	13, // 39: spaceone.api.inventory.v1.Collector.delete:input_type -> spaceone.api.inventory.v1.CollectorRequest
	14, // 40: spaceone.api.inventory.v1.Collector.get:input_type -> spaceone.api.inventory.v1.GetCollectorRequest
	15, // 41: spaceone.api.inventory.v1.Collector.list:input_type -> spaceone.api.inventory.v1.CollectorQuery
	20, // 42: spaceone.api.inventory.v1.Collector.stat:input_type -> spaceone.api.inventory.v1.CollectorStatQuery
	16, // 43: spaceone.api.inventory.v1.Collector.collect:input_type -> spaceone.api.inventory.v1.CollectRequest
	18, // 44: spaceone.api.inventory.v1.Collector.create:output_type -> spaceone.api.inventory.v1.CollectorInfo
	18, // 45: spaceone.api.inventory.v1.Collector.update:output_type -> spaceone.api.inventory.v1.CollectorInfo
	18, // 46: spaceone.api.inventory.v1.Collector.update_plugin:output_type -> spaceone.api.inventory.v1.CollectorInfo
	34, // 47: spaceone.api.inventory.v1.Collector.verify_plugin:output_type -> google.protobuf.Empty
	34, // 48: spaceone.api.inventory.v1.Collector.delete:output_type -> google.protobuf.Empty
	18, // 49: spaceone.api.inventory.v1.Collector.get:output_type -> spaceone.api.inventory.v1.CollectorInfo
	19, // 50: spaceone.api.inventory.v1.Collector.list:output_type -> spaceone.api.inventory.v1.CollectorsInfo
	31, // 51: spaceone.api.inventory.v1.Collector.stat:output_type -> google.protobuf.Struct
	23, // 52: spaceone.api.inventory.v1.Collector.collect:output_type -> spaceone.api.inventory.v1.JobInfo
	44, // [44:53] is the sub-list for method output_type
	35, // [35:44] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_spaceone_api_inventory_v1_collector_proto_init() }
func file_spaceone_api_inventory_v1_collector_proto_init() {
	if File_spaceone_api_inventory_v1_collector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheduled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePluginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPluginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_collector_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_inventory_v1_collector_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_inventory_v1_collector_proto_goTypes,
		DependencyIndexes: file_spaceone_api_inventory_v1_collector_proto_depIdxs,
		EnumInfos:         file_spaceone_api_inventory_v1_collector_proto_enumTypes,
		MessageInfos:      file_spaceone_api_inventory_v1_collector_proto_msgTypes,
	}.Build()
	File_spaceone_api_inventory_v1_collector_proto = out.File
	file_spaceone_api_inventory_v1_collector_proto_rawDesc = nil
	file_spaceone_api_inventory_v1_collector_proto_goTypes = nil
	file_spaceone_api_inventory_v1_collector_proto_depIdxs = nil
}
