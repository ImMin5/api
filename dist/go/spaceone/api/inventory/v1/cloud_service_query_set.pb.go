// A CloudServiceQuerySet is query set for storing statistics data of CloudService.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.6.1
// source: spaceone/api/inventory/v1/cloud_service_query_set.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCloudServiceQuerySetRequest_ResourceGroup int32

const (
	CreateCloudServiceQuerySetRequest_RESOURCE_GROUP_NONE CreateCloudServiceQuerySetRequest_ResourceGroup = 0
	CreateCloudServiceQuerySetRequest_DOMAIN              CreateCloudServiceQuerySetRequest_ResourceGroup = 1
	CreateCloudServiceQuerySetRequest_WORKSPACE           CreateCloudServiceQuerySetRequest_ResourceGroup = 2
)

// Enum value maps for CreateCloudServiceQuerySetRequest_ResourceGroup.
var (
	CreateCloudServiceQuerySetRequest_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
	}
	CreateCloudServiceQuerySetRequest_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"DOMAIN":              1,
		"WORKSPACE":           2,
	}
)

func (x CreateCloudServiceQuerySetRequest_ResourceGroup) Enum() *CreateCloudServiceQuerySetRequest_ResourceGroup {
	p := new(CreateCloudServiceQuerySetRequest_ResourceGroup)
	*p = x
	return p
}

func (x CreateCloudServiceQuerySetRequest_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateCloudServiceQuerySetRequest_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[0].Descriptor()
}

func (CreateCloudServiceQuerySetRequest_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[0]
}

func (x CreateCloudServiceQuerySetRequest_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateCloudServiceQuerySetRequest_ResourceGroup.Descriptor instead.
func (CreateCloudServiceQuerySetRequest_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{0, 0}
}

type CloudServiceQuerySetQuery_State int32

const (
	CloudServiceQuerySetQuery_NONE_STATE CloudServiceQuerySetQuery_State = 0
	CloudServiceQuerySetQuery_ENABLED    CloudServiceQuerySetQuery_State = 1
	CloudServiceQuerySetQuery_DISABLED   CloudServiceQuerySetQuery_State = 2
)

// Enum value maps for CloudServiceQuerySetQuery_State.
var (
	CloudServiceQuerySetQuery_State_name = map[int32]string{
		0: "NONE_STATE",
		1: "ENABLED",
		2: "DISABLED",
	}
	CloudServiceQuerySetQuery_State_value = map[string]int32{
		"NONE_STATE": 0,
		"ENABLED":    1,
		"DISABLED":   2,
	}
)

func (x CloudServiceQuerySetQuery_State) Enum() *CloudServiceQuerySetQuery_State {
	p := new(CloudServiceQuerySetQuery_State)
	*p = x
	return p
}

func (x CloudServiceQuerySetQuery_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudServiceQuerySetQuery_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[1].Descriptor()
}

func (CloudServiceQuerySetQuery_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[1]
}

func (x CloudServiceQuerySetQuery_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudServiceQuerySetQuery_State.Descriptor instead.
func (CloudServiceQuerySetQuery_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{3, 0}
}

type CloudServiceQuerySetQuery_QueryType int32

const (
	CloudServiceQuerySetQuery_NONE_QUERY_TYPE CloudServiceQuerySetQuery_QueryType = 0
	CloudServiceQuerySetQuery_MANAGED         CloudServiceQuerySetQuery_QueryType = 1
	CloudServiceQuerySetQuery_CUSTOM          CloudServiceQuerySetQuery_QueryType = 2
)

// Enum value maps for CloudServiceQuerySetQuery_QueryType.
var (
	CloudServiceQuerySetQuery_QueryType_name = map[int32]string{
		0: "NONE_QUERY_TYPE",
		1: "MANAGED",
		2: "CUSTOM",
	}
	CloudServiceQuerySetQuery_QueryType_value = map[string]int32{
		"NONE_QUERY_TYPE": 0,
		"MANAGED":         1,
		"CUSTOM":          2,
	}
)

func (x CloudServiceQuerySetQuery_QueryType) Enum() *CloudServiceQuerySetQuery_QueryType {
	p := new(CloudServiceQuerySetQuery_QueryType)
	*p = x
	return p
}

func (x CloudServiceQuerySetQuery_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudServiceQuerySetQuery_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[2].Descriptor()
}

func (CloudServiceQuerySetQuery_QueryType) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[2]
}

func (x CloudServiceQuerySetQuery_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudServiceQuerySetQuery_QueryType.Descriptor instead.
func (CloudServiceQuerySetQuery_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{3, 1}
}

type CloudServiceQuerySetInfo_State int32

const (
	CloudServiceQuerySetInfo_NONE_STATE CloudServiceQuerySetInfo_State = 0
	CloudServiceQuerySetInfo_ENABLED    CloudServiceQuerySetInfo_State = 1
	CloudServiceQuerySetInfo_DISABLED   CloudServiceQuerySetInfo_State = 2
)

// Enum value maps for CloudServiceQuerySetInfo_State.
var (
	CloudServiceQuerySetInfo_State_name = map[int32]string{
		0: "NONE_STATE",
		1: "ENABLED",
		2: "DISABLED",
	}
	CloudServiceQuerySetInfo_State_value = map[string]int32{
		"NONE_STATE": 0,
		"ENABLED":    1,
		"DISABLED":   2,
	}
)

func (x CloudServiceQuerySetInfo_State) Enum() *CloudServiceQuerySetInfo_State {
	p := new(CloudServiceQuerySetInfo_State)
	*p = x
	return p
}

func (x CloudServiceQuerySetInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudServiceQuerySetInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[3].Descriptor()
}

func (CloudServiceQuerySetInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[3]
}

func (x CloudServiceQuerySetInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudServiceQuerySetInfo_State.Descriptor instead.
func (CloudServiceQuerySetInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{4, 0}
}

type CloudServiceQuerySetInfo_QueryType int32

const (
	CloudServiceQuerySetInfo_NONE_QUERY_TYPE CloudServiceQuerySetInfo_QueryType = 0
	CloudServiceQuerySetInfo_MANAGED         CloudServiceQuerySetInfo_QueryType = 1
	CloudServiceQuerySetInfo_CUSTOM          CloudServiceQuerySetInfo_QueryType = 2
)

// Enum value maps for CloudServiceQuerySetInfo_QueryType.
var (
	CloudServiceQuerySetInfo_QueryType_name = map[int32]string{
		0: "NONE_QUERY_TYPE",
		1: "MANAGED",
		2: "CUSTOM",
	}
	CloudServiceQuerySetInfo_QueryType_value = map[string]int32{
		"NONE_QUERY_TYPE": 0,
		"MANAGED":         1,
		"CUSTOM":          2,
	}
)

func (x CloudServiceQuerySetInfo_QueryType) Enum() *CloudServiceQuerySetInfo_QueryType {
	p := new(CloudServiceQuerySetInfo_QueryType)
	*p = x
	return p
}

func (x CloudServiceQuerySetInfo_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudServiceQuerySetInfo_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[4].Descriptor()
}

func (CloudServiceQuerySetInfo_QueryType) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[4]
}

func (x CloudServiceQuerySetInfo_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudServiceQuerySetInfo_QueryType.Descriptor instead.
func (CloudServiceQuerySetInfo_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{4, 1}
}

type CloudServiceQuerySetInfo_ResourceGroup int32

const (
	CloudServiceQuerySetInfo_RESOURCE_GROUP_NONE CloudServiceQuerySetInfo_ResourceGroup = 0
	CloudServiceQuerySetInfo_DOMAIN              CloudServiceQuerySetInfo_ResourceGroup = 1
	CloudServiceQuerySetInfo_WORKSPACE           CloudServiceQuerySetInfo_ResourceGroup = 2
)

// Enum value maps for CloudServiceQuerySetInfo_ResourceGroup.
var (
	CloudServiceQuerySetInfo_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "DOMAIN",
		2: "WORKSPACE",
	}
	CloudServiceQuerySetInfo_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"DOMAIN":              1,
		"WORKSPACE":           2,
	}
)

func (x CloudServiceQuerySetInfo_ResourceGroup) Enum() *CloudServiceQuerySetInfo_ResourceGroup {
	p := new(CloudServiceQuerySetInfo_ResourceGroup)
	*p = x
	return p
}

func (x CloudServiceQuerySetInfo_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudServiceQuerySetInfo_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[5].Descriptor()
}

func (CloudServiceQuerySetInfo_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes[5]
}

func (x CloudServiceQuerySetInfo_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudServiceQuerySetInfo_ResourceGroup.Descriptor instead.
func (CloudServiceQuerySetInfo_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{4, 2}
}

//	{
//	   "name": "EC2 Count by Instance Type",
//	   "query_options": "<AnalyzeQuery>",
//	   "unit": {
//	       "Disk Size": "GB",
//	       "Memory": "GB",
//	       "CPU": "Core"
//	   },
//	   "provider": "aws",
//	   "cloud_service_group": "EC2",
//	   "cloud_service_type": "Instance",
//	   "tags": {
//	       "foo": "bar"
//	   }
//	}
type CreateCloudServiceQuerySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	QueryOptions *v1.AnalyzeQuery `protobuf:"bytes,2,opt,name=query_options,json=queryOptions,proto3" json:"query_options,omitempty"`
	// +optional
	Unit              *_struct.Struct `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Provider          string          `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	CloudServiceGroup string          `protobuf:"bytes,5,opt,name=cloud_service_group,json=cloudServiceGroup,proto3" json:"cloud_service_group,omitempty"`
	CloudServiceType  string          `protobuf:"bytes,6,opt,name=cloud_service_type,json=cloudServiceType,proto3" json:"cloud_service_type,omitempty"`
	// +optional
	Tags          *_struct.Struct                                 `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	ResourceGroup CreateCloudServiceQuerySetRequest_ResourceGroup `protobuf:"varint,20,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest_ResourceGroup" json:"resource_group,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CreateCloudServiceQuerySetRequest) Reset() {
	*x = CreateCloudServiceQuerySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCloudServiceQuerySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudServiceQuerySetRequest) ProtoMessage() {}

func (x *CreateCloudServiceQuerySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudServiceQuerySetRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudServiceQuerySetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCloudServiceQuerySetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCloudServiceQuerySetRequest) GetQueryOptions() *v1.AnalyzeQuery {
	if x != nil {
		return x.QueryOptions
	}
	return nil
}

func (x *CreateCloudServiceQuerySetRequest) GetUnit() *_struct.Struct {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *CreateCloudServiceQuerySetRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateCloudServiceQuerySetRequest) GetCloudServiceGroup() string {
	if x != nil {
		return x.CloudServiceGroup
	}
	return ""
}

func (x *CreateCloudServiceQuerySetRequest) GetCloudServiceType() string {
	if x != nil {
		return x.CloudServiceType
	}
	return ""
}

func (x *CreateCloudServiceQuerySetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateCloudServiceQuerySetRequest) GetResourceGroup() CreateCloudServiceQuerySetRequest_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return CreateCloudServiceQuerySetRequest_RESOURCE_GROUP_NONE
}

func (x *CreateCloudServiceQuerySetRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

//	{
//	   "query_set_id": "query-set-abcd1234",
//	   "name": "Changed Name",
//	   "query_options": "<AnalyzeQuery>",
//	   "unit": {
//	       "Disk Size": "GB",
//	       "Memory": "GB",
//	       "CPU": "Core"
//	   },
//	   "tags": {
//	       "changed_key": "changed_value"
//	   }
//	}
type UpdateCloudServiceQuerySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySetId string `protobuf:"bytes,1,opt,name=query_set_id,json=querySetId,proto3" json:"query_set_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	QueryOptions *v1.AnalyzeQuery `protobuf:"bytes,3,opt,name=query_options,json=queryOptions,proto3" json:"query_options,omitempty"`
	// +optional
	Unit *_struct.Struct `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdateCloudServiceQuerySetRequest) Reset() {
	*x = UpdateCloudServiceQuerySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudServiceQuerySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudServiceQuerySetRequest) ProtoMessage() {}

func (x *UpdateCloudServiceQuerySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudServiceQuerySetRequest.ProtoReflect.Descriptor instead.
func (*UpdateCloudServiceQuerySetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCloudServiceQuerySetRequest) GetQuerySetId() string {
	if x != nil {
		return x.QuerySetId
	}
	return ""
}

func (x *UpdateCloudServiceQuerySetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCloudServiceQuerySetRequest) GetQueryOptions() *v1.AnalyzeQuery {
	if x != nil {
		return x.QueryOptions
	}
	return nil
}

func (x *UpdateCloudServiceQuerySetRequest) GetUnit() *_struct.Struct {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *UpdateCloudServiceQuerySetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

//	{
//	   "query_set_id": "query-set-abcd1234"
//	}
type CloudServiceQuerySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySetId string `protobuf:"bytes,1,opt,name=query_set_id,json=querySetId,proto3" json:"query_set_id,omitempty"`
}

func (x *CloudServiceQuerySetRequest) Reset() {
	*x = CloudServiceQuerySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudServiceQuerySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudServiceQuerySetRequest) ProtoMessage() {}

func (x *CloudServiceQuerySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudServiceQuerySetRequest.ProtoReflect.Descriptor instead.
func (*CloudServiceQuerySetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{2}
}

func (x *CloudServiceQuerySetRequest) GetQuerySetId() string {
	if x != nil {
		return x.QuerySetId
	}
	return ""
}

//	{
//	   "query": <SearchQuery>,
//	   "query_set_id": "query-set-abcd1234",
//	   "name": "EC2 Count by Instance Type",
//	   "state": "ENABLED",
//	   "query_type": "MANAGED",
//	   "provider": "aws",
//	   "cloud_service_group": "EC2",
//	   "cloud_service_type": "Instance",
//	   "resource_group": "DOMAIN",
//	}
type CloudServiceQuerySetQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	QuerySetId string `protobuf:"bytes,2,opt,name=query_set_id,json=querySetId,proto3" json:"query_set_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State CloudServiceQuerySetQuery_State `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.inventory.v1.CloudServiceQuerySetQuery_State" json:"state,omitempty"`
	// +optional
	QueryType CloudServiceQuerySetQuery_QueryType `protobuf:"varint,5,opt,name=query_type,json=queryType,proto3,enum=spaceone.api.inventory.v1.CloudServiceQuerySetQuery_QueryType" json:"query_type,omitempty"`
	// +optional
	Provider string `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	// +optional
	CloudServiceGroup string `protobuf:"bytes,7,opt,name=cloud_service_group,json=cloudServiceGroup,proto3" json:"cloud_service_group,omitempty"`
	// +optional
	CloudServiceType string `protobuf:"bytes,8,opt,name=cloud_service_type,json=cloudServiceType,proto3" json:"cloud_service_type,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CloudServiceQuerySetQuery) Reset() {
	*x = CloudServiceQuerySetQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudServiceQuerySetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudServiceQuerySetQuery) ProtoMessage() {}

func (x *CloudServiceQuerySetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudServiceQuerySetQuery.ProtoReflect.Descriptor instead.
func (*CloudServiceQuerySetQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{3}
}

func (x *CloudServiceQuerySetQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CloudServiceQuerySetQuery) GetQuerySetId() string {
	if x != nil {
		return x.QuerySetId
	}
	return ""
}

func (x *CloudServiceQuerySetQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudServiceQuerySetQuery) GetState() CloudServiceQuerySetQuery_State {
	if x != nil {
		return x.State
	}
	return CloudServiceQuerySetQuery_NONE_STATE
}

func (x *CloudServiceQuerySetQuery) GetQueryType() CloudServiceQuerySetQuery_QueryType {
	if x != nil {
		return x.QueryType
	}
	return CloudServiceQuerySetQuery_NONE_QUERY_TYPE
}

func (x *CloudServiceQuerySetQuery) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CloudServiceQuerySetQuery) GetCloudServiceGroup() string {
	if x != nil {
		return x.CloudServiceGroup
	}
	return ""
}

func (x *CloudServiceQuerySetQuery) GetCloudServiceType() string {
	if x != nil {
		return x.CloudServiceType
	}
	return ""
}

func (x *CloudServiceQuerySetQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

//	{
//	   "query_set_id": "query-set-abcd1234",
//	   "name": "EC2 Count by Instance Type",
//	   "state": "ENABLED",
//	   "query_options": "<AnalyzeQuery>",
//	   "query_type": "MANAGED",
//	   "unit": {
//	       "Disk Size": "GB",
//	       "Memory": "GB",
//	       "CPU": "Core"
//	   },
//	   "data_keys": [
//	       "Disk Size",
//	       "Memory",
//	       "CPU
//	   ],
//	   "additional_info_keys": [
//	       "instance_type"
//	   ],
//	   "provider": "aws",
//	   "cloud_service_group": "EC2",
//	   "cloud_service_type": "Instance",
//	   "tags": {
//	       "foo": "bar"
//	   },
//	   "domain_id": "domain-58010aa2e451",
//	   "created_at": "2022-06-22T01:38:16.301Z"
//	   "updated_at": "2023-03-16T06:00:00.000Z"
//	}
type CloudServiceQuerySetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySetId         string                                 `protobuf:"bytes,1,opt,name=query_set_id,json=querySetId,proto3" json:"query_set_id,omitempty"`
	Name               string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State              CloudServiceQuerySetInfo_State         `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.inventory.v1.CloudServiceQuerySetInfo_State" json:"state,omitempty"`
	QueryOptions       *v1.AnalyzeQuery                       `protobuf:"bytes,4,opt,name=query_options,json=queryOptions,proto3" json:"query_options,omitempty"`
	QueryType          CloudServiceQuerySetInfo_QueryType     `protobuf:"varint,5,opt,name=query_type,json=queryType,proto3,enum=spaceone.api.inventory.v1.CloudServiceQuerySetInfo_QueryType" json:"query_type,omitempty"`
	Unit               *_struct.Struct                        `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
	DataKeys           []string                               `protobuf:"bytes,7,rep,name=data_keys,json=dataKeys,proto3" json:"data_keys,omitempty"`
	AdditionalInfoKeys []string                               `protobuf:"bytes,8,rep,name=additional_info_keys,json=additionalInfoKeys,proto3" json:"additional_info_keys,omitempty"`
	Provider           string                                 `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`
	CloudServiceGroup  string                                 `protobuf:"bytes,10,opt,name=cloud_service_group,json=cloudServiceGroup,proto3" json:"cloud_service_group,omitempty"`
	CloudServiceType   string                                 `protobuf:"bytes,11,opt,name=cloud_service_type,json=cloudServiceType,proto3" json:"cloud_service_type,omitempty"`
	Tags               *_struct.Struct                        `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	ResourceGroup      CloudServiceQuerySetInfo_ResourceGroup `protobuf:"varint,20,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.inventory.v1.CloudServiceQuerySetInfo_ResourceGroup" json:"resource_group,omitempty"`
	DomainId           string                                 `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId        string                                 `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	CreatedAt          string                                 `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string                                 `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CloudServiceQuerySetInfo) Reset() {
	*x = CloudServiceQuerySetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudServiceQuerySetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudServiceQuerySetInfo) ProtoMessage() {}

func (x *CloudServiceQuerySetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudServiceQuerySetInfo.ProtoReflect.Descriptor instead.
func (*CloudServiceQuerySetInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{4}
}

func (x *CloudServiceQuerySetInfo) GetQuerySetId() string {
	if x != nil {
		return x.QuerySetId
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetState() CloudServiceQuerySetInfo_State {
	if x != nil {
		return x.State
	}
	return CloudServiceQuerySetInfo_NONE_STATE
}

func (x *CloudServiceQuerySetInfo) GetQueryOptions() *v1.AnalyzeQuery {
	if x != nil {
		return x.QueryOptions
	}
	return nil
}

func (x *CloudServiceQuerySetInfo) GetQueryType() CloudServiceQuerySetInfo_QueryType {
	if x != nil {
		return x.QueryType
	}
	return CloudServiceQuerySetInfo_NONE_QUERY_TYPE
}

func (x *CloudServiceQuerySetInfo) GetUnit() *_struct.Struct {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *CloudServiceQuerySetInfo) GetDataKeys() []string {
	if x != nil {
		return x.DataKeys
	}
	return nil
}

func (x *CloudServiceQuerySetInfo) GetAdditionalInfoKeys() []string {
	if x != nil {
		return x.AdditionalInfoKeys
	}
	return nil
}

func (x *CloudServiceQuerySetInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetCloudServiceGroup() string {
	if x != nil {
		return x.CloudServiceGroup
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetCloudServiceType() string {
	if x != nil {
		return x.CloudServiceType
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CloudServiceQuerySetInfo) GetResourceGroup() CloudServiceQuerySetInfo_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return CloudServiceQuerySetInfo_RESOURCE_GROUP_NONE
}

func (x *CloudServiceQuerySetInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CloudServiceQuerySetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "query_set_id": "query-set-abcd1234",
//	           "name": "EC2 Count by Instance Type",
//	           "state": "ENABLED",
//	           "query_type": "MANAGED",
//	           "query_options": "<AnalyzeQuery>",
//	           "unit": {
//	               "Disk Size": "GB",
//	               "Memory": "GB",
//	               "CPU": "Core"
//	           },
//	          "data_keys": [
//	              "Disk Size",
//	              "Memory",
//	              "CPU
//	           ],
//	           "additional_info_keys": [
//	               "instance_type"
//	           ],
//	           "provider": "aws",
//	           "cloud_service_group": "EC2",
//	           "cloud_service_type": "Instance",
//	           "tags": {
//	               "foo": "bar"
//	           },
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2022-06-22T01:38:16.301Z",
//	           "updated_at": "2023-03-16T06:00:00.000Z"
//	       },
//	       {...}
//	   ],
//	   "total_count": 2
//	}
type CloudServiceQuerySetsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*CloudServiceQuerySetInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *CloudServiceQuerySetsInfo) Reset() {
	*x = CloudServiceQuerySetsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudServiceQuerySetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudServiceQuerySetsInfo) ProtoMessage() {}

func (x *CloudServiceQuerySetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudServiceQuerySetsInfo.ProtoReflect.Descriptor instead.
func (*CloudServiceQuerySetsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{5}
}

func (x *CloudServiceQuerySetsInfo) GetResults() []*CloudServiceQuerySetInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CloudServiceQuerySetsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CloudServiceQuerySetStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *CloudServiceQuerySetStatQuery) Reset() {
	*x = CloudServiceQuerySetStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudServiceQuerySetStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudServiceQuerySetStatQuery) ProtoMessage() {}

func (x *CloudServiceQuerySetStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudServiceQuerySetStatQuery.ProtoReflect.Descriptor instead.
func (*CloudServiceQuerySetStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP(), []int{6}
}

func (x *CloudServiceQuerySetStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_spaceone_api_inventory_v1_cloud_service_query_set_proto protoreflect.FileDescriptor

var file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDesc = []byte{
	0x0a, 0x37, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xaf, 0x04, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x71, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10,
	0x02, 0x22, 0xfc, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a,
	0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x3f, 0x0a, 0x1b, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x22, 0xc1, 0x04, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x39, 0x0a, 0x09, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x4e, 0x45, 0x5f,
	0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x10, 0x02, 0x22, 0x87, 0x08, 0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x68, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x32, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22,
	0x39, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x22, 0x43, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22,
	0x8b, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5c, 0x0a,
	0x1d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x32, 0x85, 0x0d, 0x0a, 0x14,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x74, 0x12, 0xb4, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x3c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2d, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x06,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x36, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x37, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x36,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74,
	0x2f, 0x72, 0x75, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x36, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x35,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x12, 0xae, 0x01, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x37, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65,
	0x74, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x03, 0x67, 0x65,
	0x74, 0x12, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0xa9, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x90, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x38, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescOnce sync.Once
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescData = file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDesc
)

func file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescGZIP() []byte {
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescOnce.Do(func() {
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescData)
	})
	return file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDescData
}

var file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_spaceone_api_inventory_v1_cloud_service_query_set_proto_goTypes = []interface{}{
	(CreateCloudServiceQuerySetRequest_ResourceGroup)(0), // 0: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.ResourceGroup
	(CloudServiceQuerySetQuery_State)(0),                 // 1: spaceone.api.inventory.v1.CloudServiceQuerySetQuery.State
	(CloudServiceQuerySetQuery_QueryType)(0),             // 2: spaceone.api.inventory.v1.CloudServiceQuerySetQuery.QueryType
	(CloudServiceQuerySetInfo_State)(0),                  // 3: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.State
	(CloudServiceQuerySetInfo_QueryType)(0),              // 4: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.QueryType
	(CloudServiceQuerySetInfo_ResourceGroup)(0),          // 5: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.ResourceGroup
	(*CreateCloudServiceQuerySetRequest)(nil),            // 6: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest
	(*UpdateCloudServiceQuerySetRequest)(nil),            // 7: spaceone.api.inventory.v1.UpdateCloudServiceQuerySetRequest
	(*CloudServiceQuerySetRequest)(nil),                  // 8: spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	(*CloudServiceQuerySetQuery)(nil),                    // 9: spaceone.api.inventory.v1.CloudServiceQuerySetQuery
	(*CloudServiceQuerySetInfo)(nil),                     // 10: spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	(*CloudServiceQuerySetsInfo)(nil),                    // 11: spaceone.api.inventory.v1.CloudServiceQuerySetsInfo
	(*CloudServiceQuerySetStatQuery)(nil),                // 12: spaceone.api.inventory.v1.CloudServiceQuerySetStatQuery
	(*v1.AnalyzeQuery)(nil),                              // 13: spaceone.api.core.v1.AnalyzeQuery
	(*_struct.Struct)(nil),                               // 14: google.protobuf.Struct
	(*v1.Query)(nil),                                     // 15: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),                           // 16: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                                  // 17: google.protobuf.Empty
}
var file_spaceone_api_inventory_v1_cloud_service_query_set_proto_depIdxs = []int32{
	13, // 0: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.query_options:type_name -> spaceone.api.core.v1.AnalyzeQuery
	14, // 1: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.unit:type_name -> google.protobuf.Struct
	14, // 2: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.tags:type_name -> google.protobuf.Struct
	0,  // 3: spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.resource_group:type_name -> spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest.ResourceGroup
	13, // 4: spaceone.api.inventory.v1.UpdateCloudServiceQuerySetRequest.query_options:type_name -> spaceone.api.core.v1.AnalyzeQuery
	14, // 5: spaceone.api.inventory.v1.UpdateCloudServiceQuerySetRequest.unit:type_name -> google.protobuf.Struct
	14, // 6: spaceone.api.inventory.v1.UpdateCloudServiceQuerySetRequest.tags:type_name -> google.protobuf.Struct
	15, // 7: spaceone.api.inventory.v1.CloudServiceQuerySetQuery.query:type_name -> spaceone.api.core.v1.Query
	1,  // 8: spaceone.api.inventory.v1.CloudServiceQuerySetQuery.state:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetQuery.State
	2,  // 9: spaceone.api.inventory.v1.CloudServiceQuerySetQuery.query_type:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetQuery.QueryType
	3,  // 10: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.state:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo.State
	13, // 11: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.query_options:type_name -> spaceone.api.core.v1.AnalyzeQuery
	4,  // 12: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.query_type:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo.QueryType
	14, // 13: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.unit:type_name -> google.protobuf.Struct
	14, // 14: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.tags:type_name -> google.protobuf.Struct
	5,  // 15: spaceone.api.inventory.v1.CloudServiceQuerySetInfo.resource_group:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo.ResourceGroup
	10, // 16: spaceone.api.inventory.v1.CloudServiceQuerySetsInfo.results:type_name -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	16, // 17: spaceone.api.inventory.v1.CloudServiceQuerySetStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	6,  // 18: spaceone.api.inventory.v1.CloudServiceQuerySet.create:input_type -> spaceone.api.inventory.v1.CreateCloudServiceQuerySetRequest
	7,  // 19: spaceone.api.inventory.v1.CloudServiceQuerySet.update:input_type -> spaceone.api.inventory.v1.UpdateCloudServiceQuerySetRequest
	8,  // 20: spaceone.api.inventory.v1.CloudServiceQuerySet.delete:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	8,  // 21: spaceone.api.inventory.v1.CloudServiceQuerySet.run:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	8,  // 22: spaceone.api.inventory.v1.CloudServiceQuerySet.test:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	8,  // 23: spaceone.api.inventory.v1.CloudServiceQuerySet.enable:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	8,  // 24: spaceone.api.inventory.v1.CloudServiceQuerySet.disable:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	8,  // 25: spaceone.api.inventory.v1.CloudServiceQuerySet.get:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetRequest
	9,  // 26: spaceone.api.inventory.v1.CloudServiceQuerySet.list:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetQuery
	12, // 27: spaceone.api.inventory.v1.CloudServiceQuerySet.stat:input_type -> spaceone.api.inventory.v1.CloudServiceQuerySetStatQuery
	10, // 28: spaceone.api.inventory.v1.CloudServiceQuerySet.create:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	10, // 29: spaceone.api.inventory.v1.CloudServiceQuerySet.update:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	17, // 30: spaceone.api.inventory.v1.CloudServiceQuerySet.delete:output_type -> google.protobuf.Empty
	17, // 31: spaceone.api.inventory.v1.CloudServiceQuerySet.run:output_type -> google.protobuf.Empty
	14, // 32: spaceone.api.inventory.v1.CloudServiceQuerySet.test:output_type -> google.protobuf.Struct
	10, // 33: spaceone.api.inventory.v1.CloudServiceQuerySet.enable:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	10, // 34: spaceone.api.inventory.v1.CloudServiceQuerySet.disable:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	10, // 35: spaceone.api.inventory.v1.CloudServiceQuerySet.get:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetInfo
	11, // 36: spaceone.api.inventory.v1.CloudServiceQuerySet.list:output_type -> spaceone.api.inventory.v1.CloudServiceQuerySetsInfo
	14, // 37: spaceone.api.inventory.v1.CloudServiceQuerySet.stat:output_type -> google.protobuf.Struct
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_spaceone_api_inventory_v1_cloud_service_query_set_proto_init() }
func file_spaceone_api_inventory_v1_cloud_service_query_set_proto_init() {
	if File_spaceone_api_inventory_v1_cloud_service_query_set_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCloudServiceQuerySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCloudServiceQuerySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudServiceQuerySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudServiceQuerySetQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudServiceQuerySetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudServiceQuerySetsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudServiceQuerySetStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_inventory_v1_cloud_service_query_set_proto_goTypes,
		DependencyIndexes: file_spaceone_api_inventory_v1_cloud_service_query_set_proto_depIdxs,
		EnumInfos:         file_spaceone_api_inventory_v1_cloud_service_query_set_proto_enumTypes,
		MessageInfos:      file_spaceone_api_inventory_v1_cloud_service_query_set_proto_msgTypes,
	}.Build()
	File_spaceone_api_inventory_v1_cloud_service_query_set_proto = out.File
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_rawDesc = nil
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_goTypes = nil
	file_spaceone_api_inventory_v1_cloud_service_query_set_proto_depIdxs = nil
}
