//A Post is a message published on a Board. It also provides notifications to Projects affected by the Post.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: spaceone/api/board/v1/post.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePostRequest_ResourceGroup int32

const (
	CreatePostRequest_RESOURCE_GROUP_NONE CreatePostRequest_ResourceGroup = 0
	CreatePostRequest_GLOBAL              CreatePostRequest_ResourceGroup = 1
	CreatePostRequest_DOMAIN              CreatePostRequest_ResourceGroup = 2
)

// Enum value maps for CreatePostRequest_ResourceGroup.
var (
	CreatePostRequest_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "GLOBAL",
		2: "DOMAIN",
	}
	CreatePostRequest_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"GLOBAL":              1,
		"DOMAIN":              2,
	}
)

func (x CreatePostRequest_ResourceGroup) Enum() *CreatePostRequest_ResourceGroup {
	p := new(CreatePostRequest_ResourceGroup)
	*p = x
	return p
}

func (x CreatePostRequest_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreatePostRequest_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_board_v1_post_proto_enumTypes[0].Descriptor()
}

func (CreatePostRequest_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_board_v1_post_proto_enumTypes[0]
}

func (x CreatePostRequest_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreatePostRequest_ResourceGroup.Descriptor instead.
func (CreatePostRequest_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{0, 0}
}

type UpdatePostRequest_ResourceGroup int32

const (
	UpdatePostRequest_RESOURCE_GROUP_NONE UpdatePostRequest_ResourceGroup = 0
	UpdatePostRequest_GLOBAL              UpdatePostRequest_ResourceGroup = 1
	UpdatePostRequest_DOMAIN              UpdatePostRequest_ResourceGroup = 2
)

// Enum value maps for UpdatePostRequest_ResourceGroup.
var (
	UpdatePostRequest_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "GLOBAL",
		2: "DOMAIN",
	}
	UpdatePostRequest_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"GLOBAL":              1,
		"DOMAIN":              2,
	}
)

func (x UpdatePostRequest_ResourceGroup) Enum() *UpdatePostRequest_ResourceGroup {
	p := new(UpdatePostRequest_ResourceGroup)
	*p = x
	return p
}

func (x UpdatePostRequest_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePostRequest_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_board_v1_post_proto_enumTypes[1].Descriptor()
}

func (UpdatePostRequest_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_board_v1_post_proto_enumTypes[1]
}

func (x UpdatePostRequest_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePostRequest_ResourceGroup.Descriptor instead.
func (UpdatePostRequest_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{1, 0}
}

type PostSearchQuery_ResourceGroup int32

const (
	PostSearchQuery_RESOURCE_GROUP_NONE PostSearchQuery_ResourceGroup = 0
	PostSearchQuery_GLOBAL              PostSearchQuery_ResourceGroup = 1
	PostSearchQuery_DOMAIN              PostSearchQuery_ResourceGroup = 2
)

// Enum value maps for PostSearchQuery_ResourceGroup.
var (
	PostSearchQuery_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "GLOBAL",
		2: "DOMAIN",
	}
	PostSearchQuery_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"GLOBAL":              1,
		"DOMAIN":              2,
	}
)

func (x PostSearchQuery_ResourceGroup) Enum() *PostSearchQuery_ResourceGroup {
	p := new(PostSearchQuery_ResourceGroup)
	*p = x
	return p
}

func (x PostSearchQuery_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostSearchQuery_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_board_v1_post_proto_enumTypes[2].Descriptor()
}

func (PostSearchQuery_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_board_v1_post_proto_enumTypes[2]
}

func (x PostSearchQuery_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostSearchQuery_ResourceGroup.Descriptor instead.
func (PostSearchQuery_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{4, 0}
}

type PostInfo_ResourceGroup int32

const (
	PostInfo_RESOURCE_GROUP_NONE PostInfo_ResourceGroup = 0
	PostInfo_GLOBAL              PostInfo_ResourceGroup = 1
	PostInfo_DOMAIN              PostInfo_ResourceGroup = 2
)

// Enum value maps for PostInfo_ResourceGroup.
var (
	PostInfo_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "GLOBAL",
		2: "DOMAIN",
	}
	PostInfo_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"GLOBAL":              1,
		"DOMAIN":              2,
	}
)

func (x PostInfo_ResourceGroup) Enum() *PostInfo_ResourceGroup {
	p := new(PostInfo_ResourceGroup)
	*p = x
	return p
}

func (x PostInfo_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostInfo_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_board_v1_post_proto_enumTypes[3].Descriptor()
}

func (PostInfo_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_board_v1_post_proto_enumTypes[3]
}

func (x PostInfo_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostInfo_ResourceGroup.Descriptor instead.
func (PostInfo_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{6, 0}
}

//	{
//	   "board_id": "board-123456789012",
//	   "category": "developer",
//	   "title": "title",
//	   "contents": "This is contents.",
//	   "files": ["file-123456789012"],
//	   "options": {"is_popup": true},
//	   "writer": "user1",
//	   "resource_group": "DOMAIN",
//	   "domain_id": "domain-123456789012"
//	}
type CreatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Contents string `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	// +optional
	Files []string `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	// +optional
	Options       *_struct.Struct                 `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	ResourceGroup CreatePostRequest_ResourceGroup `protobuf:"varint,6,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.board.v1.CreatePostRequest_ResourceGroup" json:"resource_group,omitempty"`
	// +optional
	Writer string `protobuf:"bytes,7,opt,name=writer,proto3" json:"writer,omitempty"`
	// +optional
	DomainId string `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	BoardId  string `protobuf:"bytes,22,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePostRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePostRequest) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *CreatePostRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CreatePostRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePostRequest) GetResourceGroup() CreatePostRequest_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return CreatePostRequest_RESOURCE_GROUP_NONE
}

func (x *CreatePostRequest) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *CreatePostRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CreatePostRequest) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

//	{
//	     "board_id": "board-123456789012",
//	     "post_id": "post-2118473ce15e",
//	     "category": "developer",
//	     "title": "title2",
//	     "contents": "this is contents2.",
//	     "options": {
//	         "is_popup": false,
//	         "is_pinned": true
//	     },
//	     "writer": "user1"
//	}
type UpdatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// +optional
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// +optional
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// +optional
	Contents string `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
	// +optional
	Files []string `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	// +optional
	Options *_struct.Struct `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	Writer        string                          `protobuf:"bytes,7,opt,name=writer,proto3" json:"writer,omitempty"`
	ResourceGroup UpdatePostRequest_ResourceGroup `protobuf:"varint,8,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.board.v1.UpdatePostRequest_ResourceGroup" json:"resource_group,omitempty"`
	BoardId       string                          `protobuf:"bytes,22,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *UpdatePostRequest) Reset() {
	*x = UpdatePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostRequest) ProtoMessage() {}

func (x *UpdatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{1}
}

func (x *UpdatePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *UpdatePostRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdatePostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePostRequest) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *UpdatePostRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *UpdatePostRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdatePostRequest) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *UpdatePostRequest) GetResourceGroup() UpdatePostRequest_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return UpdatePostRequest_RESOURCE_GROUP_NONE
}

func (x *UpdatePostRequest) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

type SendNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId string `protobuf:"bytes,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	PostId  string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{2}
}

func (x *SendNotificationRequest) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

func (x *SendNotificationRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

//	{
//	   "board_id": "board-b9aa34e65c60",
//	   "post_id": "post-2118473ce15e"
//	}
type PostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId string `protobuf:"bytes,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	PostId  string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *PostRequest) Reset() {
	*x = PostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRequest) ProtoMessage() {}

func (x *PostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRequest.ProtoReflect.Descriptor instead.
func (*PostRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{3}
}

func (x *PostRequest) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

func (x *PostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

//	{
//	   "board_id": "board-b9aa34e65c60",
//	   "query": {}
//	}
type PostSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	PostId string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// +optional
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	// +optional
	Writer string `protobuf:"bytes,4,opt,name=writer,proto3" json:"writer,omitempty"`
	// +optional
	IsPinned bool `protobuf:"varint,5,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"`
	// +optional
	IsPopup       bool                          `protobuf:"varint,6,opt,name=is_popup,json=isPopup,proto3" json:"is_popup,omitempty"`
	ResourceGroup PostSearchQuery_ResourceGroup `protobuf:"varint,8,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.board.v1.PostSearchQuery_ResourceGroup" json:"resource_group,omitempty"`
	// +optional
	BoardId string `protobuf:"bytes,22,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *PostSearchQuery) Reset() {
	*x = PostSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSearchQuery) ProtoMessage() {}

func (x *PostSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSearchQuery.ProtoReflect.Descriptor instead.
func (*PostSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{4}
}

func (x *PostSearchQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PostSearchQuery) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostSearchQuery) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PostSearchQuery) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *PostSearchQuery) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *PostSearchQuery) GetIsPopup() bool {
	if x != nil {
		return x.IsPopup
	}
	return false
}

func (x *PostSearchQuery) GetResourceGroup() PostSearchQuery_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return PostSearchQuery_RESOURCE_GROUP_NONE
}

func (x *PostSearchQuery) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

type PostStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *PostStatQuery) Reset() {
	*x = PostStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStatQuery) ProtoMessage() {}

func (x *PostStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStatQuery.ProtoReflect.Descriptor instead.
func (*PostStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{5}
}

func (x *PostStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

//	{
//	         "board_id": "board-123456789012",
//	         "post_id": "post-123456789012",
//	         "category": "developer",
//	         "title": "title",
//	         "contents": "This is contents.",
//	         "options": {
//	             "is_pinned": false,
//	             "is_popup": true
//	         },
//	         "view_count": 0,
//	         "writer": "user1",
//	         "domain_id": "domain-123456789012",
//	         "user_id": "user1@email.com",
//	         "created_at": "2022-01-01T01:06:23.732Z",
//	         "updated_at": "2022-01-01T01:06:23.732Z"
//	}
type PostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId        string                 `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Title         string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Contents      string                 `protobuf:"bytes,6,opt,name=contents,proto3" json:"contents,omitempty"`
	Options       *_struct.Struct        `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	ViewCount     int32                  `protobuf:"varint,8,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	Writer        string                 `protobuf:"bytes,9,opt,name=writer,proto3" json:"writer,omitempty"`
	Files         *_struct.ListValue     `protobuf:"bytes,11,opt,name=files,proto3" json:"files,omitempty"`
	ResourceGroup PostInfo_ResourceGroup `protobuf:"varint,12,opt,name=resource_group,json=resourceGroup,proto3,enum=spaceone.api.board.v1.PostInfo_ResourceGroup" json:"resource_group,omitempty"`
	DomainId      string                 `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	BoardId       string                 `protobuf:"bytes,22,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId        string                 `protobuf:"bytes,23,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PostInfo) Reset() {
	*x = PostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostInfo) ProtoMessage() {}

func (x *PostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostInfo.ProtoReflect.Descriptor instead.
func (*PostInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{6}
}

func (x *PostInfo) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PostInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostInfo) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *PostInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PostInfo) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *PostInfo) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *PostInfo) GetFiles() *_struct.ListValue {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *PostInfo) GetResourceGroup() PostInfo_ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return PostInfo_RESOURCE_GROUP_NONE
}

func (x *PostInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *PostInfo) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

func (x *PostInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PostInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

//	{
//	     "results": [
//	         {
//	             "board_id": "board-b9aa34e65c60",
//	             "post_id": "post-2118473ce15e",
//	             "category": "spaceone",
//	             "title": "title2",
//	             "contents": "this is contents2.",
//	             "options": {
//	                 "is_popup": false,
//	                 "is_pinned": true
//	             },
//	             "view_count": 3,
//	             "writer": "seolmin2",
//	             "files": ["file-123456789012"],
//	             "resource_group": "DOMAIN",
//	             "domain_id": "domain-58010aa2e451",
//	             "user_id": "user1@email.com",
//	             "created_at": "2022-06-13T01:06:23.732Z",
//	             "updated_at": "2022-06-13T01:06:23.732Z"
//	         },
//	         {
//	             "board_id": "board-b9aa34e65c60",
//	             "post_id": "post-532ae1191233",
//	             "category": "flower",
//	             "title": "작업공지",
//	             "contents": "This is description",
//	             "options": {
//	                 "is_pinned": true,
//	                 "is_popup": true
//	             },
//	             "writer": "권설민",
//	             "files": ["file-123456789022"],
//	             "resource_group": "DOMAIN",
//	             "user_id": "supervisor",
//	             "created_at": "2022-06-10T07:01:44.384Z",
//	             "updated_at": "2022-06-10T07:01:44.384Z"
//	         }
//	     ],
//	     "total_count": 2
//	}
type PostsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*PostInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PostsInfo) Reset() {
	*x = PostsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_board_v1_post_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsInfo) ProtoMessage() {}

func (x *PostsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_board_v1_post_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsInfo.ProtoReflect.Descriptor instead.
func (*PostsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_board_v1_post_proto_rawDescGZIP(), []int{7}
}

func (x *PostsInfo) GetResults() []*PostInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PostsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_board_v1_post_proto protoreflect.FileDescriptor

var file_spaceone_api_board_v1_post_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c,
	0x4f, 0x42, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x10, 0x02, 0x22, 0x97, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x5d, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x22, 0x4d, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x83,
	0x03, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x10, 0x02, 0x22, 0x4c, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0xb4, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x22, 0x67, 0x0a, 0x09, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0xab, 0x06, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x75, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a,
	0x01, 0x2a, 0x22, 0x15, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x73, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a,
	0x01, 0x2a, 0x22, 0x20, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x73, 0x74, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x69, 0x0a, 0x03,
	0x67, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x73, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x70, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6f, 0x73, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_board_v1_post_proto_rawDescOnce sync.Once
	file_spaceone_api_board_v1_post_proto_rawDescData = file_spaceone_api_board_v1_post_proto_rawDesc
)

func file_spaceone_api_board_v1_post_proto_rawDescGZIP() []byte {
	file_spaceone_api_board_v1_post_proto_rawDescOnce.Do(func() {
		file_spaceone_api_board_v1_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_board_v1_post_proto_rawDescData)
	})
	return file_spaceone_api_board_v1_post_proto_rawDescData
}

var file_spaceone_api_board_v1_post_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_spaceone_api_board_v1_post_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spaceone_api_board_v1_post_proto_goTypes = []interface{}{
	(CreatePostRequest_ResourceGroup)(0), // 0: spaceone.api.board.v1.CreatePostRequest.ResourceGroup
	(UpdatePostRequest_ResourceGroup)(0), // 1: spaceone.api.board.v1.UpdatePostRequest.ResourceGroup
	(PostSearchQuery_ResourceGroup)(0),   // 2: spaceone.api.board.v1.PostSearchQuery.ResourceGroup
	(PostInfo_ResourceGroup)(0),          // 3: spaceone.api.board.v1.PostInfo.ResourceGroup
	(*CreatePostRequest)(nil),            // 4: spaceone.api.board.v1.CreatePostRequest
	(*UpdatePostRequest)(nil),            // 5: spaceone.api.board.v1.UpdatePostRequest
	(*SendNotificationRequest)(nil),      // 6: spaceone.api.board.v1.SendNotificationRequest
	(*PostRequest)(nil),                  // 7: spaceone.api.board.v1.PostRequest
	(*PostSearchQuery)(nil),              // 8: spaceone.api.board.v1.PostSearchQuery
	(*PostStatQuery)(nil),                // 9: spaceone.api.board.v1.PostStatQuery
	(*PostInfo)(nil),                     // 10: spaceone.api.board.v1.PostInfo
	(*PostsInfo)(nil),                    // 11: spaceone.api.board.v1.PostsInfo
	(*_struct.Struct)(nil),               // 12: google.protobuf.Struct
	(*v1.Query)(nil),                     // 13: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),           // 14: spaceone.api.core.v1.StatisticsQuery
	(*_struct.ListValue)(nil),            // 15: google.protobuf.ListValue
	(*empty.Empty)(nil),                  // 16: google.protobuf.Empty
}
var file_spaceone_api_board_v1_post_proto_depIdxs = []int32{
	12, // 0: spaceone.api.board.v1.CreatePostRequest.options:type_name -> google.protobuf.Struct
	0,  // 1: spaceone.api.board.v1.CreatePostRequest.resource_group:type_name -> spaceone.api.board.v1.CreatePostRequest.ResourceGroup
	12, // 2: spaceone.api.board.v1.UpdatePostRequest.options:type_name -> google.protobuf.Struct
	1,  // 3: spaceone.api.board.v1.UpdatePostRequest.resource_group:type_name -> spaceone.api.board.v1.UpdatePostRequest.ResourceGroup
	13, // 4: spaceone.api.board.v1.PostSearchQuery.query:type_name -> spaceone.api.core.v1.Query
	2,  // 5: spaceone.api.board.v1.PostSearchQuery.resource_group:type_name -> spaceone.api.board.v1.PostSearchQuery.ResourceGroup
	14, // 6: spaceone.api.board.v1.PostStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	12, // 7: spaceone.api.board.v1.PostInfo.options:type_name -> google.protobuf.Struct
	15, // 8: spaceone.api.board.v1.PostInfo.files:type_name -> google.protobuf.ListValue
	3,  // 9: spaceone.api.board.v1.PostInfo.resource_group:type_name -> spaceone.api.board.v1.PostInfo.ResourceGroup
	10, // 10: spaceone.api.board.v1.PostsInfo.results:type_name -> spaceone.api.board.v1.PostInfo
	4,  // 11: spaceone.api.board.v1.Post.create:input_type -> spaceone.api.board.v1.CreatePostRequest
	5,  // 12: spaceone.api.board.v1.Post.update:input_type -> spaceone.api.board.v1.UpdatePostRequest
	6,  // 13: spaceone.api.board.v1.Post.send_notification:input_type -> spaceone.api.board.v1.SendNotificationRequest
	7,  // 14: spaceone.api.board.v1.Post.delete:input_type -> spaceone.api.board.v1.PostRequest
	7,  // 15: spaceone.api.board.v1.Post.get:input_type -> spaceone.api.board.v1.PostRequest
	8,  // 16: spaceone.api.board.v1.Post.list:input_type -> spaceone.api.board.v1.PostSearchQuery
	9,  // 17: spaceone.api.board.v1.Post.stat:input_type -> spaceone.api.board.v1.PostStatQuery
	10, // 18: spaceone.api.board.v1.Post.create:output_type -> spaceone.api.board.v1.PostInfo
	10, // 19: spaceone.api.board.v1.Post.update:output_type -> spaceone.api.board.v1.PostInfo
	16, // 20: spaceone.api.board.v1.Post.send_notification:output_type -> google.protobuf.Empty
	16, // 21: spaceone.api.board.v1.Post.delete:output_type -> google.protobuf.Empty
	10, // 22: spaceone.api.board.v1.Post.get:output_type -> spaceone.api.board.v1.PostInfo
	11, // 23: spaceone.api.board.v1.Post.list:output_type -> spaceone.api.board.v1.PostsInfo
	12, // 24: spaceone.api.board.v1.Post.stat:output_type -> google.protobuf.Struct
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spaceone_api_board_v1_post_proto_init() }
func file_spaceone_api_board_v1_post_proto_init() {
	if File_spaceone_api_board_v1_post_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_board_v1_post_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_board_v1_post_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_board_v1_post_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_board_v1_post_proto_goTypes,
		DependencyIndexes: file_spaceone_api_board_v1_post_proto_depIdxs,
		EnumInfos:         file_spaceone_api_board_v1_post_proto_enumTypes,
		MessageInfos:      file_spaceone_api_board_v1_post_proto_msgTypes,
	}.Build()
	File_spaceone_api_board_v1_post_proto = out.File
	file_spaceone_api_board_v1_post_proto_rawDesc = nil
	file_spaceone_api_board_v1_post_proto_goTypes = nil
	file_spaceone_api_board_v1_post_proto_depIdxs = nil
}
