// description of dashboard
syntax = "proto3";

package spaceone.api.dashboard.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/dashboard/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service Dashboard{

  rpc create(CreateDashboardRequest) returns (DashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/create"
      body: "*"
    };
  }

  rpc update (UpdateDashboardRequest) returns (DashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/update"
      body: "*"
    };
  }

  rpc delete (DashboardRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/delete"
      body: "*"
    };
  }

  rpc get (DashboardRequest) returns (DashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/get"
      body: "*"
    };
  }

  rpc delete_version (DashboardVersionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/delete-version"
      body: "*"
    };
  }

  rpc revert_version (DashboardVersionRequest) returns (DashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/revert-version"
      body: "*"
    };
  }

  rpc get_version (DashboardVersionRequest) returns (DashboardVersionInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/get-version"
      body: "*"
    };
  }

  rpc list_versions (DashboardVersionSearchQuery) returns (DashboardVersionsInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/list-versions"
      body: "*"
    };
  }

  rpc list (DashboardQuery) returns (DashboardsInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/list"
      body: "*"
    };
  }

  rpc stat (DashboardStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/dashboard/v1/dashboard/stat"
      body: "*"
    };
  }
}

message CreateDashboardRequest {

  enum DashboardType {
    DASHBOARD_TYPE_NONE = 0;
    PUBLIC = 1;
    PRIVATE = 2;
  }

  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  string name = 1;
  DashboardType dashboard_type = 2;
  // +optional
  google.protobuf.ListValue layouts = 3;
  // +optional
  google.protobuf.Struct variables = 5;
  // +optional
  google.protobuf.Struct settings = 6;
  // +optional
  google.protobuf.Struct variables_schema = 7;
  // +optional
  google.protobuf.ListValue labels = 10;
  // +optional
  google.protobuf.Struct tags = 11;
  ResourceGroup resource_group = 20;
  // +optional
  string project_id = 22;
}

message UpdateDashboardRequest {
  string dashboard_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.ListValue layouts = 3;
  // +optional
  google.protobuf.Struct variables = 5;
  // +optional
  google.protobuf.Struct settings = 6;
  // +optional
  google.protobuf.Struct variables_schema = 7;
  // +optional
  google.protobuf.ListValue labels = 10;
  // +optional
  google.protobuf.Struct tags = 11;
}

message DashboardRequest {
  string dashboard_id = 1;
}

message DashboardVersionRequest {
  string dashboard_id = 1;
  int32 version = 4;
}

message DashboardVersionSearchQuery {
  // +optional
  spaceone.api.core.v1.Query query = 1;
  string dashboard_id = 2;
  // +optional
  int32 version = 3;
}

message DashboardQuery {

  enum DashboardType {
    DASHBOARD_TYPE_NONE = 0;
    PUBLIC = 1;
    PRIVATE = 2;
  }

  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  // +optional
  spaceone.api.core.v1.Query query = 1;
  // +optional
  string dashboard_id = 2;
  // +optional
  string name = 3;
  // +optional
  DashboardType dashboard_type = 4;
  // +optional
  string user_id = 10;
  // +optional
  ResourceGroup resource_group = 11;
  // +optional
  string project_id = 12;
  // +optional
  string workspace_id = 13;
}

message DashboardInfo {

  enum DashboardType {
    DASHBOARD_TYPE_NONE = 0;
    PUBLIC = 1;
    PRIVATE = 2;
  }

  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  string dashboard_id = 1;
  string name = 2;
  DashboardType dashboard_type = 3;
  int32 version = 4;
  google.protobuf.ListValue layouts = 5;
  google.protobuf.Struct variables = 6;
  google.protobuf.Struct settings = 7;
  google.protobuf.Struct variables_schema = 8;
  google.protobuf.ListValue labels = 10;
  google.protobuf.Struct tags = 11;
  ResourceGroup resource_group = 12;
  string user_id = 18;
  string project_id = 19;
  string workspace_id = 20;
  string domain_id = 21;
  string created_at = 22;
  string updated_at = 23;
}

message DashboardsInfo {
  repeated DashboardInfo results = 1;
  int32 total_count = 2;
}

message DashboardStatQuery {
  spaceone.api.core.v1.StatisticsQuery query = 1;
}


message DashboardVersionInfo {
  string dashboard_id = 1;
  int32 version = 2;
  bool latest = 3;
  google.protobuf.ListValue layouts = 5;
  google.protobuf.Struct variables = 6;
  google.protobuf.Struct settings = 7;
  google.protobuf.Struct variables_schema = 8;
  string domain_id = 21;
  string created_at = 22;
}

message DashboardVersionsInfo {
  repeated DashboardVersionInfo results = 1;
  int32 total_count = 2;
}