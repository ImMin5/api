// description of dashboard
syntax = "proto3";

package spaceone.api.dashboard.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/dashboard/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service ProjectDashboard{

    rpc create(CreateProjectDashboardRequest) returns (ProjectDashboardInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/create"
            body: "*"
        };
    }

    rpc update (UpdateProjectDashboardRequest) returns (ProjectDashboardInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/update"
            body: "*"
        };
    }

    rpc delete (ProjectDashboardRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/delete"
            body: "*"
        };
    }

    rpc get (GetProjectDashboardRequest) returns (ProjectDashboardInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/get"
            body: "*"
        };
    }

    rpc delete_version (ProjectDashboardVersionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/delete-version"
            body: "*"
        };
    }

    rpc revert_version (ProjectDashboardVersionRequest) returns (ProjectDashboardInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/revert-version"
            body: "*"
        };
    }

    rpc get_version (GetProjectDashboardVersionRequest) returns (ProjectDashboardVersionInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/get-version"
            body: "*"
        };
    }

    rpc list_versions (ProjectDashboardVersionQuery) returns (ProjectDashboardVersionsInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/list-versions"
            body: "*"
        };
    }

    rpc list (ProjectDashboardQuery) returns (ProjectDashboardsInfo) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/list"
            body: "*"
        };
    }

    rpc stat (ProjectDashboardStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/dashboard/v1/project-dashboard/stat"
            body: "*"
        };
    }
}

message CreateProjectDashboardRequest {
    enum Viewers {
        VIEWERS_NONE = 0;
        PUBLIC = 1;
        PRIVATE = 2;
    }
    string project_id = 1;
    string name = 2;
    Viewers viewers = 3;
    // +optional
    google.protobuf.ListValue layouts = 4;
    // +optional
    google.protobuf.Struct variables = 5;
    // +optional
    google.protobuf.Struct settings = 6;
    // +optional
    google.protobuf.Struct variables_schema = 7;
    // +optional
    google.protobuf.ListValue labels = 10;
    // +optional
    google.protobuf.Struct tags = 11;
    string domain_id = 21;
}

message UpdateProjectDashboardRequest {
    string project_dashboard_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.ListValue layouts = 3;
    // +optional
    google.protobuf.Struct variables = 5;
    // +optional
    google.protobuf.Struct settings = 6;
    // +optional
    google.protobuf.Struct variables_schema = 7;
    // +optional
    google.protobuf.ListValue labels = 10;
    // +optional
    google.protobuf.Struct tags = 11;
    string domain_id = 21;
}

message ProjectDashboardRequest {
    string project_dashboard_id = 1;
    string domain_id = 2;
}

message GetProjectDashboardRequest {
    string project_dashboard_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

message ProjectDashboardVersionRequest {
    string project_dashboard_id = 1;
    int32 version = 2;
    string domain_id = 11;
}

message GetProjectDashboardVersionRequest {
    string project_dashboard_id = 1;
    int32 version = 2;
    string domain_id = 10;
    // +optional
    repeated string only = 11;
}

message ProjectDashboardVersionQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    string project_dashboard_id = 2;
    // +optional
    int32 version = 3;
    string domain_id = 10;
}

message ProjectDashboardQuery {
    enum Viewers {
        VIEWERS_NONE = 0;
        PUBLIC = 1;
        PRIVATE = 2;
    }
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string project_dashboard_id = 2;
    // +optional
    string project_id = 3;
    // +optional
    string name = 4;
    // +optional
    Viewers viewers = 5;
    // +optional
    string user_id = 10;
    string domain_id = 11;
}

message ProjectDashboardInfo {
    enum Viewers {
        VIEWERS_NONE = 0;
        PUBLIC = 1;
        PRIVATE = 2;
    }
    string project_dashboard_id = 1;
    string project_id = 2;
    string name = 3;
    Viewers viewers = 4;
    int32 version = 5;
    google.protobuf.ListValue layouts = 6;
    google.protobuf.Struct variables = 7;
    google.protobuf.Struct settings = 8;
    google.protobuf.Struct variables_schema = 9;
    google.protobuf.ListValue labels = 10;
    google.protobuf.Struct tags = 11;
    string user_id = 20;
    string domain_id = 22;
    string created_at = 23;
    string updated_at = 24;
}

message ProjectDashboardsInfo {
    repeated ProjectDashboardInfo results = 1;
    int32 total_count = 2;
}

message ProjectDashboardStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}


message ProjectDashboardVersionInfo {
    string project_dashboard_id = 1;
    int32 version = 2;
    bool latest = 3;
    google.protobuf.ListValue layouts = 5;
    google.protobuf.Struct variables = 6;
    google.protobuf.Struct settings = 7;
    google.protobuf.Struct variables_schema = 8;
    string domain_id = 21;
    string created_at = 22;
}

message ProjectDashboardVersionsInfo {
    repeated ProjectDashboardVersionInfo results = 1;
    int32 total_count = 2;
}