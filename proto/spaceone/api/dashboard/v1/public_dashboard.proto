// description of dashboard
syntax = "proto3";

package spaceone.api.dashboard.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/dashboard/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";

service PublicDashboard{

  rpc create(CreatePublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/create"
      body: "*"
    };
  }

  rpc update (UpdatePublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/update"
      body: "*"
    };
  }

  rpc change_folder (ChangeFolderPublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/change-folder"
      body: "*"
    };
  }

  rpc share (SharePublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/share"
      body: "*"
    };
  }

  rpc unshare (PublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/unshare"
      body: "*"
    };
  }

  rpc delete (PublicDashboardRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/delete"
      body: "*"
    };
  }

  rpc get (PublicDashboardRequest) returns (PublicDashboardInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/get"
      body: "*"
    };
  }

  rpc list (PublicDashboardQuery) returns (PublicDashboardsInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/list"
      body: "*"
    };
  }

  rpc stat (PublicDashboardStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/dashboard/v1/public-dashboard/stat"
      body: "*"
    };
  }
}

enum DashboardScope {
  SCOPE_NONE = 0;
  WORKSPACE = 1;
  PROJECT = 2;
}

message Layout {
  string name = 1;
  google.protobuf.Struct options = 2;
  google.protobuf.ListValue widgets = 3;
}

message CreatePublicDashboardRequest {
  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  string name = 1;
  // +optional
  string description = 2;
  // +optional
  repeated Layout layouts = 3;
  // +optional
  google.protobuf.Struct vars = 4;
  // +optional
  google.protobuf.Struct vars_schema = 5;
  // +optional
  google.protobuf.Struct options = 6;
  // +optional
  google.protobuf.Struct domain_options = 7;
  // +optional
  google.protobuf.Struct variables = 8;
  // +optional
  google.protobuf.Struct variables_schema = 9;
  // +optional
  google.protobuf.ListValue labels = 10;
  // +optional
  google.protobuf.Struct tags = 11;
  ResourceGroup resource_group = 20;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 22;
  // +optional
  string folder_id = 23;
}

message UpdatePublicDashboardRequest {
  string dashboard_id = 1;
  // +optional
  string name = 2;
  // +optional
  string description = 3;
  // +optional
  repeated Layout layouts = 4;
  // +optional
  google.protobuf.Struct vars = 5;
  // +optional
  google.protobuf.Struct vars_schema = 6;
  // +optional
  google.protobuf.Struct options = 7;
  // +optional
  google.protobuf.Struct domain_options = 8;
  // +optional
  google.protobuf.Struct variables = 9;
  // +optional
  google.protobuf.Struct variables_schema = 10;
  // +optional
  google.protobuf.ListValue labels = 11;
  // +optional
  google.protobuf.Struct tags = 12;
  // +optional
  string folder_id = 21;
}

message ChangeFolderPublicDashboardRequest {
  string dashboard_id = 1;
  // +optional
  string folder_id = 21;
}

message SharePublicDashboardRequest {
  string dashboard_id = 1;
  // +optional
  DashboardScope scope = 2;
}

message PublicDashboardRequest {
  string dashboard_id = 1;
}

message PublicDashboardQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string dashboard_id = 2;
  // +optional
  string name = 3;
  // +optional
  bool shared = 4;
  // +optional
  DashboardScope scope = 5;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 22;
  // +optional
  string folder_id = 23;
}

message PublicDashboardInfo {
  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  string dashboard_id = 1;
  string name = 2;
  string description = 3;
  string version = 4;
  repeated Layout layouts = 5;
  google.protobuf.Struct vars = 6;
  google.protobuf.Struct vars_schema = 7;
  google.protobuf.Struct options = 8;
  google.protobuf.Struct domain_options = 9;
  google.protobuf.Struct variables = 10;
  google.protobuf.Struct variables_schema = 11;
  google.protobuf.ListValue labels = 12;
  google.protobuf.Struct tags = 13;

  bool shared = 18;
  DashboardScope scope = 19;

  ResourceGroup resource_group = 20;
  string domain_id = 21;
  string workspace_id = 22;
  string project_id = 23;
  string folder_id = 24;

  string created_at = 31;
  string updated_at = 32;
}

message PublicDashboardsInfo {
  repeated PublicDashboardInfo results = 1;
  int32 total_count = 2;
}

message PublicDashboardStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}