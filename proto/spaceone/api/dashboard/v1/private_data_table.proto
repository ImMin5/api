// description of data table
syntax = "proto3";

package spaceone.api.dashboard.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/dashboard/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/dashboard/v1/public_data_table.proto";

service PrivateDataTable{

  rpc add(AddPrivateDataTableRequest) returns (PrivateDataTableInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/add"
      body: "*"
    };
  }

  rpc transform(TransformPrivateDataTableRequest) returns (PrivateDataTableInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/transform"
      body: "*"
    };
  }

  rpc update (UpdatePrivateDataTableRequest) returns (PrivateDataTableInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/update"
      body: "*"
    };
  }

  rpc delete (PrivateDataTableRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/delete"
      body: "*"
    };
  }

  rpc load (LoadPrivateDataTableRequest) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/load"
      body: "*"
    };
  }

  rpc get (PrivateDataTableRequest) returns (PrivateDataTableInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/get"
      body: "*"
    };
  }

  rpc list (PrivateDataTableQuery) returns (PrivateDataTablesInfo) {
    option (google.api.http) = {
      post: "/dashboard/v1/private-data-table/list"
      body: "*"
    };
  }
}

message AddPrivateDataTableRequest {
  string widget_id = 1;
  // +optional
  string name = 2;
  spaceone.api.dashboard.v1.SourceType source_type = 3;
  spaceone.api.dashboard.v1.AddOptions options = 4;
  // +optional
  google.protobuf.Struct vars = 5;
  // +optional
  google.protobuf.Struct tags = 6;
}

message TransformPrivateDataTableRequest {
  string widget_id = 1;
  // +optional
  string name = 2;
  spaceone.api.dashboard.v1.Operator operator = 3;
  spaceone.api.dashboard.v1.TransformOptions options = 4;
  // +optional
  google.protobuf.Struct vars = 5;
  // +optional
  google.protobuf.Struct tags = 6;
}

message UpdatePrivateDataTableRequest {
  string data_table_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct options = 3;
  // +optional
  google.protobuf.Struct vars = 4;
  // +optional
  google.protobuf.Struct tags = 5;
}

message PrivateDataTableRequest {
  string data_table_id = 1;
}

message LoadPrivateDataTableRequest {
  enum Granularity{
    GRANULARITY_NONE = 0;
    DAILY = 1;
    MONTHLY = 2;
    YEARLY = 3;
  }

  string data_table_id = 1;
  Granularity granularity = 2;
  // +optional
  string start = 3;
  // +optional
  string end = 4;
  // +optional
  repeated spaceone.api.core.v2.Sort sort = 5;
  // +optional
  spaceone.api.core.v2.Page page = 6;
  // +optional
  google.protobuf.Struct vars = 7;
}

message PrivateDataTableQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  string widget_id = 2;
  // +optional
  string data_table_id = 3;
  // +optional
  string name = 4;
  // +optional
  spaceone.api.dashboard.v1.DataType data_type = 5;
  // +optional
  spaceone.api.dashboard.v1.SourceType source_type = 6;
  // +optional
  spaceone.api.dashboard.v1.Operator operator = 7;
}

message PrivateDataTableInfo {
  enum ResourceGroup {
    RESOURCE_GROUP_NONE = 0;
    DOMAIN = 1;
    WORKSPACE = 2;
    PROJECT = 3;
  }

  enum State {
    STATE_NONE = 0;
    AVAILABLE = 1;
    UNAVAILABLE = 2;
  }

  string data_table_id = 1;
  string name = 2;
  State state = 3;
  spaceone.api.dashboard.v1.DataType data_type = 4;
  spaceone.api.dashboard.v1.SourceType source_type = 5;
  spaceone.api.dashboard.v1.Operator operator = 6;
  google.protobuf.Struct options = 7;
  google.protobuf.Struct tags = 8;
  google.protobuf.Struct labels_info = 9;
  google.protobuf.Struct data_info = 10;
  repeated string sort_keys = 11;
  string error_message = 12;

  string domain_id = 21;
  string user_id = 22;
  string dashboard_id = 23;
  string widget_id = 24;

  string created_at = 31;
  string updated_at = 32;
}

message PrivateDataTablesInfo {
  repeated PrivateDataTableInfo results = 1;
  int32 total_count = 2;
}