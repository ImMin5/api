// A DataSourceAccount is a resource that for routing cost data from a specific account to a workspace, project, service account.
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";


service DataSourceAccount {
  // Update a DataSourceAccount with the specified DataSourceAccount ID related to the DataSource.
  rpc update (UpdateDataSourceAccountRequest) returns (DataSourceAccountInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/update"
      body: "*"
    };
  }

  rpc reset (ResetDataSourceAccountRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/reset"
      body: "*"
    };
  }

  // Get a DataSourceAccount with the specified DataSourceAccount ID related to the DataSource.
  rpc get (DataSourceAccountRequest) returns (DataSourceAccountInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/get"
      body: "*"
    };
  }

  rpc list (DataSourceAccountQuery) returns (DataSourceAccountsInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/list"
      body: "*"
    };
  }

  rpc analyze (DataSourceAccountAnalyzeQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/analyze"
      body: "*"
    };
  }

  rpc stat (DataSourceAccountStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/data-source-account/stat"
      body: "*"
    };
  }
}

message UpdateDataSourceAccountRequest{
  string data_source_id = 1;
  // account_id is the unique identifier of each CSP account.(e.g. Azure Tenant ID)
  string account_id = 2;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 22;
  // +optional
  string service_account_id = 23;
}

message ResetDataSourceAccountRequest {
  string data_source_id = 1;
  // +optional
  string account_id = 2;
}

message DataSourceAccountRequest {
  string data_source_account_id = 1;
  string account_id = 2;
}


message DataSourceAccountQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string data_source_id = 2;
  // +optional
  string account_id = 3;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 22;
  // +optional
  string service_account_id = 23;
}

message DataSourceAccountInfo {
  string account_id = 1;
  string data_source_id = 2;
  string name = 3;
  bool is_sync = 4;
  string domain_id = 21;
  string workspace_id = 22;
  string v_workspace_id = 23;
  string created_at = 31;
  string updated_at = 32;
  string last_synced_at = 33;
}

message DataSourceAccountsInfo {
  repeated DataSourceAccountInfo results = 1;
  int32 total_count = 2;

}

message DataSourceAccountAnalyzeQuery {
  spaceone.api.core.v2.TimeSeriesAnalyzeQuery query = 1;
  string data_source_id = 2;
  string account_id = 3;
  string workspace_id = 21;
}

message DataSourceAccountStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}