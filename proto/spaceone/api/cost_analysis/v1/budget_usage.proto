syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "dist/go";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service BudgetUsage {
    /*
    desc: Gets a list of all BudgetUsages. You can use a query to get a filtered list of BudgetUsages.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "budget_id": "budget-abb377eb9e8b",
                "name": "Cloudforet-Budget3",
                "date": "2022-01",
                "usd_cost": 7671.164,
                "limit": 10000.0,
                "domain_id": "domain-58010aa2e451",
                "updated_at": "2022-07-19T04:26:08.099Z"
            },
            {
                "budget_id": "budget-abb377eb9e8b",
                "name": "Cloudforet-Budget3",
                "date": "2022-02",
                "usd_cost": 5931.771,
                "limit": 11000.0,
                "domain_id": "domain-58010aa2e451",
                "updated_at": "2022-07-19T04:26:08.105Z"
            }
        ],
        "total_count": 12
      }
    */
    rpc list (BudgetUsageQuery) returns (BudgetUsagesInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/budget/{budget_id}/usage"
            additional_bindings {
                post: "/cost-analysis/v1/budget/{budget_id}/usage/search"
            }
        };
    }
    rpc analyze (BudgetUsageAnalyzeQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/budget/usage/analyze" };
    }
    rpc stat (BudgetUsageStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/budget/usage/stat" };
    }
}

message BudgetUsageQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string budget_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string date = 4;
    // is_required: true
    string domain_id = 11;
}

message BudgetUsageInfo {
    string budget_id = 1;
    string name = 2;
    string date = 3;
    float usd_cost = 5;
    float limit = 6;
    google.protobuf.Struct cost_types = 7;
    string domain_id = 11;
    string updated_at = 21;
}

message BudgetUsagesInfo {
    repeated BudgetUsageInfo results = 1;
    int32 total_count = 2;
}

message BudgetUsageAnalyzeQuery {
    // is_required: true
    spaceone.api.core.v1.TimeSeriesAnalyzeQuery query = 1;
    // is_required: true
    string domain_id = 2;
}

message BudgetUsageStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}
