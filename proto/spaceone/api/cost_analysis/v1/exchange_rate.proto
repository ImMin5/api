// An ExchangeRate is a resource defining the exchange rate of currencies. This resource can set a custom exchange rate for a specific domain, separately from the exchange rate of the default domain set in `config`.
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/api/annotations.proto";


service ExchangeRate {
    
    // Overrides a value of a specific ExchangeRate. This method is used to change the ExchangeRate in a specific domain. You can set the `currency` and `rate` of the resource.
    rpc set (SetExchangeRateRequest) returns (ExchangeRateInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/set"
            body: "*"
        };
    }
    
    // Resets a value of a specific ExchangeRate and changes the ExchangeRate to the ExchangeRate of the `default` domain.
    rpc reset (ExchangeRateRequest) returns (ExchangeRateInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/reset"
            body: "*"
        };
    }
    
    rpc enable (ExchangeRateRequest) returns (ExchangeRateInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/enable"
            body: "*"
        };
    }
    
    rpc disable (ExchangeRateRequest) returns (ExchangeRateInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/disable"
            body: "*"
        };
    }
    
    // Gets a specific ExchangeRate. Prints detailed information about the ExchangeRate, including  `currency` and `rate`.
    rpc get (ExchangeRateRequest) returns (ExchangeRateInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/get"
            body: "*"
        };
    }
    
    // Gets a list of all ExchangeRates. You can use a query to get a filtered list of ExchangeRates.
    rpc list (ExchangeRateQuery) returns (ExchangeRatesInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/exchange-rate/list"
            body: "*"
        };
    }
}

//{
//    "currency": "KRW",
//    "rate": 1300
//}
message SetExchangeRateRequest {
    string currency = 1;
    float rate = 2;
    string domain_id = 12;
}

//{
//    "currency": "KRW"
//}
message ExchangeRateRequest {
    string currency = 1;
    string domain_id = 2;
}

//{
//
//}
message ExchangeRateQuery {
    string domain_id = 11;
}

//{
//    "currency": "KRW",
//    "rate": 1300.0,
//    "state": "ENABLED",
//    "is_default": true
//}
message ExchangeRateInfo {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string currency = 1;
    float rate = 2;
    State state = 3;
    bool is_default = 4;
    string domain_id = 11;
}

//{
//    "results": [
//        {
//            "currency": "JPY",
//            "rate": 129.8,
//            "state": "ENABLED",
//            "is_default": true,
//            "domain_id": "domain-58010aa2e451"
//        },
//        {
//            "currency": "KRW",
//            "rate": 1242.7,
//            "state": "ENABLED",
//            "is_default": true,
//            "domain_id": "domain-58010aa2e451"
//        }
//    ],
//    "total_count": 2
//}
message ExchangeRatesInfo {
    repeated ExchangeRateInfo results = 1;
    int32 total_count = 2;
}
