syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Schedule {
    rpc create (CreateScheduleRequest) returns (ScheduleInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/create"
            body: "*"
        };
    }
    rpc update (UpdateScheduleRequest) returns (ScheduleInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/update"
            body: "*"
        };
    }
    rpc enable (ScheduleRequest) returns (ScheduleInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/enable"
            body: "*"
        };
    }
    rpc disable (ScheduleRequest) returns (ScheduleInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/disable"
            body: "*"
        };
    }
    rpc delete (ScheduleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/delete"
            body: "*"
        };
    }
    rpc get (GetScheduleRequest) returns (ScheduleInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/get"
            body: "*"
        };
    }
    rpc list (ScheduleQuery) returns (SchedulesInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/list"
            body: "*"
        };
    }
    rpc stat (ScheduleStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/schedule/stat"
            body: "*"
        };
    }
}

message Scheduled {
    string cron = 1;
    int32 interval = 2;
    repeated int32 minutes = 3;
    repeated int32 hours = 4;
}

message CreateScheduleRequest {
    // +optional
    string name = 1;
    Scheduled schedule = 3;
    // +optional
    google.protobuf.Struct options = 4;
    // +optional
    google.protobuf.Struct tags = 6;
    string data_source_id = 11;
    string domain_id = 12;
}

message UpdateScheduleRequest {
    string schedule_id = 1;
    // +optional
    string name = 2;
    // +optional
    Scheduled schedule = 3;
    // +optional
    google.protobuf.Struct options = 4;
    // +optional
    google.protobuf.Struct tags = 5;
    string domain_id = 11;
}

message ScheduleRequest {
    string schedule_id = 1;
    string domain_id = 2;
}

message GetScheduleRequest {
    string schedule_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

message ScheduleQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string schedule_id = 2;
    // +optional
    string name = 3;
    // +optional
    string state = 4;
    // +optional
    string data_source_id = 5;
    string domain_id = 11;
}

message ScheduleInfo {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string schedule_id = 1;
    string name = 2;
    State state = 3;
    Scheduled schedule = 4;
    google.protobuf.Struct options = 5;
    google.protobuf.Struct tags = 6;
    string data_source_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string last_scheduled_at = 22;
}

message SchedulesInfo {
    repeated ScheduleInfo results = 1;
    int32 total_count = 2;
}

message ScheduleStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}