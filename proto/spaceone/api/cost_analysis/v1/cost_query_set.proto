/*
desc: A CostQuerySet is a set of saved queries a User frequently uses as a setting.
*/
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CostQuerySet {
    /*
    desc: Creates a new CostQuerySet. You can make your own custom query that meets your needs, and input it as an `option` parameter of the resource. Queries such as `group_by` and `granularity` are provided by default.
    request_example: >-
      {
        "name": "project_provider_region",
        "options": {
            "primary_group_by": "project_id",
            "filters": {},
            "period": {
                "end": "2022-07-31T23:59:59Z",
                "start": "2022-07-01T00:00:00Z"
            },
            "group_by": [
                "project_id",
                "provider",
                "region_code"
            ],
            "stack": false,
            "granularity": "ACCUMULATED"}
      }
    response_example: >-
      {
        "cost_query_set_id": "query-76a58ea5d02c",
        "name": "project_provider_region",
        "options": {
            "group_by": [
                "project_id",
                "provider",
                "region_code"
            ],
            "filters": {},
            "primary_group_by": "project_id",
            "period": {
                "end": "2022-07-31T23:59:59Z",
                "start": "2022-07-01T00:00:00Z"
            },
            "stack": false,
            "granularity": "ACCUMULATED"
        },
        "tags": {},
        "user_id": "test@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T06:11:03.701Z",
        "updated_at": "2022-07-19T06:11:03.701Z"
      }
    */
    rpc create (CreateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/cost-query-sets" };
    }
    /*
    desc: Updates a specific CostQuerySet. You can make changes in the details of queries.
    request_example: >-
      {
        "cost_query_set_id": "query-76a58ea5d02c",
        "options": {
            "stack": false,
            "filters": {},
            "period": {
                "start": "2022-07-01T00:00:00Z",
                "end": "2022-07-31T23:59:59Z"
            },
            "group_by": [
                "project_id",
                "provider",
                "region_code",
                "product"
            ],
            "granularity": "ACCUMULATED",
            "primary_group_by": "project_id"
        }
      }
    response_example: >-
      {
        "cost_query_set_id": "query-76a58ea5d02c",
        "name": "project_provider_region",
        "options": {
            "primary_group_by": "project_id",
            "stack": false,
            "period": {
                "end": "2022-07-31T23:59:59Z",
                "start": "2022-07-01T00:00:00Z"
            },
            "filters": {},
            "granularity": "ACCUMULATED",
            "group_by": [
                "project_id",
                "provider",
                "region_code",
                "product"
            ]
        },
        "tags": {},
        "user_id": "test@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T06:11:03.701Z",
        "updated_at": "2022-07-19T06:11:03.701Z"
      }
    */
    rpc update (UpdateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    /*
    desc: Deletes a specific CostQuerySet. You must specify the `cost_query_set_id` of the CostQuerySet to delete.
    request_example: >-
      {
        "cost_query_set_id": "query-16ae671dc8fb"
      }
    */
    rpc delete (CostQuerySetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    /*
    desc: Gets a specific CostQuerySet. Prints detailed information about the CostQuerySet, including the details of queries.
    request_example: >-
      {
        "cost_query_set_id": "query-16ae671dc8fb"
      }
    response_example: >-
      {
        "cost_query_set_id": "query-16ae671dc8fb",
        "name": "3 month product pie chart",
        "options": {
            "group_by": [
                "product"
            ],
            "period": {
                "start": "2022-01-01",
                "end": "2022-03-31"
            },
            "primary_group_by": "product",
            "stack": false,
            "filters": {},
            "granularity": "ACCUMULATED"
        },
        "tags": {},
        "user_id": "test1@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-03-08T03:37:31.404Z",
        "updated_at": "2022-03-08T03:37:31.404Z"
      }
    */
    rpc get (GetCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    /*
    desc: Gets a list of all CostQuerySets. You can use a query to get a filtered list of CostQuerySets.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "cost_query_set_id": "query-16ae671dc8fb",
                "name": "3 month product pie chart",
                "options": {
                    "primary_group_by": "product",
                    "granularity": "ACCUMULATED",
                    "stack": false,
                    "filters": {},
                    "period": {
                        "end": "2022-03-31",
                        "start": "2022-01-01"
                    },
                    "group_by": [
                        "product"
                    ]
                },
                "tags": {},
                "user_id": "yuda@mz.co.kr",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-03-08T03:37:31.404Z",
                "updated_at": "2022-03-08T03:37:31.404Z"
            },
            {
                "cost_query_set_id": "query-d90addf25e4b",
                "name": "6 month project group",
                "options": {
                    "primary_group_by": "project_group_id",
                    "period": {
                        "start": "2021-10-01",
                        "end": "2022-03-31"
                    },
                    "stack": false,
                    "group_by": [
                        "project_group_id"
                    ],
                    "granularity": "MONTHLY",
                    "filters": {}
                },
                "tags": {},
                "user_id": "yuda@mz.co.kr",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-03-14T09:29:54.306Z",
                "updated_at": "2022-03-14T09:29:54.306Z"
            }
        ],
        "total_count": 34
      }
    */
    rpc list (CostQuerySetQuery) returns (CostQuerySetsInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/cost-query-sets"
            additional_bindings {
                post: "/cost-analysis/v1/cost-query-sets/search"
            }
        };
    }
    rpc stat (CostQuerySetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/cost-query-sets/stat" };
    }
}

message CreateCostQuerySetRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message UpdateCostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message CostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetCostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message CostQuerySetQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string cost_query_set_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string user_id = 4;
    // is_required: true
    string domain_id = 11;
}

message CostQuerySetInfo {
    string cost_query_set_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct tags = 4;
    string user_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string updated_at = 22;
}

message CostQuerySetsInfo {
    repeated CostQuerySetInfo results = 1;
    int32 total_count = 2;
}

message CostQuerySetStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}