// A CostQuerySet is a set of saved queries a User frequently uses as a setting.
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CostQuerySet {
    
    // Creates a new CostQuerySet. You can make your own custom query that meets your needs, and input it as an `option` parameter of the resource. Queries such as `group_by` and `granularity` are provided by default.
    rpc create (CreateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-set/create",
            body: "*"
        };
    }
    
    // Updates a specific CostQuerySet. You can make changes in the details of queries.
    rpc update (UpdateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-set/update",
            body: "*"
        };
    }
    
    // Deletes a specific CostQuerySet. You must specify the `cost_query_set_id` of the CostQuerySet to delete.
    rpc delete (CostQuerySetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-set/delete",
            body: "*"
        };
    }
    
    // Gets a specific CostQuerySet. Prints detailed information about the CostQuerySet, including the details of queries.
    rpc get (GetCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-set/get",
            body: "*"
        };
    }
    
    // Gets a list of all CostQuerySets. You can use a query to get a filtered list of CostQuerySets.
    rpc list (CostQuerySetQuery) returns (CostQuerySetsInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-sets/list",
            body: "*"
        };
    }

    rpc stat (CostQuerySetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost-query-sets/stat",
            body: "*"
        };
    }
}

//{
//        "data_source_id": "ds-085d1e872789",
//        "name": "project_provider_region",
//        "options": {}
//}
message CreateCostQuerySetRequest {
    string data_source_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string domain_id = 11;
}

//{
//        "cost_query_set_id": "query-76a58ea5d02c",
//        "name": "project_provider_region",
//        "options": {},
//        "tags": {},
//        "user_id": "test@cloudforet.io",
//        "domain_id": "domain-58010aa2e451",
//        "created_at": "2022-07-19T06:11:03.701Z",
//        "updated_at": "2022-07-19T06:11:03.701Z"
//}
message UpdateCostQuerySetRequest {
    
    string cost_query_set_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct options = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    
    string domain_id = 11;
}

//{
//    "cost_query_set_id": "query-16ae671dc8fb",
//     "domain_id": "domain-58010aa2e451"
//}
message CostQuerySetRequest {
    string cost_query_set_id = 1;
    string domain_id = 2;
}

//{
//    "cost_query_set_id": "query-16ae671dc8fb",
//    "domain_id": "domain-58010aa2e451"
//}
message GetCostQuerySetRequest {
    string cost_query_set_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {}
//}
message CostQuerySetQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    string data_source_id = 2;
    // +optional
    string cost_query_set_id = 3;
    // +optional
    string name = 4;
    // +optional
    string user_id = 5;
    string domain_id = 11;
}

//{
//        "cost_query_set_id": "query-76a58ea5d02c",
//        "name": "project_provider_region",
//        "options": {},
//        "tags": {},
//        "user_id": "test@cloudforet.io",
//        "data_source_id": "ds-085d1e872789",
//        "domain_id": "domain-58010aa2e451",
//        "created_at": "2022-07-19T06:11:03.701Z",
//        "updated_at": "2022-07-19T06:11:03.701Z"
//}
message CostQuerySetInfo {
    string cost_query_set_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct tags = 4;
    string user_id = 11;
    string data_source_id = 12;
    string domain_id = 13;
    string created_at = 21;
    string updated_at = 22;
}

//{
//        "results": [
//            {
//                "cost_query_set_id": "query-16ae671dc8fb",
//                "name": "3 month product pie chart",
//                "options": {},
//                "tags": {},
//                "user_id": "yuda@mz.co.kr",
//                "data_source_id": "ds-085d1e872789",
//                "domain_id": "domain-58010aa2e451",
//                "created_at": "2022-03-08T03:37:31.404Z",
//                "updated_at": "2022-03-08T03:37:31.404Z"
//            },
//            {
//                "cost_query_set_id": "query-d90addf25e4b",
//                "name": "6 month project group",
//                "options": {},
//                "tags": {},
//                "user_id": "yuda@mz.co.kr",
//                "data_source_id": "ds-085d1e872789",
//                "domain_id": "domain-58010aa2e451",
//                "created_at": "2022-03-14T09:29:54.306Z",
//                "updated_at": "2022-03-14T09:29:54.306Z"
//            }
//        ],
//        "total_count": 34
//}
message CostQuerySetsInfo {
    repeated CostQuerySetInfo results = 1;
    int32 total_count = 2;
}

message CostQuerySetStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string data_source_id = 2;
    string domain_id = 3;
}