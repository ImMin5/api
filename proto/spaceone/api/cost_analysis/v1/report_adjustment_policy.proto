syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/cost_analysis/v1/job.proto";

service ReportAdjustmentPolicy {
  rpc create (CreateReportAdjustmentPolicyRequest) returns (ReportAdjustmentPolicyInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/create",
      body: "*"
    };
  }

  rpc update (UpdateReportAdjustmentPolicyRequest) returns (ReportAdjustmentPolicyInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/update",
      body: "*"
    };
  }

  rpc change_order (ChangeOrderReportAdjustmentPolicyRequest) returns (ReportAdjustmentPolicyInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/change-order",
      body: "*"
    };
  }

  rpc delete (ReportAdjustmentPolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/delete"
      body: "*"
    };
  }

  rpc sync_currency (ReportAdjustmentPolicyRequest) returns (ReportAdjustmentPolicyInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/sync-currency"
      body: "*"
    };
  }

  rpc get (ReportAdjustmentPolicyRequest) returns (ReportAdjustmentPolicyInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/get",
      body: "*"
    };
  }

  rpc list (ReportAdjustmentPolicyQuery) returns (ReportAdjustmentPolicesInfo) {
    option (google.api.http) = {
      post: "/cost-analysis/v1/report-adjustment-policy/list",
      body: "*"
    };
  }

}

message AdjustmentPolicyFilter {
  repeated string workspace_ids = 1;
  repeated string project_ids = 2;
}

message CreateReportAdjustmentPolicyRequest {;
  string cost_report_config_id = 1;
  // +optional
  int32 order = 2;
  // +optional
  string description = 3;
  // +optional
  google.protobuf.Struct tags = 4;
  // +optional
  AdjustmentPolicyFilter policy_filter = 5;
}

message UpdateReportAdjustmentPolicyRequest {
  string report_adjustment_policy_id = 1;
  // +optional
  string description = 2;
  google.protobuf.Struct tags = 3;
  // +optional
  AdjustmentPolicyFilter policy_filter = 4;
}

message ChangeOrderReportAdjustmentPolicyRequest {
  string report_adjustment_policy_id = 1;
  int32 order = 2;
}

message ReportAdjustmentPolicyRequest {
  string report_adjustment_policy_id = 1;
}

message ReportAdjustmentPolicyQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  AdjustmentPolicyFilter policy_filter = 2;
}

message ReportAdjustmentPolicyInfo {
  enum Scope {
    SCOPE_NONE = 0;
    WORKSPACE = 1;
    PROJECT = 2;
    SERVICE_ACCOUNT = 3;
  }

  string report_adjustment_policy_id = 1;
  repeated string adjustments = 2;
  Scope scope = 3;
  int32 order = 4;
  string description = 5;
  google.protobuf.Struct tags = 6;
  AdjustmentPolicyFilter policy_filter = 7;
  string domain_id = 21;
  string cost_report_config_id = 22;

  string created_at = 31;
  string updated_at = 32;

}

message ReportAdjustmentPolicesInfo {
  repeated ReportAdjustmentPolicyInfo results = 1;
  int32 total_count = 2;
}