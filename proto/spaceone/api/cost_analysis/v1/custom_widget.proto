// A CustomWidget is a widget created by a CostQuerySet a User defined.
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CustomWidget {
    
    // Creates a new CustomWidget. Based on the queries of the CostQuerySet the User made, a widget is created with the default template Cloudforet provides.
    rpc create (CreateCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/create"
            body: "*"
        };
    }
    
    // Updates a specific CustomWidget. You can make changes in CustomWidget settings, including `chart_type` and queries.
    rpc update (UpdateCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/update"
            body: "*"
        };
    }
    
    // Deletes a specific CustomWidget. You must specify the `custom_widget_id` of the CustomWidget to delete.
    rpc delete (CustomWidgetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/delete"
            body: "*"
        };
    }
    
    // Gets a specific CustomWidget. Prints detailed information about the CustomWidget, including `chart_type` and queries.
    rpc get (GetCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/get"
            body: "*"
        };
    }
    
    // Gets a list of all CustomWidgets. You can use a query to get a filtered list of CustomWidgets.
    rpc list (CustomWidgetQuery) returns (CustomWidgetsInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/list"
            body: "*"
        };
    }

    rpc stat (CustomWidgetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/custom-widget/stat"
            body: "*"
        };
    }
}

//{
//    "name": "project_provider_region-f59722cf-dc03-4758-ab7f",
//    "options": {
//        "group_by": "project_id",
//        "stack": false,
//        "layout": 100.0,
//        "granularity": "ACCUMULATED",
//        "filters": {},
//        "chart_type": "DONUT"
//    }
//}
message CreateCustomWidgetRequest {
    string name = 1;
    google.protobuf.Struct options = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string domain_id = 11;
}

//{
//    "widget_id": "widget-8b1241aff67d",
//    "name": "project_provider_region",
//    "options": {
//        "layout": 100.0,
//        "chart_type": "DONUT",
//        "stack": false,
//        "group_by": "project_id",
//        "granularity": "ACCUMULATED",
//        "filters": {}
//    },
//    "tags": {
//        "a": "b"
//    }
//}
message UpdateCustomWidgetRequest {
    string widget_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct options = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string domain_id = 11;
}

//{
//    "widget_id": "widget-205f743a9890"
//}
message CustomWidgetRequest {
    string widget_id = 1;
    string domain_id = 2;
}

//{
//    "widget_id": "widget-205f743a9890"
//}
message GetCustomWidgetRequest {
    string widget_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {}
//}
message CustomWidgetQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string widget_id = 2;
    // +optional
    string name = 3;
    // +optional
    string user_id = 4;
    string domain_id = 11;
}

//{
//    "widget_id": "widget-8b1241aff67d",
//    "name": "project_provider_region-f59722cf-dc03-4758-ab7f",
//    "options": {
//        "filters": {},
//        "group_by": "project_id",
//        "granularity": "ACCUMULATED",
//        "layout": 100.0,
//        "stack": false,
//        "chart_type": "DONUT"
//    },
//    "tags": {},
//    "user_id": "test_user@cloudforet.io",
//    "domain_id": "domain-58010aa2e451",
//    "created_at": "2022-07-19T06:18:55.819Z",
//    "updated_at": "2022-07-19T06:18:55.819Z"
//}
message CustomWidgetInfo {
    string widget_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct tags = 4;
    string user_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string updated_at = 22;
}

//{
//    "results": [
//        {
//            "widget_id": "widget-205f743a9890",
//            "name": "3 month product pie chart-a6752241-0a0b-4604-9186",
//            "options": {
//                "stack": false,
//                "layout": 100.0,
//                "granularity": "ACCUMULATED",
//                "filters": {},
//                "chart_type": "DONUT",
//                "group_by": "product"
//            },
//            "tags": {},
//            "user_id": "yuda@mz.co.kr",
//            "domain_id": "domain-58010aa2e451",
//            "created_at": "2022-03-08T03:37:42.967Z",
//            "updated_at": "2022-03-08T03:37:42.967Z"
//        },
//        {
//            "widget_id": "widget-c672e1501066",
//            "name": "6 month project group-589318f7-ee8d-4018-9d56",
//            "options": {
//                "stack": false,
//                "layout": 100.0,
//                "chart_type": "STACKED_COLUMN",
//                "filters": {},
//                "group_by": "project_group_id",
//                "granularity": "MONTHLY"
//            },
//            "tags": {},
//            "user_id": "yuda@mz.co.kr",
//            "domain_id": "domain-58010aa2e451",
//            "created_at": "2022-03-14T09:30:03.115Z",
//            "updated_at": "2022-03-14T09:30:03.115Z"
//        }
//    ],
//    "total_count": 27
//}
message CustomWidgetsInfo {
    repeated CustomWidgetInfo results = 1;
    int32 total_count = 2;
}

message CustomWidgetStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}