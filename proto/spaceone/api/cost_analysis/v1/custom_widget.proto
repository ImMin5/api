/*
desc: A CustomWidget is a widget created by a CostQuerySet a User defined.
*/
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CustomWidget {
    /*
    desc: Creates a new CustomWidget. Based on the queries of the CostQuerySet the User made, a widget is created with the default template Cloudforet provides.
    request_example: >-
      {
        "name": "project_provider_region-f59722cf-dc03-4758-ab7f",
        "options": {
            "group_by": "project_id",
            "stack": false,
            "layout": 100.0,
            "granularity": "ACCUMULATED",
            "filters": {},
            "chart_type": "DONUT"
        }
      }
    response_example: >-
      {
        "widget_id": "widget-8b1241aff67d",
        "name": "project_provider_region-f59722cf-dc03-4758-ab7f",
        "options": {
            "filters": {},
            "group_by": "project_id",
            "granularity": "ACCUMULATED",
            "layout": 100.0,
            "stack": false,
            "chart_type": "DONUT"
        },
        "tags": {},
        "user_id": "test_user@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T06:18:55.819Z",
        "updated_at": "2022-07-19T06:18:55.819Z"
      }
    */
    rpc create (CreateCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/custom-widgets" };
    }
    /*
    desc: Updates a specific CustomWidget. You can make changes in CustomWidget settings, including `chart_type` and queries.
    request_example: >-
      {
        "widget_id": "widget-8b1241aff67d",
        "name": "project_provider_region",
        "options": {
            "layout": 100.0,
            "chart_type": "DONUT",
            "stack": false,
            "group_by": "project_id",
            "granularity": "ACCUMULATED",
            "filters": {}
        },
        "tags": {
            "a": "b"
        }
      }
    response_example: >-
      {
        "widget_id": "widget-8b1241aff67d",
        "name": "project_provider_region",
        "options": {
            "filters": {},
            "chart_type": "DONUT",
            "stack": false,
            "layout": 100.0,
            "granularity": "ACCUMULATED",
            "group_by": "project_id"
        },
        "tags": {
            "a": "b"
        },
        "user_id": "test_user@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T06:18:55.819Z",
        "updated_at": "2022-07-19T06:18:55.819Z"
      }
    */
    rpc update (UpdateCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/custom-widget/{widget_id}" };
    }
    /*
    desc: Deletes a specific CustomWidget. You must specify the `custom_widget_id` of the CustomWidget to delete.
    request_example: >-
      {
        "widget_id": "widget-205f743a9890"
      }
    */
    rpc delete (CustomWidgetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/cost-analysis/v1/custom-widget/{widget_id}" };
    }
    /*
    desc: Gets a specific CustomWidget. Prints detailed information about the CustomWidget, including `chart_type` and queries.
    request_example: >-
      {
        "widget_id": "widget-205f743a9890"
      }
    response_example: >-
      {
        "widget_id": "widget-205f743a9890",
        "name": "3 month product pie chart-a6752241-0a0b-4604-9186",
        "options": {
            "chart_type": "DONUT",
            "layout": 100.0,
            "filters": {},
            "stack": false,
            "group_by": "product",
            "granularity": "ACCUMULATED"
        },
        "tags": {},
        "user_id": "test@cloudforet.io",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-03-08T03:37:42.967Z",
        "updated_at": "2022-03-08T03:37:42.967Z"
      }
    */
    rpc get (GetCustomWidgetRequest) returns (CustomWidgetInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/custom-widget/{widget_id}" };
    }
    /*
    desc: Gets a list of all CustomWidgets. You can use a query to get a filtered list of CustomWidgets.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "widget_id": "widget-205f743a9890",
                "name": "3 month product pie chart-a6752241-0a0b-4604-9186",
                "options": {
                    "stack": false,
                    "layout": 100.0,
                    "granularity": "ACCUMULATED",
                    "filters": {},
                    "chart_type": "DONUT",
                    "group_by": "product"
                },
                "tags": {},
                "user_id": "yuda@mz.co.kr",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-03-08T03:37:42.967Z",
                "updated_at": "2022-03-08T03:37:42.967Z"
            },
            {
                "widget_id": "widget-c672e1501066",
                "name": "6 month project group-589318f7-ee8d-4018-9d56",
                "options": {
                    "stack": false,
                    "layout": 100.0,
                    "chart_type": "STACKED_COLUMN",
                    "filters": {},
                    "group_by": "project_group_id",
                    "granularity": "MONTHLY"
                },
                "tags": {},
                "user_id": "yuda@mz.co.kr",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-03-14T09:30:03.115Z",
                "updated_at": "2022-03-14T09:30:03.115Z"
            }
        ],
        "total_count": 27
      }
    */
    rpc list (CustomWidgetQuery) returns (CustomWidgetsInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/custom-widgets"
            additional_bindings {
                post: "/cost-analysis/v1/custom-widgets/search"
            }
        };
    }
    rpc stat (CustomWidgetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/custom-widgets/stat" };
    }
}

message CreateCustomWidgetRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message UpdateCustomWidgetRequest {
    // is_required: true
    string widget_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message CustomWidgetRequest {
    // is_required: true
    string widget_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetCustomWidgetRequest {
    // is_required: true
    string widget_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message CustomWidgetQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string widget_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string user_id = 4;
    // is_required: true
    string domain_id = 11;
}

message CustomWidgetInfo {
    string widget_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct tags = 4;
    string user_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string updated_at = 22;
}

message CustomWidgetsInfo {
    repeated CustomWidgetInfo results = 1;
    int32 total_count = 2;
}

message CustomWidgetStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}