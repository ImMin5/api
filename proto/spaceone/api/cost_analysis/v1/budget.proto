/*
desc: A Budget is a planned amount of cost expenditure for reduction and prediction of infrastructure costs.
*/
syntax = "proto3";

option go_package = "dist/go";

package spaceone.api.cost_analysis.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Budget {
    /*
    desc: Creates a new Budget. When creating a Budget, it should be set for a specific ProjectGroup or Project. The budgeted amount and date of the `planned_limits` should be specified on a monthly or yearly basis.
    request_example: >-
      {
        "name": "Cloudforet-Budget",
        "planned_limits": [{"date": "2022-01", "limit": 1000.0},
                           {"date": "2022-02", "limit": 1100.0},
                           {"date": "2022-03", "limit": 1200.0},
                           {"date": "2022-04", "limit": 1300.0},
                           {"date": "2022-05", "limit": 1400.0},
                           {"date": "2022-06", "limit": 1500.0},
                           {"date": "2022-07", "limit": 1600.0},
                           {"date": "2022-08", "limit": 1700.0},
                           {"date": "2022-09", "limit": 1800.0},
                           {"date": "2022-10", "limit": 1900.0},
                           {"date": "2022-11", "limit": 2000.0},
                           {"date": "2022-12", "limit": 2100.0}],
        "time_unit": "MONTHLY",
        "start": "2022-01",
        "end": "2022-12",
        "project_group_id": "pg-812c90990877"
      }
    response_example: >-
      {
        "budget_id": "budget-d51b6b6a9910",
        "name": "Cloudforet-Budget",
        "limit": 18600.0,
        "planned_limits": [
            {
                "date": "2022-01",
                "limit": 1000.0
            },
            {
                "date": "2022-02",
                "limit": 1100.0
            },
            {
                "date": "2022-03",
                "limit": 1200.0
            },
            {
                "date": "2022-04",
                "limit": 1300.0
            },
            {
                "date": "2022-05",
                "limit": 1400.0
            },
            {
                "date": "2022-06",
                "limit": 1500.0
            },
            {
                "date": "2022-07",
                "limit": 1600.0
            },
            {
                "date": "2022-08",
                "limit": 1700.0
            },
            {
                "date": "2022-09",
                "limit": 1800.0
            },
            {
                "date": "2022-10",
                "limit": 1900.0
            },
            {
                "date": "2022-11",
                "limit": 2000.0
            },
            {
                "date": "2022-12",
                "limit": 2100.0
            }
        ],
        "total_usage_usd_cost": 43412.45,
        "time_unit": "MONTHLY",
        "start": "2022-01",
        "end": "2022-12",
        "tags": {},
        "project_group_id": "pg-812c90990877",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-18T09:30:56.901Z",
        "updated_at": "2022-07-18T09:30:56.901Z"
      }
    */
    rpc create (CreateBudgetRequest) returns (BudgetInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/budgets" };
    }
    /*
    desc: Updates a specific Budget. You can make changes in the budgeted amount of the time period specified while creating the resource.
    request_example: >-
      {
        "budget_id": "budget-d51b6b6a9910",
        "name": "Cloudforet-Budget-test", "limit": 15000.0,
        "planned_limits": [{"date": "2022-01", "limit": 500.0},
                           {"date": "2022-02", "limit": 500.0},
                           {"date": "2022-03", "limit": 500.0},
                           {"date": "2022-04", "limit": 500.0},
                           {"date": "2022-05", "limit": 500.0},
                           {"date": "2022-06", "limit": 500.0},
                           {"date": "2022-07", "limit": 500.0},
                           {"date": "2022-08", "limit": 500.0},
                           {"date": "2022-09", "limit": 500.0}],
        "end": "2022-12",
        "tags": {}
      }
    response_example: >-
      {
        "budget_id": "budget-d51b6b6a9910",
        "name": "Cloudforet-Budget-test",
        "limit": 15000.0,
        "planned_limits": [
            {
                "date": "2022-01",
                "limit": 500.0
            },
            {
                "date": "2022-02",
                "limit": 500.0
            },
            {
                "date": "2022-03",
                "limit": 500.0
            },
            {
                "date": "2022-04",
                "limit": 500.0
            },
            {
                "date": "2022-05",
                "limit": 500.0
            },
            {
                "date": "2022-06",
                "limit": 500.0
            },
            {
                "date": "2022-07",
                "limit": 500.0
            },
            {
                "date": "2022-08",
                "limit": 500.0
            },
            {
                "date": "2022-09",
                "limit": 500.0
            }
        ],
        "total_usage_usd_cost": 43642.49,
        "time_unit": "MONTHLY",
        "start": "2022-01",
        "end": "2022-12",
        "tags": {},
        "project_group_id": "pg-812c90990877",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-18T09:30:56.901Z",
        "updated_at": "2022-07-18T09:30:56.901Z"
      }
    */
    rpc update (UpdateBudgetRequest) returns (BudgetInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/budget/{budget_id}" };
    }
    /*
    desc: Sets a notification on a specific Budget. Sets a threshold on the budget, and if the cost exceeds the threshold, a notification is raised.
    request_example: >-
      {
        "budget_id": "budget-4c8606da4521",
        "notifications": [
            {
                "threshold": 20.0,
                "unit": "PERCENT",
                "notification_type": "CRITICAL"
            },
            {
                "threshold": 1000.0,
                "unit": "ACTUAL_COST",
                "notification_type": "WARNING"
            }
        ]
      }
    response_example: >-
      {
        "budget_id": "budget-4c8606da4521",
        "name": "Cloudforet-Budget-test2",
        "limit": 5000.0,
        "time_unit": "TOTAL",
        "start": "2022-01",
        "end": "2022-12",
        "notifications": [
            {
                "threshold": 20.0,
                "unit": "PERCENT",
                "notification_type": "CRITICAL"
            },
            {
                "threshold": 1000.0,
                "unit": "ACTUAL_COST",
                "notification_type": "WARNING"
            }
        ],
        "tags": {},
        "project_id": "project-52a423012d5e",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T04:31:10.314Z",
        "updated_at": "2022-07-19T04:31:10.314Z"
      }
    */
    rpc set_notification (SetBudgetNotificationRequest) returns (BudgetInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/budget/{budget_id}/notification" };
    }
    /*
    desc: Deletes a specific Budget. You must specify the `budget_id` of the Budget to delete.
    request_example: >-
      {
        "budget_id": "budget-d51b6b6a9910"
      }
    */
    rpc delete (BudgetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/cost-analysis/v1/budget/{budget_id}" };
    }
    /*
    desc: Gets a specific Budget. Prints detailed information about the Budget, including `planned_limits` of the project group or project for the pre-defined period.
    request_example: >-
      {
        "budget_id": "budget-d51b6b6a9910"
      }
    response_example: >-
      {
        "budget_id": "budget-d51b6b6a9910",
        "name": "Cloudforet-Budget",
        "limit": 18600.0,
        "planned_limits": [
            {
                "date": "2022-01",
                "limit": 1000.0
            },
            {
                "date": "2022-02",
                "limit": 1100.0
            },
            {
                "date": "2022-03",
                "limit": 1200.0
            },
            {
                "date": "2022-04",
                "limit": 1300.0
            },
            {
                "date": "2022-05",
                "limit": 1400.0
            },
            {
                "date": "2022-06",
                "limit": 1500.0
            },
            {
                "date": "2022-07",
                "limit": 1600.0
            },
            {
                "date": "2022-08",
                "limit": 1700.0
            },
            {
                "date": "2022-09",
                "limit": 1800.0
            },
            {
                "date": "2022-10",
                "limit": 1900.0
            },
            {
                "date": "2022-11",
                "limit": 2000.0
            },
            {
                "date": "2022-12",
                "limit": 2100.0
            }
        ],
        "total_usage_usd_cost": 43412.45,
        "time_unit": "MONTHLY",
        "start": "2022-01",
        "end": "2022-12",
        "tags": {},
        "project_group_id": "pg-812c90990877",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-18T09:30:56.901Z",
        "updated_at": "2022-07-18T09:30:56.901Z"
      }
    */
    rpc get (GetBudgetRequest) returns (BudgetInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/budget/{budget_id}" };
    }
    /*
    desc: Gets a list of all Budgets. You can use a query to get a filtered list of Budgets.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "budget_id": "budget-409e33836ea2",
                "name": "Budget 2 - Monthly",
                "limit": 18600.0,
                "planned_limits": [
                    {
                        "date": "2022-01",
                        "limit": 1000.0
                    },
                    {
                        "date": "2022-02",
                        "limit": 1100.0
                    },
                    {
                        "date": "2022-03",
                        "limit": 1200.0
                    },
                    {
                        "date": "2022-04",
                        "limit": 1300.0
                    },
                    {
                        "date": "2022-05",
                        "limit": 1400.0
                    },
                    {
                        "date": "2022-06",
                        "limit": 1500.0
                    },
                    {
                        "date": "2022-07",
                        "limit": 1600.0
                    },
                    {
                        "date": "2022-08",
                        "limit": 1700.0
                    },
                    {
                        "date": "2022-09",
                        "limit": 1800.0
                    },
                    {
                        "date": "2022-10",
                        "limit": 1900.0
                    },
                    {
                        "date": "2022-11",
                        "limit": 2000.0
                    },
                    {
                        "date": "2022-12",
                        "limit": 2100.0
                    }
                ],
                "total_usage_usd_cost": 43412.45,
                "time_unit": "MONTHLY",
                "start": "2022-01",
                "end": "2022-12",
                "tags": {},
                "project_group_id": "pg-812c90990877",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-04-12T06:09:56.917Z",
                "updated_at": "2022-04-12T06:09:56.917Z"
            }
        ],
        "total_count": 6
      }
    */
    rpc list (BudgetQuery) returns (BudgetsInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/budgets"
            additional_bindings {
                post: "/cost-analysis/v1/budgets/search"
            }
        };
    }
    rpc stat (BudgetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/budgets/stat" };
    }
}

message PlannedLimit {
    string date = 1;
    float limit = 2;
}

message BudgetNotification {
    enum Unit {
        UNIT_NONE = 0;
        PERCENT = 1;
        ACTUAL_COST = 2;
    }

    enum NotificationType {
        NOTIFICATION_TYPE_NONE = 0;
        CRITICAL = 1;
        WARNING = 2;
    }

    float threshold = 1;
    Unit unit = 2;
    NotificationType notification_type = 3;
}

message CreateBudgetRequest {
    enum TimeUnit {
        NONE = 0;
        TOTAL = 1;
        MONTHLY = 2;
        YEARLY = 3;
    }

    // is_required: false
    string name = 1;
    // is_required: false
    float limit = 2;
    // is_required: false
    repeated PlannedLimit planned_limits = 3;
    // is_required: false
    google.protobuf.Struct cost_types = 4;
    // is_required: true
    TimeUnit time_unit = 5;
    // is_required: true
    string start = 6;
    // is_required: true
    string end = 7;
    // is_required: false
    repeated BudgetNotification notifications = 8;
    // is_required: false
    google.protobuf.Struct tags = 9;
    // is_required: false
    string project_id = 11;
    // is_required: false
    string project_group_id = 12;
    // is_required: true
    string domain_id = 13;
}

message UpdateBudgetRequest {
    // is_required: true
    string budget_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    float limit = 3;
    // is_required: false
    repeated PlannedLimit planned_limits = 4;
    // is_required: false
    string end = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message SetBudgetNotificationRequest {
    // is_required: true
    string budget_id = 1;
    // is_required: true
    repeated BudgetNotification notifications = 2;
    // is_required: true
    string domain_id = 11;
}

message BudgetRequest {
    // is_required: true
    string budget_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetBudgetRequest {
    // is_required: true
    string budget_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message BudgetQuery {
    enum TimeUnit {
        NONE = 0;
        TOTAL = 1;
        MONTHLY = 2;
        YEARLY = 3;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string budget_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string project_id = 4;
    // is_required: false
    string project_group_id = 5;
    // is_required: false
    TimeUnit time_unit = 6;
    // is_required: true
    string domain_id = 11;
}

message BudgetInfo {
    enum TimeUnit {
        NONE = 0;
        TOTAL = 1;
        MONTHLY = 2;
        YEARLY = 3;
    }

    string budget_id = 1;
    string name = 2;
    float limit = 3;
    repeated PlannedLimit planned_limits = 4;
    float total_usage_usd_cost = 5;
    google.protobuf.Struct cost_types = 6;
    TimeUnit time_unit = 7;
    string start = 8;
    string end = 9;
    repeated BudgetNotification notifications = 10;
    google.protobuf.Struct tags = 21;
    string project_id = 31;
    string project_group_id = 32;
    string domain_id = 33;
    string created_at = 41;
    string updated_at = 42;
}

message BudgetsInfo {
    repeated BudgetInfo results = 1;
    int32 total_count = 2;
}

message BudgetStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}
