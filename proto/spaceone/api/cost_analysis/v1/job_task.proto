/*
desc: A JobTask is a task unit subdividing a Job. The division criteria are specified in each DataSource plugin.
*/
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "dist/go";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service JobTask {
    /*
    desc: Gets a specific JobTask. Prints detailed information about the JobTask, including the relevant resources: DataSource and Job. The criteria used for dividing a Job into JobTasks can be found in the DataSource used, but the total count of divided JobTasks can be found by this method.
    request_example: >-
      {
        "job_task_id": "job-task-3622d860a776"
      }
    response_example: >-
      {
        "job_task_id": "job-task-3622d860a776",
        "status": "SUCCESS",
        "options": {
            "month": "202207",
            "platform": "gcp"
        },
        "created_count": 1,
        "job_id": "job-85cf2c385252",
        "data_source_id": "ds-c96609f5afeb",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-17T16:00:08.266Z",
        "started_at": "2022-07-17T16:01:28.243Z",
        "updated_at": "2022-07-17T16:01:28.939Z",
        "finished_at": "2022-07-17T16:01:28.939Z"
      }
    */
    rpc get (GetJobTaskRequest) returns (JobTaskInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/job-task/{job_task_id}" };
    }
    /*
    desc: Gets a list of all JobTasks. You can use a query to get a filtered list of JobTasks.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "job_task_id": "job-task-3622d860a776",
                "status": "SUCCESS",
                "options": {
                    "platform": "gcp",
                    "month": "202207"
                },
                "created_count": 1,
                "job_id": "job-85cf2c385252",
                "data_source_id": "ds-c96609f5afeb",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-07-17T16:00:08.266Z",
                "started_at": "2022-07-17T16:01:28.243Z",
                "updated_at": "2022-07-17T16:01:28.939Z",
                "finished_at": "2022-07-17T16:01:28.939Z"
            },
            {
                "job_task_id": "job-task-038c0b076ec5",
                "status": "SUCCESS",
                "options": {
                    "account": "257706363616",
                    "start": "2022-07-01"
                },
                "created_count": 5756,
                "job_id": "job-6b6765f757a9",
                "data_source_id": "ds-fcba92ca73b1",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-07-17T16:00:05.099Z",
                "started_at": "2022-07-17T16:00:47.356Z",
                "updated_at": "2022-07-17T16:01:20.856Z",
                "finished_at": "2022-07-17T16:01:20.856Z"
            }
        ],
        "total_count": 720
      }
    */
    rpc list (JobTaskQuery) returns (JobTasksInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/job-tasks"
            additional_bindings {
                post: "/cost-analysis/v1/job-tasks/search"
            }
        };
    }
    rpc stat (JobTaskStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/job-tasks/stat" };
    }
}


message GetJobTaskRequest {
    // is_required: true
    string job_task_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message JobTaskQuery {
    enum Status {
        SCOPE_NONE = 0;
        PENDING = 1;
        IN_PROGRESS = 2;
        SUCCESS = 3;
        FAILURE = 4;
        TIMEOUT = 5;
        CANCELED = 6;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string job_task_id = 2;
    // is_required: false
    Status status = 3;
    // is_required: false
    string job_id = 11;
    // is_required: false
    string data_source_id = 12;
    // is_required: true
    string domain_id = 13;
}

message JobTaskInfo {
    enum Status {
        SCOPE_NONE = 0;
        PENDING = 1;
        IN_PROGRESS = 2;
        SUCCESS = 3;
        FAILURE = 4;
        TIMEOUT = 5;
        CANCELED = 6;
    }

    string job_task_id = 1;
    Status status = 2;
    google.protobuf.Struct options = 3;
    int32 created_count = 4;
    string error_code = 5;
    string error_message = 6;
    string job_id = 11;
    string data_source_id = 12;
    string domain_id = 13;
    string created_at = 21;
    string started_at = 22;
    string updated_at = 23;
    string finished_at = 24;
}

message JobTasksInfo {
    repeated JobTaskInfo results = 1;
    int32 total_count = 2;
}

message JobTaskStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}