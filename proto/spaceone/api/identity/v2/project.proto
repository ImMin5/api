syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/identity/v2/role.proto";
import "spaceone/api/identity/v2/project_group.proto";


service Project {
  rpc create (CreateProjectRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/create"
      body: "*"
    };
  }

  rpc update (UpdateProjectRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/update"
      body: "*"
    };
  }

  rpc update_project_type (UpdateProjectTypeRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/update-project-type"
      body: "*"
    };
  }

  rpc change_project_group (ChangeProjectGroupRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/change-project-group"
      body: "*"
    };
  }

  rpc delete (ProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/identity/v2/project/delete"
      body: "*"
    };
  }

  rpc add_users (UsersProjectRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/add-users"
      body: "*"
    };
  }

  rpc remove_users (UsersProjectRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/remove-users"
      body: "*"
    };
  }

  rpc get (ProjectRequest) returns (ProjectInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/get"
      body: "*"
    };
  }

  rpc list (ProjectSearchQuery) returns (ProjectsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/project/list"
      body: "*"
    };
  }
  rpc stat (ProjectStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/identity/v2/project/stat"
      body: "*"
    };
  }
}

enum ProjectType {
  PROJECT_TYPE_NONE = 0;
  PRIVATE = 1;
  PUBLIC = 2;
}

//{
//  "name": "Cloudforet Project",
//  "project_type": "PUBLIC"
//}
message CreateProjectRequest {
  string name = 1;
  ProjectType project_type = 2;
  // +optional
  google.protobuf.Struct tags = 3;
  // +optional
  string project_group_id = 4;
}

//{
//  "project_id": "project-a1b2c3d4e5f6",
//  "name": "Wonny Project"
//}
message UpdateProjectRequest {
  string project_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct tags = 3;
}

//{
//  "project_id": "project-a1b2c3d4e5f6",
//  "project_type": "PRIVATE"
//}
message UpdateProjectTypeRequest {
  string project_id = 1;
  ProjectType project_type = 2;
}

//{
//  "project_group_id": "pg-a1b2c3d4e5f6",
//  "project_id": "project-a1b2c3d4e5f6"
//}
message ChangeProjectGroupRequest {
  string project_id = 1;
  string project_group_id = 2;
}

//{
//  "project_id": "project-a1b2c3d4e5f6"
//}
message ProjectRequest {
  string project_id = 1;
}


//{
//  "project_id": "project-a1b2c3d4e5f6",
//  "users": ["cloudforet@cloudforet.io", "wonny@cloudforet.io"]
//}
message UsersProjectRequest {
  string project_id = 1;
  repeated string users = 2;
}

//{
//  "project_id": "project-a1b2c3d4e5f6",
//  "name": "Cloudforet Project",
//  "project_type": "PUBLIC",
//  "created_by": "wonny@cloudforet.io",
//  "domain_id": "domain-a1b2c3d4e5f6",
//  "workspace_id": "workspace-a1b2c3d4e5f6",
//  "created_at": "2024-11-13T06:35:11.877Z"
//}
message ProjectInfo {
  string project_id = 1;
  string name = 2;
  ProjectType project_type = 3;
  google.protobuf.Struct tags = 4;
  repeated string users = 5;
  string created_by = 6;
  string reference_id = 7;
  bool is_managed = 8;
  string domain_id = 21;
  string workspace_id = 22;
  string project_group_id = 23;
  string trusted_account_id = 24;
  string created_at = 31;
  string last_synced_at = 32;
}

//{
//  "project_type": "PRIVATE",
//  "query": {
//    "page": {
//      "start": 1,
//      "limit": 10
//    },
//    "sort": [{
//      "key": "created_at",
//      "desc": true
//    }]
//  }
//}
message ProjectSearchQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string project_id = 2;
  // +optional
  string name = 3;
  // +optional
  ProjectType project_type = 4;
  // +optional
  string created_by = 5;
  // +optional
  bool include_children = 6;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_group_id = 23;
  // +optional
  string user_id = 24;
}

//{
//  "results": [
//  {
//    "created_at": "2024-11-13T07:01:56.295Z",
//    "created_by": "wonny@cloudforet.io",
//    "domain_id": "domain-a1b2c3d4e5f6",
//    "name": "Wonny Project",
//    "project_group_id": "pg-a1b2c3d4e5f6",
//    "project_id": "project-a1b2c3d4e5f6",
//    "project_type": "PRIVATE",
//    "users": [
//      "wonny@cloudforet.io"
//    ],
//    "workspace_id": "workspace-a1b2c3d4e5f6"
//  },
//  {
//    "created_at": "2024-11-13T06:35:11.877Z",
//    "created_by": "cloudforet@cloudforet.io",
//    "domain_id": "domain-a1b2c3d4e5f6",
//    "name": "Cloudforet Project",
//    "project_group_id": "pg-a1b2c3d4e5f6",
//    "project_id": "project-g7h8i9j1k2l3",
//    "project_type": "PRIVATE",
//    "users": [
//      "cloudforet@cloudforet.io",
//      "wonny@cloudforet.io"
//    ],
//    "workspace_id": "workspace-a1b2c3d4e5f6"
//  }
//  ],
//  "total_count": 2
//}
message ProjectsInfo {
  repeated ProjectInfo results = 1;
  int32 total_count = 2;
}

message ProjectStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}