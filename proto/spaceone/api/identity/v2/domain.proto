syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/core/v2/handler.proto";


service Domain {
  rpc create (CreateDomainRequest) returns (DomainInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/create"
      body: "*"
    };
  }

  rpc update (UpdateDomainRequest) returns (DomainInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/update"
      body: "*"
    };
  }

  rpc delete (DomainRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/identity/v2/domain/delete"
      body: "*"
    };
  }

  rpc enable (DomainRequest) returns (DomainInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/enable"
      body: "*"
    };
  }

  rpc disable (DomainRequest) returns (DomainInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/disable"
      body: "*"
    };
  }

  rpc get (DomainRequest) returns (DomainInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/get"
      body: "*"
    };
  }

  // +noauth
  rpc get_auth_info (GetDomainAuthRequest) returns (DomainAuthInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/get-auth-info"
      body: "*"
    };
  }

  rpc get_public_key (spaceone.api.core.v2.AuthenticationRequest) returns (spaceone.api.core.v2.AuthenticationResponse) {}

  rpc list (DomainSearchQuery) returns (DomainsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/domain/list"
      body: "*"
    };
  }

  rpc stat (DomainStatQuery) returns (google.protobuf.Struct) {}
}

message Admin {
  string user_id = 1;
  string name = 2;
  string password = 3;
  // +optional
  string email = 4;
  // +optional
  string language = 5;
  // +optional
  string timezone = 6;
  // +optional
  google.protobuf.Struct tags = 7;
  // +optional
  bool reset_password = 8;
}

//{
//  "name": "wonny-dev",
//  "admin": {
//    "user_id": "wonny@cloudforet.io",
//    "name": "Wonny",
//    "password": "Password1234!",
//    "email": "wonny@cloudforet.io",
//    "language": "en",
//    "timezone": "UTC"
//  }
//}
message CreateDomainRequest {
  string name = 1;
  Admin admin = 2;
  // +optional
  google.protobuf.Struct tags = 3;
}

//{
//  "domain_id": "domain-a1b2c3d4e5f6",
//  "name": "wonny-dev"
//}
message UpdateDomainRequest {
  string domain_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct tags = 3;
}

//{
//  "domain_id": "domain-a1b2c3d4e5f6"
//}
message DomainRequest {
  string domain_id = 1;
}

//{
//  "name": "wonny-dev"
//}
message GetDomainAuthRequest {
  string name = 1;
}

//{
//  "domain_id": "domain-a1b2c3d4e5f6",
//  "name": "wonny-dev",
//  "external_auth_state": "DISABLED",
//  "metadata": {},
//  "config": {
//      "settings": {
//        "unified_cost_config": {
//          "aggregation_day": 15.0,
//          "currency": "KRW",
//          "custom_exchange_rate": {},
//          "exchange_date": 15.0,
//          "exchange_rate_mode": "AUTO",
//          "exchange_source": "Yahoo! Finance",
//          "is_exchange_last_day": false,
//          "is_last_day": false,
//          "run_hour": 0.0
//        }
//      }
//  }
//}
message DomainAuthInfo {
  enum ExternalAuthState {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
  }

  string domain_id = 1;
  string name = 2;
  ExternalAuthState external_auth_state = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Struct config = 5;
}

//{
//  "domain_id": "domain-a1b2c3d4e5f6",
//  "name": "wonny-dev",
//  "state": "ENABLED",
//  "created_at": "2024-11-12T02:24:01.233Z"
//}
message DomainInfo {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
  }

  string domain_id = 1;
  string name = 2;
  State state = 3;
  google.protobuf.Struct tags = 4;
  string created_at = 31;
  string deleted_at = 32;
}

//{
//  "query": {
//    "filter": [{
//      "k": "tag.env",
//      "v": "dev",
//      "o": "eq"
//    }],
//    "sort": [{
//      "key": "created_at",
//      "desc": true
//    }]
//  }
//}
message DomainSearchQuery {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
  }
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string domain_id = 2;
  // +optional
  string name = 3;
  // +optional
  State state = 4;
}

//{
//  "results": [
//  {
//    "domain_id": "domain-a1b2c3d4e5f6",
//    "name": "wonny-dev1",
//    "state": "ENABLED",
//    "created_at": "2024-11-12T02:24:01.233Z"
//  },
//  {
//    "domain_id": "domain-g7h8i9j1k2l3",
//    "name": "wonny-dev2",
//    "state": "ENABLED",
//    "created_at": "2024-11-01T03:34:01.233Z"
//  }
//  ],
//  "total_count": 2
//}
message DomainsInfo {
  repeated DomainInfo results = 1;
  int32 total_count = 2;
}

message DomainStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}

