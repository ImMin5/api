syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/identity/v2/project.proto";
import "spaceone/api/identity/v2/project_group.proto";
import "spaceone/api/identity/v2/role.proto";


service RoleBinding {
    rpc create (CreateRoleBindingRequest) returns (RoleBindingInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/create"
            body: "*"
        };
    }
    rpc update_role (UpdateRoleBindingRequest) returns (RoleBindingInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/update-role"
            body: "*"
        };
    }
    rpc delete (RoleBindingRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/delete"
            body: "*"
        };
    }
    rpc get (RoleBindingRequest) returns (RoleBindingInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/get"
            body: "*"
        };
    }
    rpc list (RoleBindingSearchQuery) returns (RoleBindingsInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/list"
            body: "*"
        };
    }
    rpc stat (RoleBindingStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v1/role-binding/stat"
            body: "*"
        };
    }
}

message CreateRoleBindingRequest {
    enum PermissionGroup {
        NONE = 0;
        DOMAIN = 1;
        WORKSPACE = 2;
    }

    string user_id = 1;
    string role_id = 2;
    PermissionGroup permission_group = 3;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}

message UpdateRoleBindingRequest {
    string role_binding_id = 1;
    string role_id = 2;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}

message RoleBindingRequest {
    string role_binding_id = 1;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}

message RoleBindingInfo {
    enum PermissionGroup {
        GROUP_NONE = 0;
        DOMAIN = 1;
        WORKSPACE = 2;
    }
    enum RoleType {
        ROLE_TYPE_NONE = 0;
        SYSTEM = 1;
        SYSTEM_ADMIN = 2;
        DOMAIN_ADMIN = 3;
        WORKSPACE_OWNER = 4;
        WORKSPACE_MEMBER = 5;
    }

    string role_binding_id = 1;
    RoleType role_type = 2;
    PermissionGroup permission_group = 3;
    string domain_id = 21;
    string workspace_id = 22;
    string role_id = 23;
    string user_id = 24;
    string created_at = 31;
}

message RoleBindingSearchQuery {
    enum PermissionGroup {
        GROUP_NONE = 0;
        DOMAIN = 1;
        WORKSPACE = 2;
    }
    enum RoleType {
        ROLE_TYPE_NONE = 0;
        SYSTEM = 1;
        SYSTEM_ADMIN = 2;
        DOMAIN_ADMIN = 3;
        WORKSPACE_OWNER = 4;
        WORKSPACE_MEMBER = 5;
    }

    // +optional
    spaceone.api.core.v2.Query query = 1;
    // +optional
    string role_binding_id = 2;
    // +optional
    RoleType role_type = 3;
    // +optional
    PermissionGroup permission_group = 4;
    // +optional
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
    // +optional
    string role_id = 23;
    // +optional
    string user_id = 24;
}

message RoleBindingsInfo {
    repeated RoleBindingInfo results = 1;
    int32 total_count = 2;
}

message RoleBindingStatQuery {
    spaceone.api.core.v2.StatisticsQuery query = 1;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}