syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";


service Endpoint {
  // Get gRPC endpoint list.
  // +noauth
  rpc list (EndpointSearchQuery) returns (EndpointsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/endpoint/list"
      body: "*"
    };
  }
}

message EndpointInfo {
  enum EndpointState {
    NONE = 0;
    ACTIVE = 1;
    INACTIVE = 2;
  }

  string name = 1;
  string service = 2;
  string endpoint = 3;
  string internal_endpoint = 4;
  EndpointState state = 5;
  string version = 6;
}

//{
//  "service": "inventory",
//  "endpoint_type": "PUBLIC",
//  "query": {}
//}
message EndpointSearchQuery {
  enum EndpointType {
    NONE = 0;
    PUBLIC = 1;
    INTERNAL = 2;
  }
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string service = 2;
  // +optional
  EndpointType endpoint_type = 3;
}

//{
//    "results": [
//        {
//            "name": "Inventory Service",
//            "service": "inventory",
//            "endpoint": "grpc://localhost:50051",
//        }
//    ],
//    "total_count": 1
//}
message EndpointsInfo {
  repeated EndpointInfo results = 1;
  int32 total_count = 2;
}
