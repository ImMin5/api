syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/identity/v2/user.proto";


service WorkspaceUser {
    rpc create (CreateWorkspaceUserRequest) returns (WorkspaceUserInfo) {
        option (google.api.http) = {
            post: "/identity/v2/workspace-user/create"
            body: "*"
        };
    }

    rpc get (WorkspaceUserRequest) returns (WorkspaceUserInfo) {
        option (google.api.http) = {
            post: "/identity/v2/workspace-user/get"
            body: "*"
        };
    }

    rpc list (WorkspaceUserSearchQuery) returns (WorkspaceUsersInfo) {
        option (google.api.http) = {
            post: "/identity/v2/workspace-user/list"
            body: "*"
        };
    }

    rpc stat (WorkspaceUserStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v1/workspace-user/stat"
            body: "*"
        };
    }
}

message CreateWorkspaceUserRequest {
    string user_id = 1;
    // When auth_type is LOCAL, password is required.
    // +optional
    string password = 2;
    // +optional
    string name = 3;
    // +optional
    string email = 4;
    AuthType auth_type = 5;
    // en,ko
    // +optional
    string language = 6;
    // UTC, Asia/Seoul
    // +optional
    string timezone = 7;
    // +optional
    google.protobuf.Struct tags = 8;
    // If reset_password is true, send email
    bool reset_password = 9;
    string role_id = 10;
    string domain_id = 21;
    string workspace_id = 22;
}

message WorkspaceUserRequest {
    string user_id = 1;
    string domain_id = 21;
    string workspace_id = 22;
}

message WorkspaceUserSearchQuery {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
        PENDING = 3;
    }

    spaceone.api.core.v2.Query query = 1;
    string user_id = 2;
    // +optional
    string name = 3;
    // +optional
    State state = 4;
    // +optional
    string email = 5;
    // +optional
    spaceone.api.identity.v2.AuthType auth_type = 6;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}

message WorkspaceUserInfo {
    enum State {
        STATE_NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
        PENDING = 3;
    }
    enum RoleType {
        ROLE_TYPE_NONE = 0;
        SYSTEM_ADMIN = 1;
        DOMAIN_ADMIN = 2;
        WORKSPACE_OWNER = 3;
        WORKSPACE_MEMBER = 4;
        USER = 5;
    }

    string user_id = 1;
    string name = 2;
    State state = 3;
    string email = 4;
    AuthType auth_type = 5;
    RoleType role_type = 6;
    google.protobuf.Struct tags = 7;
    string domain_id = 21;
    string created_at = 31;
    string last_accessed_at = 32;
}

message WorkspaceUsersInfo {
    repeated UserInfo results = 1;
    int32 total_count = 2;
}

message WorkspaceUserStatQuery {
    spaceone.api.core.v2.StatisticsQuery query = 1;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}

