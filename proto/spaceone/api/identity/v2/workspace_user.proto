syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/identity/v2/user.proto";
import "spaceone/api/identity/v2/role_binding.proto";

// WorkspaceUser service api are used to manage workspace users by the workspace owner.
service WorkspaceUser {
  // Create a workspace user. If the user does not exist in your domain, the user will be created in your domain and create a workspace user with the role.
  // If you want to create a workspace user with the existing user, you can use role-binding create api.
  rpc create (CreateWorkspaceUserRequest) returns (WorkspaceUserInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-user/create"
      body: "*"
    };
  }

  rpc get (WorkspaceUserRequest) returns (WorkspaceUserInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-user/get"
      body: "*"
    };
  }

  rpc find (WorkspaceUserFindRequest) returns (UsersSummaryInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-user/find"
      body: "*"
    };
  }

  rpc list (WorkspaceUserSearchQuery) returns (WorkspaceUsersInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-user/list"
      body: "*"
    };
  }

  rpc stat (WorkspaceUserStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/identity/v1/workspace-user/stat"
      body: "*"
    };
  }
}


//{
//  "user_id": "wonny@cloudforet.io",
//  "password": "Password0*",
//  "name": "Wonny",
//  "email": "wonny@cloudforet.io",
//  "auth_type": "LOCAL",
//  "language": "en",
//  "timezone": "UTC",
//  "tags": {
//    "team": "cloudforet"
//  },
//  "reset_password": false,
//  "role_id": "managed-workspace-member"
//}
message CreateWorkspaceUserRequest {
  string user_id = 1;
  // When auth_type is LOCAL, password is required.
  // +optional
  string password = 2;
  // +optional
  string name = 3;
  // +optional
  string email = 4;
  // LOCAL, EXTERNAL
  AuthType auth_type = 5;
  // en,ko
  // +optional
  string language = 6;
  // UTC, Asia/Seoul
  // +optional
  string timezone = 7;
  // +optional
  google.protobuf.Struct tags = 8;
  // If reset_password is true, send email
  bool reset_password = 9;
  // You can use custom role or managed role something like `managed-workspace-member`, `managed-workspace-owner` ,...
  string role_id = 10;
}

//{
//  "keyword": "cloudforet",
//  "state": "ENABLED",
//  "auth_type": "LOCAL",
//  "page": {
//       "start": 1,
//       "limit": 5
//  }
//}
message WorkspaceUserFindRequest {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }

  string keyword = 1;
  // +optional
  State state = 2;
  // +optional
  AuthType auth_type = 3;
  spaceone.api.core.v2.Page page = 4;
  string workspace_id = 21;
}

//{
//   "user_id": "wonny@cloudforet.io",
//   "workspace_id": "workspace-ab12345"
//}
message WorkspaceUserRequest {
  string user_id = 1;
  // For DOMAIN ADMIN this field is optional, but for WORKSPACE OWNER and WORKSPACE MEMBER this field is required.
  // +optional
  string workspace_id = 21;
}

//{
//  "user_id": "wonny@cloudforet.io",
//  "name": "Wonny",
//  "state": "PENDING",
//  "email": "wonny@cloudforet.io",
//  "auth_type": "LOCAL",
//  "role_type": "USER",
//  "language": "en",
//  "timezone": "UTC",
//  "api_key_count": 0,
//  "role_binding_info": {
//        "user_id": "wonny@cloudforet.io",
//        "workspace_id": "workspace-99d4nn0c14ae",
//        "domain_id": "domain-1234ee0c14ae",
//        "role_binding_id": "rb-11d4eeaa1411",
//        "role_id": "managed-workspace-member",
//        "role_type": "MANAGED",
//        "resource_group": "WORKSPACE",
//        "created_at": "2024-11-12T06:06:04.999Z"
//  },
//  "created_at": "2024-11-12T06:06:04.999Z"
//}
message WorkspaceUserInfo {
  enum State {
    STATE_NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }
  enum RoleType {
    ROLE_TYPE_NONE = 0;
    DOMAIN_ADMIN = 1;
    USER = 2;
  }

  string user_id = 1;
  string name = 2;
  State state = 3;
  string email = 4;
  AuthType auth_type = 5;
  RoleType role_type = 6;
  string language = 7;
  string timezone = 8;
  int32 api_key_count = 9;
  google.protobuf.Struct tags = 10;
  spaceone.api.identity.v2.RoleBindingInfo role_binding_info = 11;
  bool email_verified = 12;
  string domain_id = 21;
  string created_at = 31;
  string last_accessed_at = 32;
}


//{
//  "query": {
//    "filter": [
//      {
//        "k": "language",
//        "v": "en",
//        "o": "eq"
//      }
//    ]
//  }
//}
message WorkspaceUserSearchQuery {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }

  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string user_id = 2;
  // +optional
  string name = 3;
  // +optional
  State state = 4;
  // +optional
  string email = 5;
  // +optional
  spaceone.api.identity.v2.AuthType auth_type = 6;
  // +optional
  string role_type = 7;
  string workspace_id = 21;
}

//{
//  "results": [
//      {
//          "user_id": "wonny@cloudforet.io",
//          "name": "Wonny",
//          "state": "ENABLED",
//          "email": "wonny@cloudforet.io",
//          "auth_type": "LOCAL",
//          "role_type": "USER",
//          "language": "en",
//          "timezone": "UTC",
//          "api_key_count": 2,
//          "role_binding_info": {
//              "user_id": "wonny@cloudforet.io",
//              "workspace_id": "workspace-99d4nn0c14ae",
//              "domain_id": "domain-1234ee0c14ae",
//              "role_binding_id": "rb-11d4eeaa1411",
//              "role_id": "managed-workspace-member",
//              "role_type": "MANAGED",
//              "resource_group": "WORKSPACE",
//              "created_at": "2024-11-12T06:06:04.999Z"
//          },
//          "domain_id": "domain-1234ee0c14ae",
//          "created_at": "2024-11-12T06:06:04.999Z",
//          "last_accessed_at": "2024-11-12T06:06:04.999Z"
//      }
//  ]
//}
message WorkspaceUsersInfo {
  repeated WorkspaceUserInfo results = 1;
  int32 total_count = 2;
}


//{
//  "user_id": "wonny@cloudforet.io",
//  "name": "Wonny",
//  "state": "ENABLED"
//}
message UserSummaryInfo {
  enum State {
    STATE_NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }

  string user_id = 1;
  string name = 2;
  State state = 3;
  AuthType auth_type = 4;
}


//{
//    "results": [
//        {
//           "user_id": "wonny@cloudforet.io",
//           "name": "Wonny",
//           "state": "ENABLED",
//           "auth_type": "LOCAL"
//        },
//        {
//            "user_id": "belty@cloudforet.io",
//            "name": "Belty",
//            "state": "ENABLED",
//            "auth_type": "LOCAL"
//        },
//        {
//            "user_id": "bolby@cloudforet.io",
//            "state": "PENDING",
//            "auth_type": "LOCAL"
//        },
//        {
//            "user_id": "cuby@cloudforet.io",
//            "state": "PENDING",
//            "auth_type": "LOCAL"
//        },
//        {
//            "user_id": "musly@cloudforet.io",
//            "state": "PENDING",
//            "auth_type": "LOCAL"
//        }
//    ],
//    "total_count": 21
//}
message UsersSummaryInfo {
  repeated UserSummaryInfo results = 1;
  int32 total_count = 2;
}


message WorkspaceUserStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
  string workspace_id = 21;
}

