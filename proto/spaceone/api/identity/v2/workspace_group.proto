syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";


service WorkspaceGroup {
  rpc create (CreateWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/create"
      body: "*"
    };
  }

  rpc update (UpdateWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/update"
      body: "*"
    };
  }

  rpc delete (WorkspaceGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/delete"
      body: "*"
    };
  }

  rpc add_workspaces (WorkspacesWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/add-workspaces"
      body: "*"
    };
  }

  rpc remove_workspaces (WorkspacesWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/remove-workspaces"
      body: "*"
    };
  }

  rpc find_users (WorkspaceGroupFindRequest) returns (WorkspaceGroupUsersSummaryInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/find-users"
      body: "*"
    };
  }

  rpc add_users (UsersWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/add-users"
      body: "*"
    };
  }

  rpc remove_users (UsersWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/remove-users"
      body: "*"
    };
  }

  rpc get (WorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/get"
      body: "*"
    };
  }

  rpc list (WorkspaceGroupSearchQuery) returns (WorkspaceGroupsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/list"
      body: "*"
    };
  }

  rpc stat (WorkspaceGroupStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/stat"
      body: "*"
    };
  }
}

message CreateWorkspaceGroupRequest {
  string name = 1;
  // +optional
  google.protobuf.Struct tags = 2;
}

message UpdateWorkspaceGroupRequest {
  string workspace_group_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct tags = 3;
}

message WorkspacesWorkspaceGroupRequest {
  string workspace_group_id = 1;
  repeated string workspaces = 2;
}

message WorkspaceGroupFindRequest {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }

  string keyword = 1;
  // +optional
  State state = 2;
  // +optional
  spaceone.api.core.v2.Page page = 3;
  string workspace_group_id = 21;
}

message UsersWorkspaceGroupRequest {
  string workspace_group_id = 1;
  repeated google.protobuf.Struct users = 2;
}

message WorkspaceGroupRequest {
  string workspace_group_id = 1;
}

message WorkspaceGroupUserInfo {
  string user_id = 1;
  string role_id = 2;
  string role_type = 3;
}

message WorkspaceGroupInfo {
  string workspace_group_id = 1;
  string name = 2;
  repeated string workspaces = 3;
  repeated WorkspaceGroupUserInfo users = 4;
  google.protobuf.Struct tags = 5;
  string created_by = 6;
  string updated_by = 7;
  string domain_id = 21;
  string created_at = 31;
  string updated_at = 32;
}

message WorkspaceGroupSearchQuery {
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string workspace_group_id = 2;
  // +optional
  string name = 3;
  // +optional
  string created_by = 4;
  // +optional
  string updated_by = 5;
}

message WorkspaceGroupsInfo {
  repeated WorkspaceGroupInfo results = 1;
  int32 total_count = 2;
}

message WorkspaceGroupUserSummaryInfo {
  enum State {
    STATE_NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
    PENDING = 3;
  }

  string user_id = 1;
  string name = 2;
  State state = 3;
}

message WorkspaceGroupUsersSummaryInfo {
  repeated WorkspaceGroupUserSummaryInfo results = 1;
  int32 total_count = 2;
}

message WorkspaceGroupStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}
