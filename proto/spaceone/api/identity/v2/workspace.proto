
syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Workspace {
  rpc create (CreateWorkSpaceRequest) returns (WorkspaceInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace/create"
      body: "*"
    };
  }

  rpc update (UpdateWorkSpaceRequest) returns (WorkspaceInfo) {
      option (google.api.http) = {
        post: "/identity/v2/workspace/update"
        body: "*"
      };
  }

  rpc delete (WorkspaceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/delete"
        body: "*"
      };
  }

  rpc enable (WorkspaceRequest) returns (WorkspaceInfo) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/enable"
        body: "*"
      };
  }

  rpc disable (WorkspaceRequest) returns (WorkspaceInfo) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/disable"
        body: "*"
      };
  }

  rpc get (WorkspaceRequest) returns (WorkspaceInfo) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/get"
        body: "*"
      };
  }

  rpc list (WorkspaceSearchQuery) returns (WorkspacesInfo) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/list"
        body: "*"
      };
  }

  rpc stat (WorkspaceStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
        post: "/identity/v2/workspace/stat"
        body: "*"
      };
  }
}


message CreateWorkSpaceRequest {
  string name = 1;
  google.protobuf.Struct tags = 2;
  string domain_id = 21;
}

message UpdateWorkSpaceRequest {
  string workspace_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct tags = 3;
  string domain_id = 21;
}

message WorkspaceRequest {
  string workspace_id = 1;
  string domain_id = 21;
}


message WorkspaceSearchQuery {
  // +optional
  spaceone.api.core.v1.Query query = 1;
  // +optional
  string workspace_id = 2;
  // +optional
  string name = 3;
  string domain_id = 21;
}

message WorkspaceInfo {
  enum State {
    NONE = 0;
    ENABLED = 1;
    DISABLED = 2;
  }
  string workspace_id = 1;
  string name = 2;
  State state = 3;
  google.protobuf.Struct tags = 4;
  string domain_id = 21;
  string created_at = 31;
}

message WorkspacesInfo {
  repeated WorkspaceInfo results = 1;
  int32 total_count = 2;
}

message WorkspaceStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
    // +optional
    string workspace_id = 3;
}