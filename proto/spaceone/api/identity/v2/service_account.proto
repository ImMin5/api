syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/identity/v2/app.proto";


service ServiceAccount {
  rpc create (CreateServiceAccountRequest) returns (ServiceAccountInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/create"
      body: "*"
    };
  }

  rpc update (UpdateServiceAccountRequest) returns (ServiceAccountInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/update"
      body: "*"
    };
  }

  rpc update_secret_data (UpdateServiceAccountSecretRequest) returns (ServiceAccountInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/update-secret-data"
      body: "*"
    };
  }

  rpc delete_secret_data (ServiceAccountRequest) returns (ServiceAccountInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/delete-secret-data"
      body: "*"
    };
  }

  rpc delete (ServiceAccountRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/delete"
      body: "*"
    };
  }

  rpc get (ServiceAccountRequest) returns (ServiceAccountInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/get"
      body: "*"
    };
  }

  rpc list (ServiceAccountSearchQuery) returns (ServiceAccountsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/list"
      body: "*"
    };
  }

  rpc stat (ServiceAccountStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/identity/v2/service-account/stat"
      body: "*"
    };
  }
}

message ServiceAccountAssetInfo {
  float server_count = 1;
  float database_count = 2;
  float storage_size = 3;
}

message ServiceAccountCostInfo {
  float day = 1;
  float month = 2;
}

message CreateServiceAccountRequest {
  string name = 1;
  google.protobuf.Struct data = 2;
  string provider = 3;
  // +optional
  string secret_schema_id = 4;
  // +optional
  google.protobuf.Struct secret_data = 5;
  // +optional
  google.protobuf.Struct tags = 6;
  // +optional
  string trusted_account_id = 21;
  string project_id = 22;
}

message UpdateServiceAccountRequest {
  string service_account_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct data = 3;
  // +optional
  google.protobuf.Struct tags = 4;
  // +optional
  string project_id = 23;
}

message UpdateServiceAccountSecretRequest {
  string service_account_id = 1;
  string secret_schema_id = 2;
  google.protobuf.Struct secret_data = 3;
  // +optional
  string trusted_account_id = 21;
}

message ServiceAccountRequest {
  string service_account_id = 1;
}

message ServiceAccountInfo {
  enum State {
    NONE = 0;
    PENDING = 1;
    ACTIVE = 2;
    INACTIVE = 3;
    DELETED = 4;
  }

  string service_account_id = 1;
  string name = 2;
  State state = 3;
  google.protobuf.Struct data = 4;
  string provider = 5;
  google.protobuf.Struct tags = 6;
  string reference_id = 7;
  bool is_managed = 8;

  ServiceAccountAssetInfo asset_info = 11;
  ServiceAccountCostInfo cost_info = 12;

  string domain_id = 21;
  string workspace_id = 22;
  string project_id = 23;
  string trusted_account_id = 24;
  string secret_schema_id = 25;
  string secret_id = 26;
  string created_at = 31;
  string last_synced_at = 32;
  string deleted_at = 33;
  string inactivated_at = 34;
}

message ServiceAccountSearchQuery {
  enum State {
    NONE = 0;
    PENDING = 1;
    ACTIVE = 2;
    INACTIVE = 3;
    DELETED = 4;
  }

  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string service_account_id = 2;
  // +optional
  string name = 3;
  // +optional
  string state = 4;
  // +optional
  string provider = 5;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 23;
  // +optional
  string trusted_account_id = 24;
  // +optional
  string secret_schema_id = 25;
  // +optional
  string secret_id = 26;
}

message ServiceAccountsInfo {
  repeated ServiceAccountInfo results = 1;
  int32 total_count = 2;
}

message ServiceAccountStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}
