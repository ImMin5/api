syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service ServiceAccount {
    rpc create (CreateServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/create"
            body: "*"
        };
    }

    rpc update (UpdateServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/update"
            body: "*"
        };
    }

    rpc change_trusted_service_account (ChangeTrustedAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/change-trusted-service-account"
            body: "*"
        };
    }

    rpc delete (ServiceAccountRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/delete"
            body: "*"
        };
    }

    rpc get (ServiceAccountRequest) returns (ServiceAccountInfo) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/get"
            body: "*"
        };
    }
    rpc list (ServiceAccountSearchQuery) returns (ServiceAccountsInfo) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/list"
            body: "*"
        };
    }
    rpc stat (ServiceAccountStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v2/service-account/stat"
            body: "*"
        };
    }
}

message CreateServiceAccountRequest {
    string name = 1;
    google.protobuf.Struct data = 2;
    string provider = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    // +optional
    string domain_id = 21;
    string workspace_id = 22;
    string project_id = 23;
    // +optional
    string trusted_service_account_id = 24;
}

message UpdateServiceAccountRequest {
    string service_account_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct data = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string domain_id = 21;
    string workspace_id = 22;
    // +optional
    string project_id = 23;
}

message ChangeTrustedAccountRequest {
    string service_account_id = 1;
    string trusted_service_account_id = 2;
    string domain_id = 21;
    string workspace_id = 22;
}

message ServiceAccountRequest {
    string service_account_id = 1;
    string domain_id = 21;
    string workspace_id = 22;
}

message ServiceAccountSearchQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string service_account_id = 2;
    // +optional
    string name = 3;
    // +optional
    string provider = 4;
    // +optional
    bool has_secret = 5;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
    // +optional
    string project_id = 23;
    // +optional
    string trusted_service_account_id = 24;
}

message ServiceAccountInfo {
    string service_account_id = 1;
    string name = 2;
    google.protobuf.Struct data = 3;
    string provider = 4;
    google.protobuf.Struct tags = 5;
    string domain_id = 21;
    string workspace_id = 22;
    string project_id = 23;
    string trusted_service_account_id = 24;
    string created_at = 31;
}

message ServiceAccountsInfo {
    repeated ServiceAccountInfo results = 1;
    int32 total_count = 2;
}

message ServiceAccountStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 21;
    // +optional
    string workspace_id = 22;
}