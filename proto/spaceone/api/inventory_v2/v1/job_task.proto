// A JobTask is a unit for collecting external cloud resources. The resource belongs to a specific service account.
syntax = "proto3";

package spaceone.api.inventory_v2.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/inventory-v2/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/inventory_v2/v1/collector.proto";

service JobTask {

  // Deletes a specific JobTask. You must specify the `job_task_id` of the JobTask to delete.
  rpc delete (JobTaskRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/inventory-v2/v1/job-task/delete"
      body: "*"
    };
  }

  // Gets a specific JobTask. Prints detailed information about the JobTask, including its state, updated or failure counts, and error log.
  rpc get (JobTaskRequest) returns (JobTaskInfo) {
    option (google.api.http) = {
      post: "/inventory-v2/v1/job-task/get"
      body: "*"
    };
  }

  rpc get_detail (JobTaskRequest) returns (JobTaskDetailInfo) {
    option (google.api.http) = {
      post: "/inventory-v2/v1/job-task/get-detail"
      body: "*"
    };
  }

  // Gets a list of all JobTasks in a specific Job. You can use a query to get a filtered list of JobTasks.
  rpc list (JobTaskQuery) returns (JobTasksInfo) {
    option (google.api.http) = {
      post: "/inventory-v2/v1/job-task/list"
      body: "*"
    };
  }

  rpc stat (JobTaskStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/inventory-v2/v1/job-task/stat"
      body: "*"
    };
  }
}

message ErrorInfo {
  string error_code = 1;
  string message = 2;
  google.protobuf.Struct additional = 3;
}

//{
//    "job_task_id": "job-task-123456789012"
//}
message JobTaskRequest {
  string job_task_id = 1;
}

//{
//    "query": {
//        "filter": [
//            {
//                "key": "status",
//                "value": "FAILURE",
//                "operator": "eq"
//            }
//        ],
//        "page": {
//            "start": 1,
//            "limit": 5
//        }
//    }
//}
message JobTaskQuery {
  enum JobTaskStatus {
    JOB_TASK_STATE_NONE = 0;
    PENDING = 1;
    CANCELED = 2;
    IN_PROGRESS = 3;
    SUCCESS = 4;
    FAILURE = 5;
  }
  // +optional
  spaceone.api.core.v2.Query query = 1;
  // +optional
  string job_task_id = 2;
  // +optional
  JobTaskStatus status = 3;
  // +optional
  string provider = 4;
  // +optional
  string workspace_id = 21;
  // +optional
  string project_id = 22;
  // +optional
  string service_account_id = 23;
  // +optional
  string job_id = 24;
  // +optional
  string secret_id = 25;
}

//{
//      "job_task_id": "job-task-123456789012",
//      "status": "FAILURE",
//      "updated_count": 199,
//      "failure_count": 1,
//      "errors": [
//          {
//              "error_code": "ERROR_PLUGIN",
//              "message": "{\"tags\": [\"Could not interpret the value as a list\"]}",
//              "additional": {
//                  "domain_id": "domain-123456789012",
//                  "resource_id": "eventarc-us-central1-function",
//                  "resource_type": "inventory.CloudService",
//                  "cloud_service_group": "Pub/Sub",
//                  "cloud_service_type": "Subscription",
//                  "provider": "google_cloud"
//              }
//          }
//      ],
//      "job_id": "job-123456789012",
//      "secret_id": "secret-123456789012",
//      "provider": "google_cloud",
//      "service_account_id": "sa-123456789012",
//      "collector_id": "collector-123456789012",
//      "project_id": "project-123456789012",
//      "domain_id": "domain-123456789012",
//      "created_at": "2022-01-01T11:00:02.588Z",
//      "started_at": "2022-01-01T11:00:02.819Z",
//      "finished_at": "2022-01-01T11:00:34.398Z"
//}
message JobTaskInfo {
  enum JobTaskStatus {
    JOB_TASK_STATE_NONE = 0;
    PENDING = 1;
    CANCELED = 2;
    IN_PROGRESS = 3;
    SUCCESS = 4;
    FAILURE = 5;
  }

  string job_task_id = 1;
  JobTaskStatus status = 2;
  string provider = 3;
  int32 created_count = 4;
  int32 updated_count = 5;
  int32 failure_count = 6;
  int32 deleted_count = 7;
  int32 disconnected_count = 8;

  string domain_id = 21;
  string workspace_id = 22;
  string project_id = 23;
  string collector_id = 24;
  string service_account_id = 25;
  string job_id = 26;
  string secret_id = 27;

  string created_at = 31;
  string started_at = 32;
  string updated_at = 33;
  string finished_at = 34;
}

//{
//    "results": [
//        {
//            "job_task_id": "job_task-69b301d0fbfc",
//            "status": "SUCCESS",
//            "updated_count": 55,
//            "job_id": "job-587a3d3b4db3",
//            "secret_id": "secret-957e407bfc15",
//            "provider": "aws",
//            "service_account_id": "sa-a41ff4765671",
//            "project_id": "project-77dfad3f7cd3",
//            "domain_id": "domain-58010aa2e451",
//            "workspace_id": "workspace-78099aa2e451",
//            "created_at": "2022-06-17T08:00:00.680Z",
//            "started_at": "2022-06-17T08:00:00.914Z",
//            "updated_at": "2022-06-17T08:00:00.814Z",
//            "finished_at": "2022-06-17T08:05:48.933Z"
//        },
//        {
//            "job_task_id": "job_task-c5077338cf23",
//            "status": "SUCCESS",
//            "created_count": 123,
//            "updated_count": 1921,
//            "job_id": "job-587a3d3b4db3",
//            "secret_id": "secret-1cd7417c1889",
//            "provider": "aws",
//            "service_account_id": "sa-5e186fcc7c91",
//            "project_id": "project-18655561c535",
//            "workspace_id": "workspace-1c1b7b7b7b7b",
//            "domain_id": "domain-58010aa2e451",
//            "created_at": "2022-06-17T08:00:00.582Z",
//            "started_at": "2022-06-17T08:00:00.814Z",
//            "updated_at": "2022-06-17T08:00:00.814Z",
//            "finished_at": "2022-06-17T08:07:31.995Z"
//        }
//    ],
//    "total_count": 2
//}
message JobTasksInfo {
  repeated JobTaskInfo results = 1;
  int32 total_count = 2;
}


message JobTaskDetailInfo{
  string job_task_id = 1;
  google.protobuf.Struct created_info = 2;
  google.protobuf.Struct updated_info = 3;
  google.protobuf.Struct failure_info = 4;
  google.protobuf.Struct deleted_info = 5;
  google.protobuf.Struct disconnected_info = 6;

  string domain_id = 21;
  string workspace_id = 22;
  string project_id = 23;
  string job_id = 24;
  string created_at = 31;
}
message JobTaskStatQuery {
  spaceone.api.core.v2.StatisticsQuery query = 1;
}
