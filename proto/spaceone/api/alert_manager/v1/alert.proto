syntax = "proto3";

package spaceone.api.alert_manager.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/alert-manager/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";

service Alert {
    rpc create (AlertCreateRequest) returns (ServiceInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/create"
            body: "*"
        };
    }
    rpc update (AlertUpdateRequest) returns (ServiceInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/update"
            body: "*"
        };
    }
    rpc delete (AlertRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/delete"
            body: "*"
        };
    }
    rpc get (AlertRequest) returns (ServiceInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/get"
            body: "*"
        };
    }
    rpc list (AlertSearchQuery) returns (ServicesInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/list"
            body: "*"
        };
    }
    rpc history (AlertChangeMemberRequest) returns (ServiceInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/update"
            body: "*"
        };
    }
    rpc analyze (AlertChangeMemberRequest) returns (ServiceInfo) {
        option (google.api.http) = {
            post: "/alert-manager/v1/alert/update"
            body: "*"
        };
    }
    rpc stat (AlertStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/alert_manager/v1/alert/stat"
            body: "*"
        };
    }
}


//////////
//Receive
//////////

message Members {
    repeated string USER = 1;
    repeated string USER_GROUP = 2;
}

message Options {
    enum notification_urgency_ {
        NOTIFICATION_NONE = 0;
        ALL = 1;
        HIGH_ONLY = 2;
    }
    enum recovery_mode {
        RECOVERY_NONE = 0;
        AUTO = 1;
        MANUAL = 2;
    }
}

message AlertCreateRequest {
    string name = 1;
    string service_key = 2;
    // +optional
    string description = 3;
    // +optional
    google.protobuf.Struct members = 4;
    // +optional
    Options options = 5;
}

message AlertUpdateRequest {
    string service_id = 1;
    // +optional
    string name = 2;
    // +optional
    string description = 3;
    // +optional
    Options options = 4;
    string escalation_policy_id = 5;
}

message AlertChangeMemberRequest {
    string service_id = 1;
    Members members = 2;
}

message AlertRequest {
    string service_id = 1;
}

message AlertSearchQuery {
    // +optional
    spaceone.api.core.v2.Query query = 1;
    // +optional
    string service_id = 2;
    // +optional
    string escalation_policy_id = 3;
    // +optional
    bool include_details = 4;
}

message AlertStatQuery {
    spaceone.api.core.v2.StatisticsQuery query = 1;
}


//////////
//Returns
//////////

message ServiceInfo {
    string service_id = 1;
    string name = 2;
    string service_key = 3;
    string description = 4;
    google.protobuf.Struct members = 5;
    Options options = 6;
    // +optional
    google.protobuf.Struct channels = 7;
    // +optional
    google.protobuf.Struct webhooks = 8;
    // +optional
    google.protobuf.Struct alerts = 9;
    string escalation_policy_id = 10;
    string workspace_id = 11;
    string domain_id = 12;
    string created_at = 13;
    string updated_at = 14;
}

message ServicesInfo {
    repeated ServiceInfo results = 1;
    int32 total_count = 2;
}


///////////////
//Data Formats
///////////////

//Channel
message Channels {
    repeated ServiceChannelsInfo service_channel_info = 1;
}

message ServiceChannelsInfo {
    string channel_id = 1;
    string name = 2;
    string state = 3;
    string channel_type = 4;
    google.protobuf.Struct data = 5;
    google.protobuf.Struct schedule = 6;
    google.protobuf.Struct tags = 7;
    string secret_id = 8;
    string protocol_id = 9;
    string service_id = 10;
    string workspace_id = 11;
    string domain_id = 12;
    string created_at = 13;
}

//Webhooks
message Webhooks {
    repeated WebhookInfo webhook_info = 1;
}
message WebhookInfo {
    string webhook_id = 1;
}

//Alerts
message Alerts {
    AlertInfo TOTAL = 1;
    AlertInfo TRIGGERRED = 2;
    AlertInfo ACKNOWLEDGED = 3;
}
message AlertInfo {
    int32 high = 1;
    int32 low = 2;
}