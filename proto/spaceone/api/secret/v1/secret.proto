// A Secret is an external data, encrypted by CloudForet.
syntax = "proto3";

package spaceone.api.secret.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/secret/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Secret {
    // Creates a new Secret. When creating the resource, external `data` is encrypted, and a `secret_id` is issued for data access by other microservices.
    rpc create (CreateSecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/create"
            body: "*"
        };
    }
    
    // Updates a specific Secret. You can make changes in Secret settings, including `name` and`tags`.
    rpc update (UpdateSecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/update"
            body: "*"
        };
    }
    
    // Deletes a specific Secret. You must specify the `secret_id` of the Secret to delete.
    rpc delete (SecretRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret/delete"
            body: "*"
        };
    }
    
    // Updates encrypted data of a specific Secret resource. For example, to change the parameter `data`, external data to encrypt, you can use `update_data` to create new encrypted data based on the changed `data` and store it in the Secret resource.
    rpc update_data (UpdateSecretDataRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret/update-data"
            body: "*"
        };
    }
    
    //Gets a specific Secret. Prints detailed information about the Secret, including  `name`, `tags`, `schema`, and `provider`.
    rpc get_data (SecretRequest) returns (SecretDataInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/get-data"
            body: "*"
        };
    }
    
    // Gets a specific Post. You must specify the `post_id` of the Post to get, and the `board_id` of the Board where the child Post to get belongs. Prints detailed information about the Post.
    rpc get (GetSecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/get"
            body: "*"
        };
    }
    
    // Gets a list of all Posts. You can use a query to get a filtered list of Posts.
    rpc list (SecretQuery) returns (SecretsInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/list"
            body: "*"
        };
    }
    
    rpc stat (SecretStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/secret/v1/secret/stat"
            body: "*"
        };
    }
}

enum SecretType {
    NONE = 0;
    CREDENTIALS = 1;
}

//{
//    "name": "aws-dev",
//    "data": "********",
//    "secret_type": "CREDENTIALS",
//    "schema": "aws_access_key",
//    "service_account_id": "sa-123456789012",
//    "project_id": "project-123456789012",
//    "domain_id": "domain-123456789012"
//}
message CreateSecretRequest {
    string name = 1;
    google.protobuf.Struct data = 2;
    SecretType secret_type = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    // +optional
    string schema = 5;
    // +optional
    string service_account_id = 6;
    // +optional
    string project_id = 7;
    // +optional
    string trusted_secret_id = 11;
    
    string domain_id = 21;
}

//{
//    "secret_id": "secret-123456789012",
//    "name": "aws-dev2",
//    "tags": { "a": "b"},
//    "project_id": "project-123456789012",
//    "release_project": true,
//    "domain_id": "domain-123456789012"
//}
message UpdateSecretRequest {
    string secret_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct tags = 3;
    // +optional
    string project_id = 4;
    string domain_id = 5;
    // +optional
    bool release_project = 6;
}

//{
//    "secret_id": "secret-123456789012",
//    "domain_id": "domain-123456789012"
//}
message SecretRequest {
    string secret_id = 1;
    string domain_id = 2;
}

//{
//    "secret_id": "secret-123456789012",
//     "data": "********",
//     "domain_id": "domain-123456789012"
//}
message UpdateSecretDataRequest {
    string secret_id = 1;
    google.protobuf.Struct data = 2;
    string domain_id = 3;
    // +optional
    string schema = 4;
}

//{
//    "secret_id": "secret-123456789012",
//    "domain_id": "domain-123456789012"
//}
message GetSecretRequest {
    string secret_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {},
//    "domain_id": "domain-123456789012"
//}
message SecretQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string secret_id = 2;
    /// +optional
    string name = 3;
    // +optional
    SecretType secret_type = 4;
    // +optional
    string schema = 6;
    // +optional
    string provider = 7;
    // +optional
    string service_account_id = 8;
    // +optional
    string trusted_secret_id = 9;
    string domain_id = 21;
}

message SecretDataInfo {
    google.protobuf.Struct data = 1;
    bool encrypted = 2;
    google.protobuf.Struct encrypt_options = 3;
}

//{
//    "secret_id": "secret-123456789012",
//    "name": "aws-dev",
//    "secret_type": "CREDENTIALS",
//    "tags": {},
//    "schema": "aws_access_key",
//    "provider": "aws",
//    "service_account_id": "sa-123456789012",
//    "project_id": "project-123456789012",
//    "domain_id": "domain-123456789012",
//    "created_at": "2022-01-01T06:10:14.851Z"
//}
message SecretInfo {
    string secret_id = 1;
    string name = 2;
    SecretType secret_type = 3;
    google.protobuf.Struct tags = 5;
    string schema = 6;
    string provider = 7;
    string service_account_id = 8;
    string project_id = 9;
    string trusted_secret_id = 10;
    string domain_id = 21;
    string created_at = 22;
}

//{
//    "results": [
//        {
//           "secret_id": "secret-123456789012",
//           "name": "aws-dev",
//           "secret_type": "CREDENTIALS",
//           "tags": {},
//           "schema": "aws_access_key",
//           "provider": "aws",
//           "service_account_id": "sa-123456789012",
//           "project_id": "project-123456789012",
//           "domain_id": "domain-123456789012",
//           "created_at": "2022-01-01T06:10:14.851Z"
//        },
//        {
//            "secret_id": "secret-987654321098",
//            "name": "plugin-credentials",
//            "secret_type": "CREDENTIALS",
//            "tags": {},
//            "domain_id": "domain-123456789012",
//            "created_at": "2022-01-01T02:31:01.709Z"
//        }
//    ],
//    "total_count": 2
//}
message SecretsInfo {
    repeated SecretInfo results = 1;
    int32 total_count = 2;
}

message SecretStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}