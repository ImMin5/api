// A Trusted Secret is an external data, encrypted by CloudForet. 
syntax = "proto3";

package spaceone.api.secret.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/secret/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service TrustedSecret {
    
    // Creates a new Trusted Secret. When creating the resource, external `data` is encrypted, and a `trusted_secret_id` is issued for data access by other microservices.
    rpc create (CreateTrustedSecretRequest) returns (TrustedSecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/create"
            body: "*"
        };
    }
    
    // Updates a specific Secret. You can make changes in Secret settings, including `name` and`tags`.
    rpc update (UpdateTrustedSecretRequest) returns (TrustedSecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/update"
            body: "*"
        };
    }
    
    // Deletes a specific Secret. You must specify the `secret_id` of the Secret to delete.
    rpc delete (TrustedSecretRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/delete"
            body: "*"
        };
    }
    
    // Updates encrypted data of a specific Secret resource. For example, to change the parameter `data`, external data to encrypt, you can use `update_data` to create new encrypted data based on the changed `data` and store it in the Secret resource.
    rpc update_data (UpdateTrustedSecretDataRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/update-data"
            body: "*"
        };
    }
    
    // Gets a specific Post. You must specify the `post_id` of the Post to get, and the `board_id` of the Board where the child Post to get belongs. Prints detailed information about the Post.
    rpc get (GetTrustedSecretRequest) returns (TrustedSecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/get"
            body: "*"
        };
    }
    
    // Gets a list of all Posts. You can use a query to get a filtered list of Posts.
    rpc list (TrustedSecretQuery) returns (TrustedSecretsInfo) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/list"
            body: "*"
        };
    }
    
    rpc stat (TrustedSecretStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/secret/v1/trusted-secret/stat"
            body: "*"
        };
    }
}

//{
//    "name": "aws-dev",
//    "data": "********",
//    "schema": "aws_access_key",
//    "service_account_id": "sa-123456789012",
//    "tags": {},
//    "domain_id": "domain-123456789012"
//}
message CreateTrustedSecretRequest {
    string name = 1;
    google.protobuf.Struct data = 2;
    // +optional
    google.protobuf.Struct tags = 3;
    // +optional
    string schema = 4;
    // +optional
    string service_account_id = 5;
    string domain_id = 11;
}


//{
//    "trusted_secret_id": "trusted-secret-123456789012",
//    "name": "aws-dev2",
//    "tags": { "a": "b"},
//    "domain_id": "domain-123456789012"
//}
message UpdateTrustedSecretRequest {
    string trusted_secret_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct tags = 3;
    string domain_id = 11;
}

//{
//    "trusted_secret_id": "trusted-secret-123456789012",
//    "domain_id": "domain-123456789012"
//}
message TrustedSecretRequest {
    string trusted_secret_id = 1;
    string domain_id = 2;
}

//{
//    "trusted_secret_id": "trusted-secret-123456789012",
//    "data": "********",
//    "domain_id": "domain-123456789012"
//}
message UpdateTrustedSecretDataRequest {
    string trusted_secret_id = 1;
    google.protobuf.Struct data = 2;
    // +optional
    string schema = 3;
    string domain_id = 11;

}

//{
//    "trusted_secret_id": "trusted-secret-123456789012",
//    "domain_id": "domain-123456789012"
//}
message GetTrustedSecretRequest {
    string trusted_secret_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {},
//    "domain_id": "domain-123456789012"
//}
message TrustedSecretQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string trusted_secret_id = 2;
    /// +optional
    string name = 3;
    // +optional
    string schema = 6;
    // +optional
    string provider = 7;
    // +optional
    string service_account_id = 9;
    string domain_id = 21;
}

//{
//    "trusted_secret_id": "trusted-secret-123456789012",
//    "name": "aws-dev",
//    "tags": {},
//    "schema": "aws_access_key",
//    "provider": "aws",
//    "service_account_id": "sa-123456789012",
//    "domain_id": "domain-123456789012",
//    "created_at": "2022-01-01T06:10:14.851Z"
//}
message TrustedSecretInfo {
    string trusted_secret_id = 1;
    string name = 2;
    google.protobuf.Struct tags = 3;
    string schema = 4;
    string provider = 5;
    string service_account_id = 6;
    string project_id = 7;
    string domain_id = 21;
    string created_at = 22;
}

//{
//    "results": [
//        {
//           "trusted_secret_id": "trusted-secret-123456789012",
//           "name": "aws-dev",
//           "tags": {},
//           "schema": "aws_access_key",
//           "provider": "aws",
//           "service_account_id": "sa-123456789012",
//           "domain_id": "domain-123456789012",
//           "created_at": "2022-01-01T06:10:14.851Z"
//        },
//        {
//            "trusted_secret_id": "trusted-secret-987654321098",
//            "name": "plugin-credentials",
//            "tags": {},
//            "domain_id": "domain-123456789012",
//            "created_at": "2022-01-01T02:31:01.709Z"
//        }
//    ],
//    "total_count": 2
//}
message TrustedSecretsInfo {
    repeated TrustedSecretInfo results = 1;
    int32 total_count = 2;
}

message TrustedSecretStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}