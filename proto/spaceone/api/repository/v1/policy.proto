// A Policy is a resource managing page access permissions. This resource can be used in all domains if it is defined in the `repository` microservice.
syntax = "proto3";

package spaceone.api.repository.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/repository/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/repository/v1/repository.proto";


service Policy {
    // Creates a new Policy. The parameter `policy_id`, an identifier of Policy resources, can only include lowercase alphabets, numbers, and hyphens(-). The parameter `permissions` is a list type data describing page access permissions.
    rpc create (CreatePolicyRequest) returns (PolicyInfo) {
        option (google.api.http) = {
            post: "/repository/v1/policy/create"
            body: "*"
        };
    }
    
    // Updates a specific Policy. You can make changes in Policy settings, including `name`, `labels`, `tags`, and `permissions`. The parameter `policy_id` cannot be updated.
    rpc update (UpdatePolicyRequest) returns (PolicyInfo) {
        option (google.api.http) = {
            post: "/repository/v1/policy/update"
            body: "*"
        };
    }
    
    // Deletes a specific Policy. You must specify the `policy_id` of the Policy to delete, as the `policy_id` is an identifier of Policy resources.
    rpc delete (PolicyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/repository/v1/policy/delete"
            body: "*"
        };
    }
    
    // Gets a specific Policy. You must specify the `policy_id` of the Policy to get, as the `policy_id` is an identifier of Policy resources. You can use the parameter `repository_id` to limit the scope of the method to a specific Repository.
    rpc get (GetRepositoryPolicyRequest) returns (PolicyInfo) {
        option (google.api.http) = {
            post: "/repository/v1/policy/get"
            body: "*"
        };
    }
    
    // Gets a list of all Policies in a specific Repository. The parameter `repository_id` is used as an identifier of a Repository to get its list of Policies. You can use a query to get a filtered list of Policies.
    rpc list (PolicyQuery) returns (PoliciesInfo) {
        option (google.api.http) = {
            post: "/repository/v1/policy/list"
            body: "*"
        };
    }
    
    rpc stat (PolicyStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/repository/v1/policy/stat"
            body: "*"
        };
    }
}

//{
//    "policy_id": "policy-custom-full-acess",
//    "name": "Full Access",
//    "permissions": ["*"],
//    "labels": [],
//    "tags": {},
//    "domain_id": "domain-123456789012"
//}
message CreatePolicyRequest {
    string name = 1;
    repeated string permissions = 2;
    string policy_id = 3;
    // +optional
    google.protobuf.ListValue labels = 11;
    // +optional
    google.protobuf.Struct tags = 12;
    // +optional
    string project_id = 21;
    string domain_id = 22;
}

//{
//    "policy_id": "policy-custom-full-acess",
//    "name": "Full Access",
//    "permissions": ["*"],
//    "labels": [],
//    "tags": {},
//    "domain_id": "domain-123456789012"
//}
message UpdatePolicyRequest {
    string policy_id = 1;
    // +optional
    string name = 2;
    // +optional
    repeated string permissions = 3;
    // +optional
    google.protobuf.ListValue labels = 11;
    // +optional
    google.protobuf.Struct tags = 12;
    string domain_id = 21;
}

//{
//    "policy_id": "policy-123456789012"
//}
message PolicyRequest {
    string policy_id = 1;
    string domain_id = 2;
}

//{
//    "policy_id": "policy-123456789012",
//    "repository_id": "repo-123456789012"
//}
message GetRepositoryPolicyRequest {
    string policy_id = 1;
    string domain_id = 2;
    // +optional
    string repository_id = 3;
    // +optional
    repeated string only = 4;
}

//{
//    "query": {},
//    "repository_id": "repo-123456789012"
//}
message PolicyQuery {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string policy_id = 2;
    // +optional
    string name = 3;
    // +optional
    string project_id = 4;
    string repository_id = 5;
    string domain_id = 6;
    // +optional
    State state = 7;
}

//{
//    "policy_id": "policy-custom-full-acess",
//    "name": "Full Access",
//    "state": "ENABLED",
//    "permissions": [
//        "*"
//    ],
//    "labels": [],
//    "tags": {},
//    "repository_info": {
//        "repository_id": "repo-123456789012",
//        "name": "Local",
//        "repository_type": "local"
//    },
//    "domain_id": "domain-123456789012",
//    "created_at": "2022-01-01T06:45:04.582Z",
//    "updated_at": "2022-01-01T06:45:04.582Z"
//}
message PolicyInfo {
    enum State {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string policy_id = 1;
    string name = 2;
    State state = 3;
    // list of permissions
    repeated string permissions = 11;
    // list of labels
    google.protobuf.ListValue labels = 12;
    google.protobuf.Struct tags = 13;

    RepositoryInfo repository_info = 21;
    string project_id = 22;
    string domain_id = 23;

    string created_at = 31;
    string updated_at = 32;
}

//{
//    "results": [
//        {
//            "policy_id": "policy-123456789012",
//            "name": "Full Access",
//            "state": "ENABLED",
//            "permissions": [
//                "*"
//            ],
//            "labels": [],
//            "tags": {},
//            "repository_info": {
//                "repository_id": "repo-123456789012",
//                "name": "Local",
//                "repository_type": "local"
//            },
//            "domain_id": "domain-123456789012",
//            "created_at": "2022-01-01T15:42:50.943Z",
//            "updated_at": "2022-01-01T15:42:50.943Z"
//        },
//        {
//            "policy_id": "policy-987654321098",
//            "name": "Identity Admin",
//            "state": "ENABLED",
//            "permissions": [
//                "identity.*"
//            ],
//            "labels": [],
//            "tags": {},
//            "repository_info": {
//                "repository_id": "repo-123456789012",
//                "name": "Local",
//                "repository_type": "local"
//            },
//            "domain_id": "domain-123456789012",
//            "created_at": "2022-01-01T08:08:14.756Z",
//            "updated_at": "2022-01-01T08:08:14.756Z"
//        }
//    ],
//    "total_count": 2
//}
message PoliciesInfo {
    // list of PolicyInfo
    repeated PolicyInfo results = 1;
    int32 total_count = 2;
}

message PolicyStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string repository_id = 2;
    string domain_id = 3;
}