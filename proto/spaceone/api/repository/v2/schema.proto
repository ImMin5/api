syntax = "proto3";

package spaceone.api.repository.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/repository/v2";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/repository/v2/common.proto";


service Schema {
    rpc create (CreateSchemaRequest) returns (SchemaInfo) {
        option (google.api.http) = { 
            post: "/repository/v2/schema/create"
            body: "*"
        };
    }

    rpc update (UpdateSchemaRequest) returns (SchemaInfo) {
        option (google.api.http) = { 
            post: "/repository/v2/schema/update"
            body: "*"
        };
    }

    rpc sync (SchemaRequest) returns (SchemaInfo) {
        option (google.api.http) = {
            post: "/repository/v2/schema/sync"
            body: "*"
        };
    }

    rpc delete (SchemaRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { 
            post: "/repository/v2/schema/delete"
            body: "*"
        };
    }

    rpc get (GetSchemaRequest) returns (SchemaInfo) {
        option (google.api.http) = {
            post: "/repository/v2/schema/get" 
            body: "*"
        };
    }

    rpc list (SchemaQuery) returns (SchemasInfo) {
        option (google.api.http) = {
            post: "/repository/v2/schema/list"
            body: "*"
        };
    }

    rpc stat (SchemaStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { 
            post: "/repository/v2/schema/stat"
            body: "*"
        };
    }
}

message CreateSchemaRequest {
    string schema_id = 1;
    string name = 2;
    // +optional
    SyncMode sync_mode = 3;
    // +optional
    SyncOptions sync_options = 4;
    google.protobuf.Struct schema = 5;
    // +optional
    google.protobuf.ListValue labels = 6;
    // +optional
    google.protobuf.Struct tags = 7;
    string domain_id = 21;
}

message UpdateSchemaRequest {
    string schema_id = 1;
    // +optional
    string name = 2;
    // +optional
    SyncMode sync_mode = 3;
    // +optional
    SyncOptions sync_options = 4;
    // is_required: flase
    google.protobuf.Struct schema = 5;
    // +optional
    google.protobuf.ListValue labels = 6;
    // +optional
    google.protobuf.Struct tags = 7;
    string domain_id = 21;
}

message SchemaRequest {
    string schema_id = 1;
    string domain_id = 21;
}

message GetSchemaRequest {
    string schema_id = 1;
    // +optional
    repeated string only = 2;
    string domain_id = 21;
}

message SchemaQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string schema_id = 2;
    // +optional
    string name = 3;
    // +optional
    SyncMode sync_mode = 4;
    // +optional
    string remote_repository_name = 5;
    string domain_id = 21;
}

message SchemaStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 21;
}

message SchemaInfo {
    string schema_id = 1;
    string name = 2;
    SyncMode sync_mode = 3;
    SyncOptions sync_options = 4;
    google.protobuf.Struct schema = 5;
    google.protobuf.ListValue labels = 6;
    google.protobuf.Struct tags = 7;
    google.protobuf.Struct remote_repository = 8;
    string domain_id = 21;
    string created_at = 31;
}

message SchemasInfo {
    repeated SchemaInfo results = 1;
    int32 total_count = 2;
}
