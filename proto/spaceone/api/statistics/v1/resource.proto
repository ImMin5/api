/*
desc: A Resource is a resource used for analysis on all microservices used in Cloudforet.
 */
syntax = "proto3";

package spaceone.api.statistics.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/statistics/v1";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Resource {
    /*
    desc: Enables data preprocessing of different services. Although limited, it is possible to create not only basic queries but also data suitable for users' needs, such as joins between two tables created by the query, handling missing values, and sorting.
    request_example: >-
        {
            "aggregate": [
                {"query": {"resource_type": "inventory.CloudServiceType",
                           "query": {
                               "filter": [{"k": "labels", "v": ["Server"], "o": "in"},
                                          {"k": "is_primary", "v": true, "o": "eq"}], "aggregate": [{
                                   "group": {
                                       "keys": [
                                           {
                                               "key": "cloud_service_type_id",
                                               "name": "cloud_service_type_id"},
                                           {
                                               "key": "name",
                                               "name": "cloud_service_type"},
                                           {
                                               "key": "group",
                                               "name": "cloud_service_group"},
                                           {
                                               "key": "provider",
                                               "name": "provider"},
                                           {
                                               "key": "cloud_service_type_id",
                                               "name": "cloud_service_type_id"}],
                                       "fields": [
                                           {
                                               "key": "tags",
                                               "name": "tags",
                                               "operator": "first"},
                                           {
                                               "key": "labels",
                                               "name": "labels",
                                               "operator": "first"}]}}]}}},
                {"join": {"resource_type": "inventory.CloudService", "query": {"filter": [
                    {"k": "ref_cloud_service_type.cloud_service_type_id",
                     "v": ["cloud-svc-type-58c926b19aca", "cloud-svc-type-c7e5bc38d911",
                           "cloud-svc-type-8dd4d7a13b95", "cloud-svc-type-719e705cb529",
                           "cloud-svc-type-50bd62cf6e0e"], "o": "in"}], "aggregate": [{"group": {
                    "keys": [{"key": "cloud_service_type", "name": "cloud_service_type"},
                             {"key": "cloud_service_group", "name": "cloud_service_group"},
                             {"key": "provider", "name": "provider"}],
                    "fields": [{"name": "count", "operator": "count"}]}}]},
                          "keys": ["cloud_service_type", "cloud_service_group", "provider"]}},
                {"fill_na": {"data": {"count": 0.0}}}, {"formula": {"query": "count > 0"}},
                {"sort": {"key": "count", "desc": true}}],
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "total_count": 5.0,
            "results": [
                {
                    "labels": [
                        "Compute",
                        "Server"
                    ],
                    "cloud_service_type_id": "cloud-svc-type-58c926b19aca",
                    "cloud_service_type": "Instance",
                    "count": 44.0,
                    "tags": [
                        {
                            "key": "spaceone:icon",
                            "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/aws-ec2.svg"
                        }
                    ],
                    "provider": "aws",
                    "cloud_service_group": "EC2"
                },
                {
                    "tags": [
                        {
                            "key": "spaceone:icon",
                            "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/openstack/openstack_compute.svg"
                        },
                        {
                            "key": "spaceone:display_name",
                            "value": "Instance"
                        }
                    ],
                    "cloud_service_group": "Compute",
                    "cloud_service_type": "Instance",
                    "provider": "openstack",
                    "count": 12.0,
                    "labels": [
                        "Compute",
                        "Server"
                    ],
                    "cloud_service_type_id": "cloud-svc-type-50bd62cf6e0e"
                },
                {
                    "cloud_service_type": "Node",
                    "count": 8.0,
                    "provider": "kubernetes",
                    "cloud_service_type_id": "cloud-svc-type-719e705cb529",
                    "cloud_service_group": "Cluster",
                    "tags": [
                        {
                            "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/kubernetes/node.svg",
                            "key": "spaceone:icon"
                        }
                    ],
                    "labels": [
                        "Compute",
                        "Server",
                        "Container"
                    ]
                },
                {
                    "cloud_service_type_id": "cloud-svc-type-8dd4d7a13b95",
                    "cloud_service_type": "Instance",
                    "cloud_service_group": "ComputeEngine",
                    "labels": [
                        "Compute",
                        "Server"
                    ],
                    "tags": [
                        {
                            "key": "spaceone:icon",
                            "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/google_cloud/Compute_Engine.svg"
                        }
                    ],
                    "count": 5.0,
                    "provider": "google_cloud"
                },
                {
                    "tags": [
                        {
                            "value": "https://spaceone-custom-assets.s3.ap-northeast-2.amazonaws.com/console-assets/icons/azure-vm.svg",
                            "key": "spaceone:icon"
                        }
                    ],
                    "cloud_service_type": "VirtualMachine",
                    "cloud_service_group": "Compute",
                    "count": 2.0,
                    "provider": "azure",
                    "cloud_service_type_id": "cloud-svc-type-c7e5bc38d911",
                    "labels": [
                        "Compute",
                        "Server"
                    ]
                }
            ]
        }
     */
    rpc stat (ResourceStatRequest) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/statistics/v1/resource/stat"
            body: "*"
        };
    }
}

message StatAggregateQuery {
    // is_required: true
    string resource_type = 1;
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // is_required: false
    google.protobuf.Struct extend_data = 3;
}

message StatAggregateJoin {
    enum JoinType {
        LEFT = 0;
        RIGHT = 1;
        OUTER = 2;
        INNER = 3;
    }

    // is_required: true
    string resource_type = 1;
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // is_required: false
    google.protobuf.Struct extend_data = 3;
    // is_required: false
    JoinType type = 4;
    // is_required: false
    repeated string keys = 5;
}

message StatAggregateConcat {
    // is_required: true
    string resource_type = 1;
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // is_required: false
    google.protobuf.Struct extend_data = 3;
}

message SortKey {
    string key = 1;
    bool desc = 2;
}

message StatAggregateSort {
    // is_required: false
    string key = 1;
    // is_required: false
    bool desc = 2;
    // is_required: false
    repeated SortKey keys = 3;
}

message StatAggregateFormula {
    // is_required: true
    oneof formula_alias {
        string eval = 1;
        string query = 2;
    }
}

message StatAggregateFillNA {
    // is_required: true
    google.protobuf.Struct data = 1;
}

message StatAggregate {
    // is_required: true
    oneof aggregate_alias {
        StatAggregateQuery query = 1;
        StatAggregateJoin join = 2;
        StatAggregateConcat concat = 3;
        StatAggregateSort sort = 4;
        StatAggregateFormula formula = 5;
        StatAggregateFillNA fill_na = 6;
    }
}

message StatPage {
    // is_required: false
    uint32 start = 1;
    // is_required: true
    uint32 limit = 2;
}

message ResourceStatRequest {
    // is_required: true
    repeated StatAggregate aggregate = 1;
    // is_required: false
    StatPage page = 2;
    // is_required: true
    string domain_id = 3;
}
