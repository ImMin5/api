// A Resource is a resource used for analysis on all microservices used in Cloudforet.
syntax = "proto3";

package spaceone.api.statistics.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/statistics/v1";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Resource {
    // Enables data preprocessing of different services. Although limited, it is possible to create not only basic queries but also data suitable for users' needs, such as joins between two tables created by the query, handling missing values, and sorting.
    rpc stat (ResourceStatRequest) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/statistics/v1/resource/stat"
            body: "*"
        };
    }
}

message StatAggregateQuery {
    string resource_type = 1;
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // +optional
    google.protobuf.Struct extend_data = 3;
}

message StatAggregateJoin {
    enum JoinType {
        LEFT = 0;
        RIGHT = 1;
        OUTER = 2;
        INNER = 3;
    }

    string resource_type = 1;
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // +optional
    google.protobuf.Struct extend_data = 3;
    // +optional
    JoinType type = 4;
    // +optional
    repeated string keys = 5;
}

message StatAggregateConcat {
    string resource_type = 1;
    spaceone.api.core.v1.StatisticsQuery query = 2;
    // +optional
    google.protobuf.Struct extend_data = 3;
}

message SortKey {
    string key = 1;
    bool desc = 2;
}

message StatAggregateSort {
    // +optional
    string key = 1;
    // +optional
    bool desc = 2;
    // +optional
    repeated SortKey keys = 3;
}

message StatAggregateFormula {
    oneof formula_alias {
        string eval = 1;
        string query = 2;
    }
}

message StatAggregateFillNA {
    google.protobuf.Struct data = 1;
}

message StatAggregate {
    oneof aggregate_alias {
        StatAggregateQuery query = 1;
        StatAggregateJoin join = 2;
        StatAggregateConcat concat = 3;
        StatAggregateSort sort = 4;
        StatAggregateFormula formula = 5;
        StatAggregateFillNA fill_na = 6;
    }
}

message StatPage {
    // +optional
    uint32 start = 1;
    uint32 limit = 2;
}

//{
//    "aggregate": [
//        {"query": {"resource_type": "inventory.CloudServiceType",
//                   "query": {
//                       "filter": [{"k": "labels", "v": ["Server"], "o": "in"},
//                                  {"k": "is_primary", "v": true, "o": "eq"}], "aggregate": [{
//                           "group": {
//                               "keys": [
//                                   {
//                                       "key": "cloud_service_type_id",
//                                       "name": "cloud_service_type_id"},
//                                   {
//                                       "key": "name",
//                                       "name": "cloud_service_type"},
//                                   {
//                                       "key": "group",
//                                       "name": "cloud_service_group"},
//                                   {
//                                       "key": "provider",
//                                       "name": "provider"},
//                                   {
//                                       "key": "cloud_service_type_id",
//                                       "name": "cloud_service_type_id"}],
//                               "fields": [
//                                   {
//                                       "key": "tags",
//                                       "name": "tags",
//                                       "operator": "first"},
//                                   {
//                                       "key": "labels",
//                                       "name": "labels",
//                                       "operator": "first"}]}}]}}},
//        {"join": {"resource_type": "inventory.CloudService", "query": {"filter": [
//            {"k": "ref_cloud_service_type.cloud_service_type_id",
//             "v": ["cloud-svc-type-58c926b19aca", "cloud-svc-type-c7e5bc38d911",
//                   "cloud-svc-type-8dd4d7a13b95", "cloud-svc-type-719e705cb529",
//                   "cloud-svc-type-50bd62cf6e0e"], "o": "in"}], "aggregate": [{"group": {
//            "keys": [{"key": "cloud_service_type", "name": "cloud_service_type"},
//                     {"key": "cloud_service_group", "name": "cloud_service_group"},
//                     {"key": "provider", "name": "provider"}],
//            "fields": [{"name": "count", "operator": "count"}]}}]},
//                  "keys": ["cloud_service_type", "cloud_service_group", "provider"]}},
//        {"fill_na": {"data": {"count": 0.0}}}, {"formula": {"query": "count > 0"}},
//        {"sort": {"key": "count", "desc": true}}],
//    "domain_id": "domain-58010aa2e451"
//}
message ResourceStatRequest {
    repeated StatAggregate aggregate = 1;
    // +optional
    StatPage page = 2;
    string domain_id = 3;
}
