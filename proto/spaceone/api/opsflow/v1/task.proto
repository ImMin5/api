syntax = "proto3";

package spaceone.api.opsflow.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/opsflow/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";
import "spaceone/api/opsflow/v1/comment.proto";
import "spaceone/api/file_manager/v1/file.proto";


service Task {
    rpc create (TaskCreateRequest) returns (TaskInfo) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/create"
            body: "*"
        };
    }
    rpc update (TaskUpdateRequest) returns (TaskInfo) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/update"
            body: "*"
        };
    }
    rpc change_status (TaskChangeStatusRequest) returns (TaskInfo) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/change_status"
            body: "*"
        };
    }
    rpc delete (TaskRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/delete"
            body: "*"
        };
    }
    rpc get (TaskRequest) returns (TaskInfo) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/get"
            body: "*"
        };
    }
    rpc list (TaskSearchQuery) returns (TasksInfo) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/list"
            body: "*"
        };
    }
    rpc stat (TaskStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/opsflow/v1/task/stat"
            body: "*"
        };
    }
}

enum TaskPriority {
    TASK_PRIORITY_NONE = 0;
    HIGH = 1;
    MEDIUM = 2;
    LOW = 3;
}

message TaskCreateRequest {
    string name = 1;
    string status_id = 2;
    // +optional
    TaskPriority priority = 3;
    // +optional
    string description = 4;
    // +optional
    repeated string files = 5;
    // +optional
    Mentions mentions = 6;
    // +optional
    string assignee = 7;
    // +optional
    google.protobuf.Struct data = 8;
    string project_id = 21;
    string task_type_id = 22;
}

message TaskUpdateRequest {
    string task_id = 1;
    // +optional
    string name = 2;
    // +optional
    TaskPriority priority = 3;
    // +optional
    string description = 4;
    // +optional
    repeated string files = 5;
    // +optional
    Mentions mentions = 6;
    // +optional
    string assignee = 7;
    // +optional
    google.protobuf.Struct data = 8;
    // +optional
    string project_id = 21;
}

message TaskChangeStatusRequest {
    string task_id = 1;
    string status_id = 2;
    // +optional
    string assignee = 3;
}

message TaskRequest {
    string task_id = 1;
}

message TaskSearchQuery {
    // +optional
    spaceone.api.core.v2.Query query = 1;
    // +optional
    string task_id = 2;
    // +optional
    string name = 3;
    // +optional
    string status_id = 4;
    // +optional
    string status_type = 5;
    // +optional
    TaskPriority priority = 6;
    // +optional
    string workspace_id = 11;
    // +optional
    string project_id = 12;
    // +optional
    string category_id = 13;
    // +optional
    string task_type_id = 14;
}

message TaskInfo {
    string task_id = 1;
    string name = 2;
    string status = 3;
    string status_type = 4;
    TaskPriority priority = 5;
    string description = 6;
    google.protobuf.Struct data = 7;
    repeated spaceone.api.file_manager.v1.FileInfo files = 8;
    string assignee = 9;

    string domain_id = 21;
    string workspace_id = 22;
    string project_id = 23;
    string category_id = 24;
    string task_type_id = 25;

    string created_at = 31;
    string started_at = 32;
    string updated_at = 33;
    string completed_at = 34;
}

message TasksInfo {
    repeated TaskInfo results = 1;
    int32 total_count = 2;
}

message TaskStatQuery {
    spaceone.api.core.v2.StatisticsQuery query = 1;
}
