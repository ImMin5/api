//A Board is a bulletin-board-type resource for posting notices and announcements in Cloudforet.
syntax = "proto3";

package spaceone.api.board.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/board/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service Board {
    // Creates a new Board with SYSTEM permission. The `name` of the board is only required. You can add one or more `categories` representing the Board's attributes.
    rpc create (CreateBoardRequest) returns (BoardInfo) {}

    // Updates a specific Board with SYSTEM permission. You can make changes in Board settings, including `name` and `tags`.
    rpc update (UpdateBoardRequest) returns (BoardInfo) {}

    // Adds or changes `categories` of a specific Board with SYSTEM permission. A change in `categories` of a Board does not affect the `category` of the child Posts.
    rpc set_categories (SetBoardCategoriesRequest) returns (BoardInfo){}

    // Deletes a specific Board with `SYSTEM` permission. You can delete a Board regardless of the presence of Posts created under the Board.
    rpc delete (BoardRequest) returns (google.protobuf.Empty) {}

    // Gets a specific Board. You must specify the `board_id` of the Board to get. Prints detailed information about the Board, including `name`, `categories`.
    rpc get (GetBoardRequest) returns (BoardInfo) {
        option (google.api.http) = {
            post: "/board/v1/board/get"
            body: "*"
        };
    }

    // Gets a list of all Boards. You can use a query to get a filtered list of Boards.
    rpc list (BoardQuery) returns (BoardsInfo) {
        option (google.api.http) = {
            post: "/board/v1/board/list"
            body: "*"
        };
    }

    rpc stat (BoardStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/board/v1/board/stat"
            body: "*"
        };
    }
}

//{
//   "name": "notice",
//   "categories": ["admin", "developer", "devops"],
//   "tags": {"a": "b"}
// }
message CreateBoardRequest {
    string name = 1;
    //+optional
    repeated string categories = 2;
    //+optional
    google.protobuf.Struct tags = 3;
}

//{
//    "board_id": "board-123456789012",
//    "name": "system notice",
//    "tags": {"b": "c"}
//}
message UpdateBoardRequest {
    string board_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct tags = 3;
}
//{
//    "board_id": "board-123456789012",
//    "categories": ["Developer", "SRE", "Devops"]
//}
message SetBoardCategoriesRequest{
    string board_id = 1;
    // +optional
    repeated string categories = 2;
}

//{
//    "board_id": "board-123456789012"
//}
message BoardRequest {
    string board_id = 1;
}

//{
//    "board_id": "board-123456789012"
//}
message GetBoardRequest {
    string board_id = 1;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {}
//}
message BoardQuery {
    // +optional
    string board_id = 1;
    // +optional
    string name = 2;
    // +optional
    spaceone.api.core.v1.Query query = 3;
}

message BoardStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
}

//  {
//      "board_id": "board-123456789012",
//      "name": "notice",
//      "categories": [
//          "admin",
//          "developer",
//          "devops"
//      ],
//      "tags": {
//          "a": "b"
//      },
//      "created_at": "2022-01-01T06:47:27.759Z"
//  }
message BoardInfo {
    string board_id = 1;
    string name = 2;
    repeated string categories = 3;
    google.protobuf.Struct tags = 4;
    string created_at = 11;
}

//{
//      "results": [
//          {
//              "board_id": "board-123456789012",
//              "name": "dev-notice",
//              "categories": [
//                  "flower",
//                  "school",
//                  "spaceone"
//              ],
//              "tags": {
//                  "b": "c"
//              },
//              "created_at": "2022-01-01T05:16:08.549Z"
//          },
//          {
//              "board_id": "board-987654321098",
//              "name": "notice",
//              "tags": {
//                  "a": "b"
//              },
//              "created_at": "2022-01-01T05:24:19.758Z"
//          }
//      ],
//      "total_count": 2
//}
message BoardsInfo {
    repeated BoardInfo results = 1;
    int32 total_count = 2;
}