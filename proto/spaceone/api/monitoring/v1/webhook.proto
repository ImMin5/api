/*
desc: A Webhook is a plugin instance receiving data from external monitoring systems.
 */
syntax = "proto3";

package spaceone.api.monitoring.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Webhook {
    /*
    desc: Creates a new Webhook. A Webhook collects data from an external monitoring system with a webhook URL generated by the resource.
    request_example: >-
        {
          "name": "aws-sns-webhook-for-phd",
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "options": {}
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-phd",
          "state": "ENABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
          }
     */
    rpc create (CreateWebhookRequest) returns (WebhookInfo) {
        option (google.api.http) = { post: "/monitoring/v1/webhooks" };
    }
    /*
    desc: Updates a specific Webhook. You can make changes in Webhook settings, including the name and tags.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "state": "ENABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
         }
     */
    rpc update (UpdateWebhookRequest) returns (WebhookInfo) {
        option (google.api.http) = { put: "/monitoring/v1/webhook/{webhook_id}" };
    }
    /*
    desc: Updates the plugin of a specific DataSource. You can change the `version` of the plugin and select the `upgrade_mode` among `AUTO`, `MANUAL`, and `NONE`.
    request_example: >-
        {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "AWS-SNS-Webhook",
          "state": "ENABLED",
          "access_key": "1234567890121234567890121234",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890121234567890121234/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T09:13:16.723Z"
         }
     */
    rpc update_plugin (UpdateWebhookPluginRequest) returns (WebhookInfo) {
        option (google.api.http) = { put: "/monitoring/v1/webhook/{webhook_id}/plugin" };
    }
    /*
    desc: Verifies a specific plugin for a Webhook.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "domain_id": "domain-123456789012"
         }
     */
    rpc verify_plugin (WebhookRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { post: "/monitoring/v1/webhook/{webhook_id}/plugin/verify" };
    }
    /*
    desc: Enables a specific Webhook. By enabling a Webhook, you can communicate with an external application.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "state": "ENABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
         }
     */
    rpc enable (WebhookRequest) returns (WebhookInfo) {
        option (google.api.http) = { put: "/monitoring/v1/webhook/{webhook_id}/enable" };
    }
    /*
    desc: Disables a specific Webhook. By disabling a Webhook, you cannot communicate with an external application, as the webhook URL from the Webhook becomes invalid.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "state": "DISABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
         }
     */
    rpc disable (WebhookRequest) returns (WebhookInfo) {
        option (google.api.http) = { put: "/monitoring/v1/webhook/{webhook_id}/disable" };
    }
    /*
    desc: Deletes a specific Webhook. By deleting a Webhook, you cannot collect data from an external monitoring system, as the `REST URL` is also deleted.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "domain_id": "domain-123456789012"
         }
     */
    rpc delete (WebhookRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/monitoring/v1/webhook/{webhook_id}" };
    }
    /*
    desc: Gets a specific Webhook. Prints detailed information about the Webhook, including the name, the version, and the created datetime.
    request_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "state": "ENABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
         }
     */
    rpc get (GetWebhookRequest) returns (WebhookInfo) {
        option (google.api.http) = { get: "/monitoring/v1/webhook/{webhook_id}" };
    }
    /*
    desc: Gets a list of all Webhooks. You can use a query to get a filtered list of Webhooks.
    request_example: >-
        {
          "query": {},
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
         {
          "results": [
          {
          "webhook_id": "webhook-123456789012",
          "name": "aws-sns-webhook-for-cloudwatch",
          "state": "ENABLED",
          "access_key": "1234567890123456789012345678901",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-123456789012/1234567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-aws-sns-mon-webhook",
          "version": "1.2.2",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:23:33.875Z"
          },
          {
          "webhook_id": "webhook-987654321098",
          "name": "zabbix-webhook",
          "state": "ENABLED",
          "access_key": "9876567890123456789012345678901",
          "webhook_url": "https://monitoring-webhook.dev.spaceone.dev/monitoring/v1/webhook/webhook-987654321098/9876567890123456789012345678901/events",
          "capability": {},
          "plugin_info": {
          "plugin_id": "plugin-zabbix-mon-webhook",
          "version": "1.0",
          "options": {},
          "metadata": {},
          "upgrade_mode": "AUTO"
          },
          "project_id": "project-123456789012",
          "domain_id": "domain-123456789012",
          "created_at": "2022-01-01T07:42:31.872Z"
          }
          ],
          "total_count": 2
         }
     */
    rpc list (WebhookQuery) returns (WebhooksInfo) {
        option (google.api.http) = {
            get: "/monitoring/v1/webhooks"
            additional_bindings {
                post: "/monitoring/v1/webhooks/search"
            }
        };
    }
    rpc stat (WebhookStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/monitoring/v1/webhooks/stat" };
    }
}

message WebhookPluginInfo{
    enum UpgradeMode {
        NONE = 0;
        MANUAL = 1;
        AUTO = 2;
    }

    string plugin_id = 1;
    string version = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct metadata = 4;
    UpgradeMode upgrade_mode = 5;
}

message CreateWebhookRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    WebhookPluginInfo plugin_info = 2;
    // is_required: false
    google.protobuf.Struct tags = 3;
    // is_required: true
    string project_id = 11;
    // is_required: true
    string domain_id = 12;
}

message UpdateWebhookRequest {
    // is_required: true
    string webhook_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct tags = 3;
    // is_required: true
    string domain_id = 11;
}

message UpdateWebhookPluginRequest {
    enum UpgradeMode {
        NONE = 0;
        MANUAL = 1;
        AUTO = 2;
    }

    // is_required: true
    string webhook_id = 1;
    // is_required: false
    string version = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    UpgradeMode upgrade_mode = 4;
    // is_required: true
    string domain_id = 11;
}

message WebhookRequest {
    // is_required: true
    string webhook_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetWebhookRequest {
    // is_required: true
    string webhook_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message WebhookQuery {
    enum WebhookState {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string webhook_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    WebhookState state = 4;
    // is_required: false
    string access_key = 5;
    // is_required: false
    string webhook_url = 6;
    // is_required: false
    string project_id = 7;
    // is_required: true
    string domain_id = 11;
}

message WebhookInfo {
    enum WebhookState {
        NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string webhook_id = 1;
    string name = 2;
    WebhookState state = 3;
    string access_key = 4;
    string webhook_url = 5;
    google.protobuf.Struct capability = 6;
    WebhookPluginInfo plugin_info = 7;
    google.protobuf.Struct tags = 8;
    string project_id = 11;
    string domain_id = 12;
    string created_at = 21;
}

message WebhooksInfo {
    repeated WebhookInfo results = 1;
    int32 total_count = 2;
}

message WebhookStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}