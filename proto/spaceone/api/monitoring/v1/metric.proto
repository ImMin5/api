/*
desc: A Metric is a monitoring metric of a specific cloud service delivered from a DataSource.
 */
syntax = "proto3";

package spaceone.api.monitoring.v1;

option go_package = "dist/go";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";


service Metric {
    /*
    desc: Gets a list of all Metrics of one or more specified Resources. The parameter `resources` is a list of Resources from which to get a list of Metrics collected.
    request_example: >-
        {
            "data_source_id": "ds-31190a65a42a",
            "resources": ["cloud-svc-cd0105d255da"],
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "metrics": [
                {
                    "key": "CPUUtilization",
                    "group": "AWS/EC2",
                    "name": "CPUUtilization",
                    "unit": {
                        "y": "Percent",
                        "x": "Timestamp"
                    },
                    "metric_query": {
                        "cloud-svc-cd0105d255da": {
                            "Dimensions": [
                                {
                                    "Name": "InstanceId",
                                    "Value": "i-0400cdd39f1a4d5e9"
                                }
                            ],
                            "MetricName": "CPUUtilization",
                            "Namespace": "AWS/EC2"
                        }
                    }
                },
                {
                    "key": "NetworkIn",
                    "group": "AWS/EC2",
                    "name": "NetworkIn",
                    "unit": {
                        "y": "Bytes",
                        "x": "Timestamp"
                    },
                    "metric_query": {
                        "cloud-svc-cd0105d255da": {
                            "Dimensions": [
                                {
                                    "Name": "InstanceId",
                                    "Value": "i-0400cdd39f1a4d5e9"
                                }
                            ],
                            "MetricName": "NetworkIn",
                            "Namespace": "AWS/EC2"
                        }
                    }
                }
            ],
            "available_resources": {
                "cloud-svc-cd0105d255da": true
            },
            "domain_id": "domain-31190a65a42a"
        }
     */
    rpc list (MetricRequest) returns (MetricsInfo) {
        option (google.api.http) = { get: "/monitoring/v1/data-source/{data_source_id}/metrics" };
    }
    /*
    desc: Gets data of a single Metric. You must specify the parameter `metric` to get data of. You can specify the `period` to get data for.
    request_example: >-
        {
            "data_source_id": "ds-31190a65a42a",
            "metric_query": {
                "cloud-svc-cd0105d255da": {
                    "Dimensions": [
                        {
                            "Name": "InstanceId",
                            "Value": "i-0400cdd39f1a4d5e9"
                        }
                    ],
                    "MetricName": "CPUUtilization",
                    "Namespace": "AWS/EC2"
                }
            },
            "metric": "CPUUtilization",
            "start": "2022-06-21T03:11:29.438Z",
            "end": "2022-06-21T04:11:29.438Z",
            "stat": "AVERAGE",
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "labels": [
                "2022-06-21T03:13:00.000Z",
                "2022-06-21T03:18:00.000Z",
                "2022-06-21T03:23:00.000Z",
                "2022-06-21T03:28:00.000Z",
                "2022-06-21T03:33:00.000Z",
                "2022-06-21T03:38:00.000Z",
                "2022-06-21T03:43:00.000Z",
                "2022-06-21T03:48:00.000Z",
                "2022-06-21T03:53:00.000Z",
                "2022-06-21T03:58:00.000Z",
                "2022-06-21T04:03:00.000Z",
                "2022-06-21T04:08:00.000Z"
            ],
            "resource_values": {
                "cloud-svc-cd0105d255da": [
                    0.099999999999999,
                    0.10001852366397981,
                    0.10001852366397981,
                    0.1328230362675432,
                    0.099472075576548,
                    0.06507936507936621,
                    0.166703713994628,
                    0.1338983050847476,
                    0.1327868852458988,
                    0.1339168287487284,
                    0.1328610417160508,
                    0.10056497175141618
                ]
            },
            "domain_id": "domain-58010aa2e451"
        }
     */
    rpc get_data (MetricDataRequest) returns (MetricDataInfo) {
        option (google.api.http) = { get: "/monitoring/v1/data-source/{data_source_id}/metric-data" };
    }
}

message MetricRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    repeated string resources = 2;
    // is_required: true
    string domain_id = 10;
}

message MetricDataRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    google.protobuf.Struct metric_query = 2;
    // is_required: true
    string metric = 3;
    // is_required: true
    string start = 10;
    // is_required: true
    string end = 11;
    // is_required: false
    int32 period = 12;
    // is_required: false
    string stat = 13;
    // is_required: true
    string domain_id = 20;
}

message MetricInfo {
    string key = 1;
    string name = 2;
    string group = 3;
    google.protobuf.Struct unit = 4;
    google.protobuf.Struct metric_query = 5;
}

message MetricsInfo {
    repeated MetricInfo metrics = 1;
    google.protobuf.Struct available_resources = 2;
    string domain_id = 3;
}

message MetricDataInfo {
    google.protobuf.ListValue labels = 1;
    google.protobuf.Struct values = 2;
    string domain_id = 3;
}
