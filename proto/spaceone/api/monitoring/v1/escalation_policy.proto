/*
desc: An EscalationPolicy is a set of rules to deliver an alert to assigned members.
 */
syntax = "proto3";

package spaceone.api.monitoring.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service EscalationPolicy {
    /*
    desc: Creates a new EscalationPolicy. When creating an EscalationPolicy, if the project_id is assigned, the EscalationPolicy is applied to the Project with the same project_id. If an EscalationPolicy is set as a global policy, all Projects in the same domain can apply the policy.
    request_example: >-
        {
            "name": "es-test",
            "rules": [{"notification_level": "LV1", "escalate_minutes": 30},
                      {"notification_level": "LV2", "escalate_minutes": 30}],
            "repeat_count": 2,
            "finish_condition": "ACKNOWLEDGED",
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "escalation_policy_id": "ep-526e536fdca9",
            "name": "es-test",
            "rules": [
                {
                    "notification_level": "LV1",
                    "escalate_minutes": 30
                },
                {
                    "notification_level": "LV2",
                    "escalate_minutes": 30
                }
            ],
            "repeat_count": 2,
            "finish_condition": "ACKNOWLEDGED",
            "scope": "DOMAIN",
            "tags": {},
            "domain_id": "domain-58010aa2e451",
            "created_at": "2022-06-21T09:22:45.340Z"
        }
     */
    rpc create (CreateEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { post: "/monitoring/v1/escalation-policies" };
    }
    /*
    desc: Updates a specific EscalationPolicy. You can make changes in EscalationPolicy settings, including the name, the escalation process, and the number of iterations.
    request_example: >-
        {
            "escalation_policy_id": "ep-526e536fdca9",
            "name": "es-test2",
            "rules": [{"notification_level": "LV1", "escalate_minutes": 15},
                      {"notification_level": "LV2", "escalate_minutes": 15},
                      {"notification_level": "LV3", "escalate_minutes": 15}],
            "repeat_count": 1,
            "finish_condition": "RESOLVED",
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "escalation_policy_id": "ep-526e536fdca9",
            "name": "es-test2",
            "rules": [
                {
                    "notification_level": "LV1",
                    "escalate_minutes": 15
                },
                {
                    "notification_level": "LV2",
                    "escalate_minutes": 15
                },
                {
                    "notification_level": "LV3",
                    "escalate_minutes": 15
                }
            ],
            "repeat_count": 1,
            "finish_condition": "RESOLVED",
            "scope": "DOMAIN",
            "tags": {},
            "domain_id": "domain-58010aa2e451",
            "created_at": "2022-06-21T09:22:45.340Z"
        }
     */
    rpc update (UpdateEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { put: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    /*
    desc: Sets a specific EscalationPolicy as default. Only policies configured as global can be set as default. When a Project is created, even if you did not configure any policy to the Project, the default policy set by this api method is applied.
    request_example: >-
        {
            "escalation_policy_id": "ep-526e536fdca9",
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "escalation_policy_id": "ep-526e536fdca9",
            "name": "es-test2",
            "is_default": true,
            "rules": [
                {
                    "notification_level": "LV1",
                    "escalate_minutes": 15
                },
                {
                    "notification_level": "LV2",
                    "escalate_minutes": 15
                },
                {
                    "notification_level": "LV3",
                    "escalate_minutes": 15
                }
            ],
            "repeat_count": 1,
            "finish_condition": "RESOLVED",
            "scope": "DOMAIN",
            "tags": {},
            "domain_id": "domain-58010aa2e451",
            "created_at": "2022-06-21T09:22:45.340Z"
        }
     */
    rpc set_default (EscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { put: "/monitoring/v1/escalation-policy/{escalation_policy_id}/set-default" };
    }
    /*
    desc: Deletes a specific EscalationPolicy. Deletes the EscalationPolicy with the escalation_policy_id from the deletion request.
    request_example: >-
        {
            "escalation_policy_id": "ep-d75670166af4",
            "domain_id": "domain-58010aa2e451"
        }
     */
    rpc delete (EscalationPolicyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    /*
    desc: Gets a specific EscalationPolicy. Prints detailed information about the EscalationPolicy, including the name, rules, and termination conditions.
    request_example: >-
        {
            "escalation_policy_id": "ep-d75670166af4",
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "escalation_policy_id": "ep-d75670166af4",
            "name": "0525-ms-test-2",
            "rules": [
                {
                    "notification_level": "LV2",
                    "escalate_minutes": 30
                },
                {
                    "notification_level": "LV2"
                }
            ],
            "finish_condition": "ACKNOWLEDGED",
            "scope": "DOMAIN",
            "tags": {},
            "domain_id": "domain-58010aa2e451",
            "created_at": "2022-05-25T09:31:38.573Z"
        }
     */
    rpc get (GetEscalationPolicyRequest) returns (EscalationPolicyInfo) {
        option (google.api.http) = { get: "/monitoring/v1/escalation-policy/{escalation_policy_id}" };
    }
    /*
    desc: Gets a list of all EscalationPolicies. You can use a query to get a filtered list of EscalationPolicies.
    request_example: >-
        {
            "query": {},
            "domain_id": "domain-58010aa2e451"
        }
    response_example: >-
        {
            "results": [
                {
                    "escalation_policy_id": "ep-7c9745003372",
                    "name": "0525-ms-test-1",
                    "rules": [
                        {
                            "notification_level": "LV1"
                        }
                    ],
                    "finish_condition": "ACKNOWLEDGED",
                    "scope": "DOMAIN",
                    "tags": {},
                    "domain_id": "domain-58010aa2e451",
                    "created_at": "2022-05-25T09:31:15.150Z"
                },
                {
                    "escalation_policy_id": "ep-d75670166af4",
                    "name": "0525-ms-test-2",
                    "rules": [
                        {
                            "notification_level": "LV2",
                            "escalate_minutes": 30
                        },
                        {
                            "notification_level": "LV2"
                        }
                    ],
                    "finish_condition": "ACKNOWLEDGED",
                    "scope": "DOMAIN",
                    "tags": {},
                    "domain_id": "domain-58010aa2e451",
                    "created_at": "2022-05-25T09:31:38.573Z"
                }
            ],
            "total_count": 2
        }
     */
    rpc list (EscalationPolicyQuery) returns (EscalationPoliciesInfo) {
        option (google.api.http) = {
            get: "/monitoring/v1/escalation-policies"
            additional_bindings {
                post: "/monitoring/v1/escalation-policies/search"
            }
        };
    }
    rpc stat (EscalationPolicyStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/monitoring/v1/escalation-policies/stat" };
    }
}

message EscalationPolicyRule {
    enum NotificationLevel {
        NONE = 0;
        ALL = 1;
        LV1 = 2;
        LV2 = 3;
        LV3 = 4;
        LV4 = 5;
        LV5 = 6;
    }

    NotificationLevel notification_level = 1;
    int32 escalate_minutes = 2;
}

message CreateEscalationPolicyRequest {
    enum EscalationFinishCondition {
        NONE = 0;
        ACKNOWLEDGED = 1;
        RESOLVED = 2;
    }

    // is_required: true
    string name = 1;
    // is_required: true
    repeated EscalationPolicyRule rules = 2;
    // is_required: false
    int32 repeat_count = 3;
    // is_required: false
    EscalationFinishCondition finish_condition = 4;
    // is_required: false
    string project_id = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message UpdateEscalationPolicyRequest {
    enum EscalationFinishCondition {
        NONE = 0;
        ACKNOWLEDGED = 1;
        RESOLVED = 2;
    }

    // is_required: true
    string escalation_policy_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    repeated EscalationPolicyRule rules = 3;
    // is_required: false
    int32 repeat_count = 4;
    // is_required: false
    EscalationFinishCondition finish_condition = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message EscalationPolicyRequest {
    // is_required: true
    string escalation_policy_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetEscalationPolicyRequest {
    // is_required: true
    string escalation_policy_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message EscalationPolicyQuery {
    enum EscalationPolicyScope {
        SCOPE_NONE = 0;
        DOMAIN = 1;
        PROJECT = 2;
    }

    enum EscalationFinishCondition {
        NONE = 0;
        ACKNOWLEDGED = 1;
        RESOLVED = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string escalation_policy_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    bool is_default = 4;
    // is_required: false
    EscalationFinishCondition finish_condition = 5;
    // is_required: false
    EscalationPolicyScope scope = 6;
    // is_required: false
    string project_id = 7;
    // is_required: true
    string domain_id = 11;
}

message EscalationPolicyInfo {
    enum EscalationPolicyScope {
        SCOPE_NONE = 0;
        DOMAIN = 1;
        PROJECT = 2;
    }

    enum EscalationFinishCondition {
        NONE = 0;
        ACKNOWLEDGED = 1;
        RESOLVED = 2;
    }

    string escalation_policy_id = 1;
    string name = 2;
    bool is_default = 3;
    repeated EscalationPolicyRule rules = 4;
    int32 repeat_count = 5;
    EscalationFinishCondition finish_condition = 6;
    EscalationPolicyScope scope = 7;
    string project_id = 8;
    google.protobuf.Struct tags = 9;
    string domain_id = 11;
    string created_at = 21;
}

message EscalationPoliciesInfo {
    repeated EscalationPolicyInfo results = 1;
    int32 total_count = 2;
}

message EscalationPolicyStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}