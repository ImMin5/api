/*
desc: A MaintenanceWindow is a resource snoozing Alerts during maintenance time.
 */
syntax = "proto3";

package spaceone.api.monitoring.v1;

option go_package = "dist/go";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service MaintenanceWindow {
    /*
    desc: Creates a new MaintenanceWindow. When creating a MaintenanceWindow, you can set the title and maintenance schedule of the MaintenanceWindow. From the `start_time` to the `end_time` specified by the schedule set in this method, alerts in the Projects linked with the MaintenanceWindow are ceased.
    request_example: >-
        {
          "title": "The dev server is under regular maintenance.",
          "projects": ["project-123456789012"],
          "start_time": "2022-01-01T09:45:00.000Z",
          "end_time": "2022-01-01T10:45:00.000Z",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "state": "OPEN",
          "start_time": "2022-01-01T09:45:00.000Z",
          "end_time": "2022-01-01T10:45:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user1@email.com",
          "created_at": "2022-06-02T09:46:49.196Z",
          "updated_at": "2022-06-02T09:46:49.196Z"
         }
     */
    rpc create (CreateMaintenanceWindowRequest) returns (MaintenanceWindowInfo) {
        option (google.api.http) = { post: "/monitoring/v1/maintenance-windows" };
    }
    /*
    desc: Updates a specific MaintenanceWindow. You can make changes in MaintenanceWindow settings including, the `title` and the schedule.
    request_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "projects": ["project-123456789012"],
          "start_time": "2022-01-03T00:00:00.000Z",
          "end_time": "2022-01-03T01:00:00.000Z",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "state": "OPEN",
          "start_time": "2022-06-03T00:00:00.000Z",
          "end_time": "2022-06-03T01:00:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user1@email.com",
          "created_at": "2022-01-02T09:46:49.196Z",
          "updated_at": "2022-01-02T09:46:49.196Z"
         }
     */
    rpc update (UpdateMaintenanceWindowRequest) returns (MaintenanceWindowInfo) {
        option (google.api.http) = { put: "/monitoring/v1/maintenance-window/{maintenance_window_id}" };
    }
    /*
    desc: Closes a MaintenanceWindow by changing the state of the MaintenanceWindow to `CLOSED` when the maintenance is completed. As the MaintenanceWindow is not deleted but closed, the maintenance history remains undeleted.
    request_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "state": "CLOSED",
          "start_time": "2022-06-03T00:00:00.000Z",
          "end_time": "2022-06-03T01:00:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user1@email.com",
          "created_at": "2022-01-02T09:46:49.196Z",
          "updated_at": "2022-01-02T09:46:49.196Z"
         }
     */
    rpc close (MaintenanceWindowRequest) returns (MaintenanceWindowInfo) {
        option (google.api.http) = { put: "/monitoring/v1/maintenance-window/{maintenance_window_id}/close" };
    }
    /*
    desc: Gets a specific MaintenanceWindow. Prints detailed information about the MaintenanceWindow, including the title and the schedule.
    request_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "state": "OPEN",
          "start_time": "2022-06-03T00:00:00.000Z",
          "end_time": "2022-06-03T01:00:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user1@email.com",
          "created_at": "2022-01-02T09:46:49.196Z",
          "updated_at": "2022-01-02T09:46:49.196Z"
         }
     */
    rpc get (GetMaintenanceWindowRequest) returns (MaintenanceWindowInfo) {
        option (google.api.http) = { get: "/monitoring/v1/maintenance-window/{maintenance_window_id}" };
    }
    /*
    desc: Gets a list of all MaintenanceWindows. You can use a query to get a filtered list of MaintenanceWindows.
    request_example: >-
        {
          "query": {},
          "domain_id": "domain-123456789012"
         }
    response_example: >-
        {
          "results": [
          {
          "maintenance_window_id": "mw-123456789012",
          "title": "The dev server is under regular maintenance.",
          "state": "OPEN",
          "start_time": "2022-06-03T00:00:00.000Z",
          "end_time": "2022-06-03T01:00:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user1@email.com",
          "created_at": "2022-01-01T09:59:01.966Z",
          "updated_at": "2022-01-01T09:59:01.966Z"
          },
          {
          "maintenance_window_id": "mw-987654321098",
          "title": "The prd server is under regular maintenance.",
          "state": "OPEN",
          "start_time": "2022-06-03T00:00:00.000Z",
          "end_time": "2022-06-03T01:00:00.000Z",
          "tags": {},
          "projects": [
          "project-123456789012"
          ],
          "domain_id": "domain-123456789012",
          "created_by": "user2@email.com",
          "created_at": "2022-01-02T09:57:28.999Z",
          "updated_at": "2022-01-02T09:57:28.999Z"
          }
          ],
          "total_count": 50
         }
     */
    rpc list (MaintenanceWindowQuery) returns (MaintenanceWindowsInfo) {
        option (google.api.http) = {
            get: "/monitoring/v1/maintenance-windows"
            additional_bindings {
                post: "/monitoring/v1/maintenance-windows/search"
            }
        };
    }
    rpc stat (MaintenanceWindowStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/monitoring/v1/maintenance-windows/stat" };
    }
}

message CreateMaintenanceWindowRequest {
    // is_required: true
    string title = 1;
    // is_required: true
    repeated string projects = 2;
    // is_required: true
    string start_time = 3;
    // is_required: true
    string end_time = 4;
    // is_required: false
    google.protobuf.Struct tags = 5;
    // is_required: true
    string domain_id = 11;
}

message UpdateMaintenanceWindowRequest {
    // is_required: true
    string maintenance_window_id = 1;
    // is_required: false
    string title = 2;
    // is_required: false
    repeated string projects = 3;
    // is_required: false
    string start_time = 4;
    // is_required: false
    string end_time = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message MaintenanceWindowRequest {
    // is_required: true
    string maintenance_window_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetMaintenanceWindowRequest {
    // is_required: true
    string maintenance_window_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message MaintenanceWindowQuery {
    enum MaintenanceWindowState {
        NONE = 0;
        OPEN = 1;
        CLOSED = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string maintenance_window_id = 2;
    // is_required: false
    string title = 3;
    // is_required: false
    MaintenanceWindowState state = 4;
    // is_required: false
    string project_id = 5;
    // is_required: false
    string created_by = 6;
    // is_required: true
    string domain_id = 11;
}

message MaintenanceWindowInfo {
    enum MaintenanceWindowState {
        NONE = 0;
        OPEN = 1;
        CLOSED = 2;
    }

    string maintenance_window_id = 1;
    string title = 2;
    MaintenanceWindowState state = 3;
    string start_time = 4;
    string end_time = 5;
    google.protobuf.Struct tags = 6;
    repeated string projects = 11;
    string domain_id = 12;
    string created_by = 13;
    string created_at = 21;
    string updated_at = 22;
    string closed_at = 23;
}

message MaintenanceWindowsInfo {
    repeated MaintenanceWindowInfo results = 1;
    int32 total_count = 2;
}

message MaintenanceWindowStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}