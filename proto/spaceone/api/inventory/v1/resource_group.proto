// A ResourceGroup is a group of `resource`s from various `provider`s.
syntax = "proto3";

package spaceone.api.inventory.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/inventory/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service ResourceGroup {
    
    // Creates a new ResourceGroup. You can integrate `resource`s from different `provider`s by specifying the cloud resources to be grouped in the `resources` parameter.
    rpc create (CreateResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/create"
            body: "*"
        };
    }
    
    // Updates a specific ResourceGroup. You can make changes in ResourceGroup settings, including `name`, `tags`, and grouped resources in the ResourceGroup.
    rpc update (UpdateResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/update"
            body: "*"
        };
    }
    
    // Deletes a specific ResourceGroup. You must specify the `resource_group_id` of the ResourceGroup to delete.
    rpc delete (ResourceGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/delete"
            body: "*"
        };
    }
    
    // Gets a specific ResourceGroup. Prints detailed information about the ResourceGroup, including the information of the grouped cloud resources.
    rpc get (GetResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/get"
            body: "*"
        };
    }
    
    // Gets a list of all ResourceGroups. You can use a query to get a filtered list of ResourceGroups.
    rpc list (ResourceGroupQuery) returns (ResourceGroupsInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/list"
            body: "*"
        };
    }
    
    rpc stat (ResourceGroupStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/inventory/v1/resource-group/stat"
            body: "*"
        };
    }
}

message Resource {
    string resource_type = 1;
    // +optional
    google.protobuf.ListValue filter = 2;
    // +optional
    string keyword = 3;
}

//{
//    "name": "azure-group-1",
//    "resources": [
//        {
//            "resource_type": "inventory.Server?provider=azure&cloud_service_group=Compute&cloud_service_type=VirtualMachine",
//            "filter": [
//                {"o": "eq", "k": "provider", "v": "azure"},
//                {"o": "eq", "k": "cloud_service_group", "v": "Compute"},
//                {"o": "eq", "k": "cloud_service_type", "v": "VirtualMachine"}
//            ]
//        }
//    ],
//    "options": {
//        "raw_filter": []
//    },
//    "tags": {
//        "a": "b"
//    }
//}
message CreateResourceGroupRequest {
    string name = 1;
    repeated Resource resources = 2;
    // +optional
    google.protobuf.Struct options = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string project_id = 11;
    string domain_id = 12;
}

//{
//    "resource_group_id": "rsc-grp-7d46a1fc7738",
//    "name": "azure-grp-test2",
//    "resources": [
//        {
//            "resource_type": "inventory.Server?provider=azure&cloud_service_group=Compute&cloud_service_type=VirtualMachine",
//            "filter": [
//                {"k": "provider", "v": "azure", "o": "eq"},
//                {"o": "eq", "k": "cloud_service_group", "v": "Compute"},
//                {"v": "VirtualMachine", "k": "cloud_service_type", "o": "eq"}
//            ]
//        }
//    ],
//    "options": {},
//    "tags": {
//        "b": "c"
//    }
//}
message UpdateResourceGroupRequest {
    string resource_group_id = 1;
    // +optional
    string name = 2;
    // +optional
    repeated Resource resources = 3;
    // +optional
    google.protobuf.Struct options = 4;
    // +optional
    google.protobuf.Struct tags = 5;
    // +optional
    bool release_project = 11;
    // +optional
    string project_id = 12;
    string domain_id = 13;
}

//{
//    "resource_group_id": "rsc-grp-aa3c4ca465b2"
//}
message ResourceGroupRequest {
    string resource_group_id = 1;
    string domain_id = 2;
}

//{
//    "resource_group_id": "rsc-grp-aa3c4ca465b2"
//}
message GetResourceGroupRequest {
    string resource_group_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {
//        "filter": [
//            {
//                "key": "name",
//                "value": [
//                    "azure-vmss-group",
//                    "stset"
//                ],
//                "operator": "in"
//            }
//        ]
//    }
//}
message ResourceGroupQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string resource_group_id = 2;
    // +optional
    string name = 3;
    // +optional
    string project_id = 4;
    string domain_id = 5;
}

//{
//    "resource_group_id": "rsc-grp-7d46a1fc7738",
//    "name": "azure-group-1",
//    "resources": [
//        {
//            "resource_type": "inventory.Server?provider=azure&cloud_service_group=Compute&cloud_service_type=VirtualMachine",
//            "filter": [
//                {
//                    "k": "provider",
//                    "v": "azure",
//                    "o": "eq"
//                },
//                {
//                    "k": "cloud_service_group",
//                    "v": "Compute",
//                    "o": "eq"
//                },
//                {
//                    "k": "cloud_service_type",
//                    "v": "VirtualMachine",
//                    "o": "eq"
//                }
//            ]
//        }
//    ],
//    "options": {
//        "raw_filter": []
//    },
//    "tags": {
//        "a": "b"
//    },
//    "domain_id": "domain-58010aa2e451",
//    "created_at": "2022-06-23T01:50:33.152Z"
//}
message ResourceGroupInfo {
    string resource_group_id = 1;
    string name = 2;
    repeated Resource resources = 3;
    google.protobuf.Struct options = 4;
    google.protobuf.Struct tags = 5;
    string project_id = 6;
    string domain_id = 7;
    string created_at = 8;
}

//{
//    "results": [
//        {
//            "resource_group_id": "rsc-grp-4c86e071e0f0",
//            "name": "azure-vmss-group",
//            "resources": [
//                {
//                   "resource_type": "inventory.CloudService?provider=azure&cloud_service_group=Compute&cloud_service_type=VmScaleSet",
//                    "filter": [
//                        {
//                            "k": "provider",
//                            "v": "azure",
//                            "o": "eq"
//                        },
//                        {
//                            "v": "Compute",
//                            "k": "cloud_service_group",
//                            "o": "eq"
//                        },
//                        {
//                            "k": "cloud_service_type",
//                            "v": "VmScaleSet",
//                            "o": "eq"
//                        }
//                    ]
//                }
//            ],
//            "options": {
//                "raw_filter": []
//            },
//            "tags": {},
//            "project_id": "project-9074eea97d7e",
//            "domain_id": "domain-58010aa2e451",
//            "created_at": "2021-04-23T03:23:40.037Z"
//        },
//        {
//            "resource_group_id": "rsc-grp-aa3c4ca465b2",
//            "name": "stset",
//            "resources": [
//                {
//                    "resource_type": "inventory.Server?provider=aws&cloud_service_group=EC2&cloud_service_type=Instance",
//                    "filter": [
//                        {
//                            "k": "provider",
//                            "v": "aws",
//                            "o": "eq"
//                        },
//                        {
//                            "v": "EC2",
//                            "k": "cloud_service_group",
//                            "o": "eq"
//                        },
//                        {
//                            "k": "cloud_service_type",
//                            "v": "Instance",
//                            "o": "eq"
//                        }
//                    ],
//                    "keyword": "test"
//                }
//            ],
//            "options": {
//                "raw_filter": [
//                    [
//                        "test"
//                    ]
//                ]
//            },
//            "tags": {},
//            "project_id": "project-18655561c535",
//            "domain_id": "domain-58010aa2e451",
//            "created_at": "2021-06-01T10:23:20.537Z"
//        }
//    ],
//    "total_count": 2
//}
message ResourceGroupsInfo {
    repeated ResourceGroupInfo results = 1;
    int32 total_count = 2;
}

message ResourceGroupStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}
