/*
desc: A Job is an act of collecting external cloud resources through plugins.
*/
syntax = "proto3";

package spaceone.api.inventory.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/inventory/v1/collector.proto";

service Job {
  /*
  desc: Deletes a specific Job. You must specify the `job_id` of the Job to delete.
  request_example: >-
    {
      "job_id": "job-123456789012",
      "domain_id": "domain-123456789012"
    }
   */
  rpc delete (JobRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/inventory/v1/job/{job_id}"};
  }
  /*
  desc: Gets a specific Job. Prints detailed information about the Job, including its state, total tasks, and collector info.
  request_example: >-
    {
      "job_id": "job-123456789012",
      "domain_id": "domain-123456789012"
    }
  response_example: >-
    {
    "job_id": "job-123456789012",
    "status": "ERROR",
    "filter": {},
    "total_tasks": 2,
    "collector_info": {
        "collector_id": "collector-123456789012",
        "name": "Jenkins Collector",
        "state": "ENABLED",
        "plugin_info": {
            "plugin_id": "plugin-jenkins-inven-collector",
            "version": "0.1.1"
        },
        "provider": "jenkins",
        "capability": {},
        "is_public": true
    },
    "domain_id": "domain-123456789012",
    "created_at": "2022-01-01T10:00:01.389Z",
    "updated_at": "2022-01-01T10:00:01.389Z",
    "finished_at": "2022-01-01T10:02:11.270Z"
    }
   */
  rpc get (GetJobRequest) returns (JobInfo) {
    option (google.api.http) = {get: "/inventory/v1/job/{job_id}"};
  }
  /*
  desc: Gets a list of all Jobs. You can use a query to get a filtered list of Jobs.
  request_example: >-
    {
      "query": {}
    }
  response_example: >-
    {
      "results": [
          {
              "job_id": "job-3b124006c2d2",
              "status": "SUCCESS",
              "filter": {},
              "total_tasks": 2,
              "collector_info": {
                  "collector_id": "collector-accd02663b3d",
                  "name": "openstack-collector",
                  "state": "ENABLED",
                  "plugin_info": {
                      "plugin_id": "plugin-openstack-inven-collector",
                      "version": "0.4.2.20220616.134758"
                  },
                  "provider": "openstack",
                  "capability": {
                      "supported_schema": [
                          "openstack_credentials"
                      ]
                  },
                  "is_public": true
              },
              "domain_id": "domain-58010aa2e451",
              "created_at": "2022-06-17T08:00:01.225Z",
              "updated_at": "2022-06-17T08:00:01.225Z",
              "finished_at": "2022-06-17T08:00:15.197Z"
          },
          {
              "job_id": "job-587a3d3b4db3",
              "status": "SUCCESS",
              "filter": {},
              "total_tasks": 3,
              "collector_info": {
                  "collector_id": "collector-2c0847644f39",
                  "name": "AWS stat-kwon Collector",
                  "state": "ENABLED",
                  "plugin_info": {
                      "plugin_id": "plugin-30d21ef75a5d",
                      "version": "1.13.13.20220610.143142"
                  },
                  "provider": "aws",
                  "capability": {
                      "supported_schema": [
                          "aws_access_key"
                      ]
                  },
                  "is_public": true
              },
              "domain_id": "domain-58010aa2e451",
              "created_at": "2022-06-17T08:00:00.407Z",
              "updated_at": "2022-06-17T08:00:00.407Z",
              "finished_at": "2022-06-17T08:07:32.023Z"
          }
      ],
      "total_count": 2
    }
  */
  rpc list (JobsQuery) returns (JobsInfo) {
    option (google.api.http) = {
      get: "/inventory/v1/jobs"
      additional_bindings {
        post: "/inventory/v1/jobs/search"
      }
    };
  }
  rpc stat (JobStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {post: "/inventory/v1/jobs/stat"};
  }
}

message JobRequest {
  // is_required: true
  string job_id = 1;
  // is_required: true
  string domain_id = 2;
}

message GetJobRequest {
  // is_required: true
  string job_id = 1;
  // is_required: true
  string domain_id = 2;
  // is_required: false
  repeated string only = 3;
}

message JobsQuery {
  enum JobStatus {
    JOB_STATE_NONE = 0;
    CREATED = 1;
    CANCELED = 2;
    IN_PROGRESS = 3;
    SUCCESS = 4;
    ERROR = 5;
    TIMEOUT = 6;
  }

  // is_required: false
  spaceone.api.core.v1.Query query = 1;
  // is_required: false
  string job_id = 2;
  // is_required: false
  JobStatus status = 3;
  // is_required: false
  string collector_id = 4;
  // is_required: false
  string project_id = 5;
  // is_required: true
  string domain_id = 6;
}

message JobsInfo {
  repeated JobInfo results = 1;
  int32 total_count = 2;
}

message JobStatQuery {
  // is_required: true
  spaceone.api.core.v1.StatisticsQuery query = 1;
  // is_required: true
  string domain_id = 2;
}
