/*
desc: A CloudServiceType is a classification with hierarchical information of `CloudService`. A CloudServiceType provides information about which `group` a specific `Resource` belongs to and which `Services` are in it.
*/
syntax = "proto3";

package spaceone.api.inventory.v1;

option go_package = "dist/go";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CloudServiceType {
    /*
    desc: Creates a new CloudServiceType. You must specify the `name`, `provider`, and `group` parameters to create a CloudServiceType. One or several CloudServiceTypes exist in a specific `group`, and each CloudServiceType is identified by the `name` parameter.
    request_example: >-
      {
        "name": "API-TEST",
        "provider": "aws",
        "group": "APIGateway",
        "service_code": "AmazonApiGateway",
        "is_primary": true,
        "is_major": true,
        "resource_type": "inventory.CloudService",
        "metadata": {},
        "labels": [
            "Networking"
        ],
        "tags": {
            "a": "b"
        }
      }
    response_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8",
        "name": "API-TEST",
        "provider": "aws",
        "group": "APIGateway",
        "cloud_service_type_key": "aws.APIGateway.API-TEST",
        "service_code": "AmazonApiGateway",
        "is_primary": true,
        "is_major": true,
        "resource_type": "inventory.CloudService",
        "metadata": {},
        "tags": {
            "a": "b"
        },
        "labels": [
            "Networking"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-06-22T01:38:16.301Z",
        "updated_at": "2022-06-22T01:38:16.301Z"
      }
    */
    rpc create (CreateCloudServiceTypeRequest) returns (CloudServiceTypeInfo) {
        option (google.api.http) = { post: "/inventory/v1/cloud-service-types" };
    }
    /*
    desc: Updates a specific CloudServiceType. You can make changes in CloudServiceType settings, except for `name`, `provider` and `group`. In particular, you can set the CloudServiceType's priority in a `group`.
    request_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8",
        "service_code": "AmazonApi",
        "metadata": {},
        "labels": [
            "Networking2"
        ],
        "tags": {
            "b": "c"
        }
      }
    response_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8",
        "name": "API-TEST",
        "provider": "aws",
        "group": "APIGateway",
        "cloud_service_type_key": "aws.APIGateway.API-TEST",
        "service_code": "AmazonApi",
        "is_primary": true,
        "is_major": true,
        "resource_type": "inventory.CloudService",
        "metadata": {},
        "tags": {
            "b": "c"
        },
        "labels": [
            "Networking2"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-06-22T01:38:16.301Z",
        "updated_at": "2022-06-22T02:12:11.184Z"
      }
    */
    rpc update (UpdateCloudServiceTypeRequest) returns (CloudServiceTypeInfo) {
        option (google.api.http) = { put: "/inventory/v1/cloud-service-type/{cloud_service_type_id}" };
    }
    /*
    desc: Deletes a specific CloudServiceType. You must specify the `cloud_service_type_id` of the CloudServiceType to delete.
    request_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8"
      }
    */
    rpc delete (CloudServiceTypeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/cloud-service-type/{cloud_service_type_id}" };
    }
    /*
    desc: Gets a specific CloudServiceType. Prints detailed information about the CloudServiceType.
    request_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8"
      }
    response_example: >-
      {
        "cloud_service_type_id": "cloud-svc-type-27dd73ac89f8",
        "name": "API-TEST",
        "provider": "aws",
        "group": "APIGateway",
        "cloud_service_type_key": "aws.APIGateway.API-TEST",
        "service_code": "AmazonApi",
        "is_primary": true,
        "is_major": true,
        "resource_type": "inventory.CloudService",
        "metadata": {},
        "tags": {
            "b": "c"
        },
        "labels": [
            "Networking2"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-06-22T01:38:16.301Z",
        "updated_at": "2022-06-22T02:12:11.184Z"
      }
    */
    rpc get (GetCloudServiceTypeRequest) returns (CloudServiceTypeInfo) {
        option (google.api.http) = { get: "/inventory/v1/cloud-service-type/{cloud_service_type_id}" };
    }
    /*
    desc: Gets a list of all CloudServiceTypes. You can use a query to get a filtered list of CloudServiceTypes.
    request_example: >-
      {
        "query": {
            "filter": [
                {
                    "key": "provider",
                    "value": "aws",
                    "operator": "eq"
                }
            ]
        }
      }
    response_example: >-
      {
        "results": [
            {
                "cloud_service_type_id": "cloud-svc-type-7e1c113b39ff",
                "name": "API",
                "provider": "aws",
                "group": "APIGateway",
                "cloud_service_type_key": "aws.APIGateway.API",
                "service_code": "AmazonApiGateway",
                "is_primary": true,
                "is_major": true,
                "resource_type": "inventory.CloudService",
                "metadata": {
                },
                "tags": {
                    "spaceone:icon": "https://spaceone.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/aws/Amazon-API-Gateway.svg"
                },
                "labels": [
                    "Networking"
                ],
                "domain_id": "domain-58010aa2e451",
                "created_at": "2021-06-03T02:29:32.690Z",
                "updated_at": "2022-06-22T00:04:45.477Z"
            },
            {
                "cloud_service_type_id": "cloud-svc-type-64a0de601371",
                "name": "Certificate",
                "provider": "aws",
                "group": "CertificateManager",
                "cloud_service_type_key": "aws.CertificateManager.Certificate",
                "service_code": "AWSCertificateManager",
                "is_primary": true,
                "resource_type": "inventory.CloudService",
                "metadata": {
                },
                "tags": {
                    "spaceone:icon": "https://spaceone.s3.ap-northeast-2.amazonaws.com/console-assets/icons/cloud-services/aws/AWS-Certificate-Manager.svg"
                },
                "labels": [
                    "Security"
                ],
                "domain_id": "domain-58010aa2e451",
                "created_at": "2021-06-03T02:29:53.052Z",
                "updated_at": "2022-06-22T00:05:41.252Z"
            }
        ],
        "total_count": 2
      }
    */
    rpc list (CloudServiceTypeQuery) returns (CloudServiceTypesInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/cloud-service-types"
            additional_bindings {
                post: "/inventory/v1/cloud-service-types/search"
            }
        };
    }
    rpc stat (CloudServiceTypeStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/cloud-service-types/stat" };
    }
}

message CreateCloudServiceTypeRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    string provider = 2;
    // is_required: true
    string group = 3;
    // is_required: false
    string service_code = 4;
    // is_required: false
    bool is_primary = 5;
    // is_required: false
    bool is_major = 6;
    // is_required: false
    string resource_type = 7;
    // is_required: false
    google.protobuf.Struct metadata = 11;
    // is_required: false
    google.protobuf.ListValue labels = 12;
    // is_required: false
    google.protobuf.Struct tags = 13;
    // is_required: true
    string domain_id = 21;
}

message UpdateCloudServiceTypeRequest {
    // is_required: true
    string cloud_service_type_id = 1;
    // is_required: false
    string service_code = 2;
    // is_required: false
    bool is_primary = 3;
    // is_required: false
    bool is_major = 4;
    // is_required: false
    string resource_type = 5;
    // is_required: false
    google.protobuf.Struct metadata = 11;
    // is_required: false
    google.protobuf.ListValue labels = 12;
    // is_required: false
    google.protobuf.Struct tags = 13;
    // is_required: true
    string domain_id = 21;
}

message CloudServiceTypeRequest {
    // is_required: true
    string cloud_service_type_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetCloudServiceTypeRequest {
    // is_required: true
    string cloud_service_type_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message CloudServiceTypeQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string cloud_service_type_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string provider = 4;
    // is_required: false
    string group = 5;
    // is_required: false
    string cloud_service_type_key = 6;
    // is_required: false
    string service_code = 7;
    // is_required: false
    bool is_primary = 8;
    // is_required: false
    bool is_major = 9;
    // is_required: false
    string resource_type = 10;
    // is_required: true
    string domain_id = 11;
}

message CloudServiceTypeInfo {
    string cloud_service_type_id = 1;
    string name = 2;
    string provider = 3;
    string group = 4;
    string cloud_service_type_key = 5;
    string service_code = 6;
    bool is_primary = 7;
    bool is_major = 8;
    string resource_type = 9;

    google.protobuf.Struct metadata = 11;
    google.protobuf.Struct tags = 12;
    google.protobuf.ListValue labels = 13;

    string domain_id = 21;

    string created_at = 31;
    string updated_at = 32;
}

message CloudServiceTypesInfo {
    repeated CloudServiceTypeInfo results = 1;
    int32 total_count = 2;
}

message CloudServiceTypeStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}