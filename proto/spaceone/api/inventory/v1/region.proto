// A Region is a resource storing regional information from each cloud service provider. Regional data stored by the resource includes the latitude and longitude of the region.
syntax = "proto3";

package spaceone.api.inventory.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/inventory/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Region {
    
    // Creates a new Region. As the parameter `region_key`, which is automatically created when a Region is created, is in a form of `{provider}.{region_code}`, it is unique regardless of providers. You can also specify the latitude, longitude, and continent information in `tags`.
    rpc create (CreateRegionRequest) returns (RegionInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/region/create"
            body: "*"
        };
    }
    
    // Updates a specific Region. You can make changes in Region settings, including `name` and `tags`. The `tags` contain the continent, latitude, and longitude.
    rpc update (UpdateRegionRequest) returns (RegionInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/region/update"
            body: "*"
        };
    }
    
    // Deletes a specific Region. You must specify the `region_id` of the Region to delete.
    rpc delete (RegionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/inventory/v1/region/delete"
            body: "*"
        };
    }
    
    // Gets a specific Region. Prints detailed information about the Region, including `name`, `region_code`, and a location coordinate.
    rpc get (GetRegionRequest) returns (RegionInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/region/get"
            body: "*"
        };
    }
    
    // Gets a list of all Regions. You can use a query to get a filtered list of Regions.
    rpc list (RegionQuery) returns (RegionsInfo) {
        option (google.api.http) = {
            post: "/inventory/v1/region/list"
            body: "*"
        };
    }
    
    rpc stat (RegionStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/inventory/v1/region/stat"
            body: "*"
        };
    }
}

//{
//    "name": "Asia Pacific (Seoul)",
//    "region_code": "ap-northeast-2",
//    "provider": "aws",
//    "tags": {
//        "continent": "asis_pacific",
//        "longitude": "73.013805",
//        "latitude": "19.147428"
//    }
//}
message CreateRegionRequest {
    string name = 1;
    string region_code = 2;
    // +optional
    string provider = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    string domain_id = 5;
}

//{
//    "region_id": "region-e41deed3c939",
//    "name": "Region home",
//    "tags": {
//        "latitude": "6.34545",
//        "continent": "asia_pacific",
//        "longitude": "5.6433213"
//    }
//}
message UpdateRegionRequest {
    string region_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct tags = 3;
    string domain_id = 4;
}

//{
//    "region_id": "region-e41deed3c939"
//}
message RegionRequest {
    string region_id = 1;
    string domain_id = 2;
}

//{
//    "region_id": "region-f803eb00b567"
//}
message GetRegionRequest {
    string region_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {
//        "filter": [
//            {
//                "key": "name",
//                "value": "Asia Pacific",
//                "operator": "contain"
//            }
//        ]
//    }
//}
message RegionQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string region_id = 2;
    // +optional
    string name = 3;
    // +optional
    string region_key = 4;
    // +optional
    string region_code = 5;
    // +optional
    string provider = 6;
    string domain_id = 7;
}

//{
//    "region_id": "region-e41deed3c939",
//    "name": "Asia Pacific (Seoul)",
//    "region_key": "aws.ap-northeast-2",
//    "region_code": "ap-northeast-2",
//    "provider": "aws",
//    "tags": {
//        "continent": "asia_pacific",
//        "longitude": "73.013805",
//        "latitude": "19.147428"
//    },
//    "domain_id": "domain-x1b3c34v432",
//    "created_at": "2021-11-18T13:07:31.382Z",
//    "updated_at": "2022-06-17T00:07:35.469Z"
//}
message RegionInfo {
    string region_id = 1;
    string name = 2;
    string region_key = 3;
    string region_code = 4;
    string provider = 5;
    google.protobuf.Struct tags = 6;
    string domain_id = 7;
    string created_at = 8;
    string updated_at = 9;
}

//{
//    "results": [
//        {
//            "region_id": "region-e41deed3c939",
//            "name": "Asia Pacific (Mumbai)",
//            "region_key": "aws.ap-south-1",
//            "region_code": "ap-south-1",
//            "provider": "aws",
//            "tags": {
//                "continent": "asia_pacific",
//                "longitude": "73.013805",
//                "latitude": "19.147428"
//            },
//            "domain_id": "domain-x1b3c34v432",
//            "created_at": "2021-11-18T13:07:31.382Z",
//            "updated_at": "2022-06-17T00:07:35.469Z"
//        },
//        {
//            "region_id": "region-f803eb00b567",
//            "name": "Asia Pacific (Seoul)",
//            "region_key": "aws.ap-northeast-2",
//            "region_code": "ap-northeast-2",
//            "provider": "aws",
//            "tags": {
//                "latitude": "6.34545",
//                "continent": "asia_pacific",
//                "longitude": "5.6433213"
//            },
//            "domain_id": "domain-x1b3c34v432",
//            "created_at": "2022-03-21T09:08:31.961Z",
//            "updated_at": "2022-06-17T00:07:35.749Z"
//        }
//    ],
//    "total_count": 2
//}
message RegionsInfo {
    repeated RegionInfo results = 1;
    int32 total_count = 2;
}

message RegionStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}